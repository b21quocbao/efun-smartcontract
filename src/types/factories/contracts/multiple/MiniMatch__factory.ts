/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MiniMatch,
  MiniMatchInterface,
} from "../../../contracts/multiple/MiniMatch";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "descriptions",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sTotal",
        type: "uint256",
      },
    ],
    name: "MatchCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "firstTeam",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondTeam",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct MDataTypes.Score",
        name: "score",
        type: "tuple",
      },
    ],
    name: "MatchScoreUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum MDataTypes.MatchStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "MatchStatusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_descriptions",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "_startTimes",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_endTimes",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_sToken",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_sTotal",
        type: "uint256[]",
      },
    ],
    name: "createMatches",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_matchId",
        type: "uint256",
      },
    ],
    name: "info",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "description",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "firstTeam",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "secondTeam",
                type: "uint256",
              },
            ],
            internalType: "struct MDataTypes.Score",
            name: "score",
            type: "tuple",
          },
          {
            internalType: "enum MDataTypes.MatchStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "sToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sTotal",
            type: "uint256",
          },
        ],
        internalType: "struct MDataTypes.Match",
        name: "_match",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "matches",
    outputs: [
      {
        internalType: "bytes32",
        name: "description",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "firstTeam",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondTeam",
            type: "uint256",
          },
        ],
        internalType: "struct MDataTypes.Score",
        name: "score",
        type: "tuple",
      },
      {
        internalType: "enum MDataTypes.MatchStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nMatches",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setAdminPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_matchIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_point1",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_point2",
        type: "uint256[]",
      },
    ],
    name: "updateMatchScores",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_matchIds",
        type: "uint256[]",
      },
      {
        internalType: "enum MDataTypes.MatchStatus[]",
        name: "_status",
        type: "uint8[]",
      },
    ],
    name: "updateMatchStatuses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_matchIds",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_sToken",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_sTotal",
        type: "uint256[]",
      },
    ],
    name: "updateSToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6115208061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806375f3974b11610081578063a36b937d1161005b578063a36b937d146101ee578063b517d94a14610201578063f2fde38b1461021457600080fd5b806375f3974b146101ad5780638da5cb5b146101c05780638fc74690146101db57600080fd5b80634768d4ef116100b25780634768d4ef1461010c5780635397cf511461018e578063715018a6146101a557600080fd5b80630298f309146100ce5780632e340599146100e3575b600080fd5b6100e16100dc3660046111b1565b610227565b005b6100f66100f1366004611301565b6103c0565b60405161010391906113e4565b60405180910390f35b61017b61011a366004611301565b6003602081815260009283526040928390208054600182015460028301548651808801909752948301548652600483015493860193909352600582015460069092015490949293929160ff8116916101009091046001600160a01b03169087565b6040516101039796959493929190611393565b61019760015481565b604051908152602001610103565b6100e1610496565b6100e16101bb36600461108c565b6104fc565b6000546040516001600160a01b039091168152602001610103565b6100e16101e9366004611247565b610581565b6100e16101fc3660046111b1565b6106e4565b6100e161020f3660046110c6565b61087e565b6100e161022236600461106b565b610d0e565b6000546001600160a01b031633148061025457503360009081526002602052604090205460ff1615156001145b6102975760405162461bcd60e51b815260206004820152600f60248201526e10b7bbb732b91013131030b236b4b760891b60448201526064015b60405180910390fd5b846102cf5760405162461bcd60e51b8152602060048201526008602482015267073697a65203d20360c41b604482015260640161028e565b60005b858110156103b75760006003600089898581811061030057634e487b7160e01b600052603260045260246000fd5b905060200201358152602001908152602001600020905085858381811061033757634e487b7160e01b600052603260045260246000fd5b905060200201602081019061034c919061106b565b8160050160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555083838381811061039457634e487b7160e01b600052603260045260246000fd5b9050602002013581600601819055505080806103af906114cc565b9150506102d2565b50505050505050565b6103c8610f30565b600082815260036020818152604092839020835160e0810185528154815260018201548184015260028201548186015284518086019095529281015484526004808201549285019290925260608301939093526005830154919291608084019160ff9091169081111561044b57634e487b7160e01b600052602160045260246000fd5b600481111561046a57634e487b7160e01b600052602160045260246000fd5b8152600582015461010090046001600160a01b0316602082015260069091015460409091015292915050565b6000546001600160a01b031633146104f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028e565b6104fa6000610df0565b565b6000546001600160a01b031633146105565760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028e565b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b6000546001600160a01b03163314806105ae57503360009081526002602052604090205460ff1615156001145b6105ec5760405162461bcd60e51b815260206004820152600f60248201526e10b7bbb732b91013131030b236b4b760891b604482015260640161028e565b60008251116106285760405162461bcd60e51b8152602060048201526008602482015267073697a65203d20360c41b604482015260640161028e565b80518251146106695760405162461bcd60e51b815260206004820152600d60248201526c6e6f742d73616d652d73697a6560981b604482015260640161028e565b60005b82518110156106df576106cd83828151811061069857634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106106c057634e487b7160e01b600052603260045260246000fd5b6020026020010151610e58565b806106d7816114cc565b91505061066c565b505050565b6000546001600160a01b031633148061071157503360009081526002602052604090205460ff1615156001145b61074f5760405162461bcd60e51b815260206004820152600f60248201526e10b7bbb732b91013131030b236b4b760891b604482015260640161028e565b846107875760405162461bcd60e51b8152602060048201526008602482015267073697a65203d20360c41b604482015260640161028e565b848314801561079557508281145b6107d15760405162461bcd60e51b815260206004820152600d60248201526c6e6f742d73616d652d73697a6560981b604482015260640161028e565b60005b858110156103b75761086c8787838181106107ff57634e487b7160e01b600052603260045260246000fd5b90506020020135604051806040016040528088888681811061083157634e487b7160e01b600052603260045260246000fd5b90506020020135815260200186868681811061085d57634e487b7160e01b600052603260045260246000fd5b90506020020135815250610eda565b80610876816114cc565b9150506107d4565b6000546001600160a01b03163314806108ab57503360009081526002602052604090205460ff1615156001145b6108e95760405162461bcd60e51b815260206004820152600f60248201526e10b7bbb732b91013131030b236b4b760891b604482015260640161028e565b600089881480156108f957508786145b6109355760405162461bcd60e51b815260206004820152600d60248201526c6e6f742d73616d652d73697a6560981b604482015260640161028e565b8961096d5760405162461bcd60e51b8152602060048201526008602482015267073697a65203d20360c41b604482015260640161028e565b60005b8a811015610d005760015491506040518060e001604052808d8d848181106109a857634e487b7160e01b600052603260045260246000fd5b9050602002013581526020018b8b848181106109d457634e487b7160e01b600052603260045260246000fd5b905060200201358152602001898984818110610a0057634e487b7160e01b600052603260045260246000fd5b9050602002013581526020016040518060400160405280600081526020016000815250815260200160016004811115610a4957634e487b7160e01b600052602160045260246000fd5b8152602001878784818110610a6e57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610a83919061106b565b6001600160a01b03168152602001858584818110610ab157634e487b7160e01b600052603260045260246000fd5b90506020020135670de0b6b3a7640000610acb91906114ad565b815250600360008481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003016000820151816000015560208201518160010155505060808201518160050160006101000a81548160ff02191690836004811115610b5657634e487b7160e01b600052602160045260246000fd5b021790555060a08201516005820180546001600160a01b03909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff90921691909117905560c0909101516006909101557fbbcd68c36cec6c86be94f0ef67bc7b11bf85f240dbab6ccae8ef30a91a8bcb13828d8d84818110610bed57634e487b7160e01b600052603260045260246000fd5b905060200201358c8c85818110610c1457634e487b7160e01b600052603260045260246000fd5b905060200201358b8b86818110610c3b57634e487b7160e01b600052603260045260246000fd5b905060200201358a8a87818110610c6257634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610c77919061106b565b898988818110610c9757634e487b7160e01b600052603260045260246000fd5b604080519889526020898101989098528801959095525060608601929092526001600160a01b031660808501529102013560a082015260c00160405180910390a160018054906000610ce8836114cc565b91905055508080610cf8906114cc565b915050610970565b505050505050505050505050565b6000546001600160a01b03163314610d685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028e565b6001600160a01b038116610de45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161028e565b610ded81610df0565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082815260036020526040902060058101805483919060ff19166001836004811115610e9557634e487b7160e01b600052602160045260246000fd5b02179055507f2e9b211a97b8568a87af1b307eb5d8bad56b3bfd6b8cc82e1548884da1b290a8338484604051610ecd9392919061133b565b60405180910390a1505050565b600082815260036020818152604092839020845192810192909255830151600482015590517f034cde94aaa6c79f74596d39e0855a3eb31f3ffeebf4742c57c7f060490fdf9a90610ecd90339086908690611367565b6040518060e00160405280600080191681526020016000815260200160008152602001610f70604051806040016040528060008152602001600081525090565b81526020016000815260006020820181905260409091015290565b80356001600160a01b0381168114610fa257600080fd5b919050565b60008083601f840112610fb8578182fd5b50813567ffffffffffffffff811115610fcf578182fd5b6020830191508360208260051b8501011115610fea57600080fd5b9250929050565b600082601f830112611001578081fd5b8135602061101661101183611489565b611458565b82815281810190858301600585811b88018501891015611034578687fd5b865b8681101561105d57823582811061104b578889fd5b85529385019391850191600101611036565b509198975050505050505050565b60006020828403121561107c578081fd5b61108582610f8b565b9392505050565b6000806040838503121561109e578081fd5b6110a783610f8b565b9150602083013580151581146110bb578182fd5b809150509250929050565b60008060008060008060008060008060a08b8d0312156110e4578586fd5b8a3567ffffffffffffffff808211156110fb578788fd5b6111078e838f01610fa7565b909c509a5060208d013591508082111561111f578788fd5b61112b8e838f01610fa7565b909a50985060408d0135915080821115611143578788fd5b61114f8e838f01610fa7565b909850965060608d0135915080821115611167578586fd5b6111738e838f01610fa7565b909650945060808d013591508082111561118b578384fd5b506111988d828e01610fa7565b915080935050809150509295989b9194979a5092959850565b600080600080600080606087890312156111c9578182fd5b863567ffffffffffffffff808211156111e0578384fd5b6111ec8a838b01610fa7565b90985096506020890135915080821115611204578384fd5b6112108a838b01610fa7565b90965094506040890135915080821115611228578384fd5b5061123589828a01610fa7565b979a9699509497509295939492505050565b60008060408385031215611259578182fd5b823567ffffffffffffffff80821115611270578384fd5b818501915085601f830112611283578384fd5b8135602061129361101183611489565b8083825282820191508286018a848660051b89010111156112b2578889fd5b8896505b848710156112d45780358352600196909601959183019183016112b6565b50965050860135925050808211156112ea578283fd5b506112f785828601610ff1565b9150509250929050565b600060208284031215611312578081fd5b5035919050565b6005811061133757634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b0384168152602081018390526060810161135f6040830184611319565b949350505050565b6001600160a01b038416815260208082018490528251604083015282015160608201526080810161135f565b87815260208082018890526040820187905285516060830152850151608082015261010081016113c660a0830186611319565b6001600160a01b039390931660c082015260e0015295945050505050565b6000610100820190508251825260208301516020830152604083015160408301526060830151611421606084018280518252602090810151910152565b50608083015161143460a0840182611319565b506001600160a01b0360a08401511660c083015260c083015160e083015292915050565b604051601f8201601f1916810167ffffffffffffffff81118282101715611481576114816114fd565b604052919050565b600067ffffffffffffffff8211156114a3576114a36114fd565b5060051b60200190565b60008160001904831182151516156114c7576114c76114e7565b500290565b60006000198214156114e0576114e06114e7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000804000a";

type MiniMatchConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MiniMatchConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MiniMatch__factory extends ContractFactory {
  constructor(...args: MiniMatchConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MiniMatch> {
    return super.deploy(overrides || {}) as Promise<MiniMatch>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MiniMatch {
    return super.attach(address) as MiniMatch;
  }
  override connect(signer: Signer): MiniMatch__factory {
    return super.connect(signer) as MiniMatch__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MiniMatchInterface {
    return new utils.Interface(_abi) as MiniMatchInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MiniMatch {
    return new Contract(address, _abi, signerOrProvider) as MiniMatch;
  }
}
