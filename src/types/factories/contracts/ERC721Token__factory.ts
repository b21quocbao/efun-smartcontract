/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721Token,
  ERC721TokenInterface,
} from "../../contracts/ERC721Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_exchangeContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_elpTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "elpTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_elpTokenAddress",
        type: "address",
      },
    ],
    name: "setElpTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_exchangeContractAddress",
        type: "address",
      },
    ],
    name: "setExchangeContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "walletOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200241638038062002416833981016040819052620000349162000281565b8351849084906200004d9060009060208501906200010b565b508051620000639060019060208401906200010b565b505050620000806200007a620000b560201b60201c565b620000b9565b600b80546001600160a01b039384166001600160a01b031991821617909155600c805492909316911617905550620003609050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000119906200030d565b90600052602060002090601f0160209004810192826200013d576000855562000188565b82601f106200015857805160ff191683800117855562000188565b8280016001018555821562000188579182015b82811115620001885782518255916020019190600101906200016b565b50620001969291506200019a565b5090565b5b808211156200019657600081556001016200019b565b80516001600160a01b0381168114620001c957600080fd5b919050565b600082601f830112620001df578081fd5b81516001600160401b0380821115620001fc57620001fc6200034a565b604051601f8301601f19908116603f011681019082821181831017156200022757620002276200034a565b8160405283815260209250868385880101111562000243578485fd5b8491505b8382101562000266578582018301518183018401529082019062000247565b838211156200027757848385830101525b9695505050505050565b6000806000806080858703121562000297578384fd5b84516001600160401b0380821115620002ae578586fd5b620002bc88838901620001ce565b95506020870151915080821115620002d2578485fd5b50620002e187828801620001ce565b935050620002f260408601620001b1565b91506200030260608601620001b1565b905092959194509250565b600181811c908216806200032257607f821691505b602082108114156200034457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6120a680620003706000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80636a627842116100ee578063aa1009ae11610097578063c87b56dd11610071578063c87b56dd1461037b578063e985e9c51461038e578063f2fde38b146103a1578063fcd3533c146103b457600080fd5b8063aa1009ae14610342578063b88d4fde14610355578063c57de3671461036857600080fd5b80638da5cb5b116100c85780638da5cb5b1461031657806395d89b4114610327578063a22cb4651461032f57600080fd5b80636a627842146102e857806370a08231146102fb578063715018a61461030e57600080fd5b806323b872dd1161015b578063438b630011610135578063438b63001461028f5780634f6ccce7146102af5780635413899a146102c25780636352211e146102d557600080fd5b806323b872dd146102565780632f745c591461026957806342842e0e1461027c57600080fd5b8063095ea7b31161018c578063095ea7b31461021c57806318160ddd146102315780631c7a3c9d1461024357600080fd5b806301ffc9a7146101b357806306fdde03146101db578063081812fc146101f0575b600080fd5b6101c66101c1366004611e08565b6103c7565b60405190151581526020015b60405180910390f35b6101e36103f2565b6040516101d29190611f55565b6102046101fe366004611e40565b50600090565b6040516001600160a01b0390911681526020016101d2565b61022f61022a366004611ddf565b610484565b005b6008545b6040519081526020016101d2565b61022f610251366004611c49565b61059f565b61022f610264366004611c95565b61061b565b610235610277366004611ddf565b6106b6565b61022f61028a366004611c95565b61075e565b6102a261029d366004611c49565b610779565b6040516101d29190611f11565b6102356102bd366004611e40565b610837565b61022f6102d0366004611c49565b6108e9565b6102046102e3366004611e40565b610965565b6102356102f6366004611c49565b6109dc565b610235610309366004611c49565b610a9d565b61022f610b37565b600a546001600160a01b0316610204565b6101e3610b9d565b61022f61033d366004611da5565b610bac565b600c54610204906001600160a01b031681565b61022f610363366004611cd0565b610bbb565b600b54610204906001600160a01b031681565b6101e3610389366004611e40565b610c49565b6101c661039c366004611c63565b610d3e565b61022f6103af366004611c49565b610d8c565b61022f6103c2366004611e58565b610e6e565b60006001600160e01b0319821663780e9d6360e01b14806103ec57506103ec82610f3b565b92915050565b60606000805461040190611fd7565b80601f016020809104026020016040519081016040528092919081815260200182805461042d90611fd7565b801561047a5780601f1061044f5761010080835404028352916020019161047a565b820191906000526020600020905b81548152906001019060200180831161045d57829003601f168201915b5050505050905090565b600061048f82610f8b565b9050806001600160a01b0316836001600160a01b031614156105025760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061051e575061051e8133610d3e565b6105905760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104f9565b61059a8383611002565b505050565b600a546001600160a01b031633146105f95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f9565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b031633148061063957506106393382611070565b6106ab5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104f9565b61059a838383611146565b60006106c183610a9d565b82106107355760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e647300000000000000000000000000000000000000000060648201526084016104f9565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61059a83838360405180602001604052806000815250610bbb565b6060600061078683610a9d565b905060008167ffffffffffffffff8111156107b157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156107da578160200160208202803683370190505b50905060005b8281101561082f576107f285826106b6565b82828151811061081257634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061082781612012565b9150506107e0565b509392505050565b600061084260085490565b82106108b65760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e6473000000000000000000000000000000000000000060648201526084016104f9565b600882815481106108d757634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600a546001600160a01b031633146109435760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f9565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600d60205260408120546001600160a01b0316806103ec5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016104f9565b600c546000906001600160a01b03163314610a2c5760405162461bcd60e51b815260206004820152601060248201526f3737ba16bb30b634b216b9b2b73232b960811b60448201526064016104f9565b6000610a3760085490565b905082600d6000610a49846001611f68565b8152602081019190915260400160002080546001600160a01b0319166001600160a01b0392909216919091179055610a8b83610a86836001611f68565b611305565b610a96816001611f68565b9392505050565b60006001600160a01b038216610b1b5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016104f9565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610b915760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f9565b610b9b600061131f565b565b60606001805461040190611fd7565b610bb7338383611371565b5050565b610bc53383611070565b610c375760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104f9565b610c4384848484611440565b50505050565b6000818152600260205260409020546060906001600160a01b0316610cd65760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104f9565b6000610ced60408051602081019091526000815290565b90506000815111610d0d5760405180602001604052806000815250610a96565b80610d17846114be565b604051602001610d28929190611ea6565b6040516020818303038152906040529392505050565b6000610d5882600b546001600160a01b0391821691161490565b80610a9657506001600160a01b0380841660009081526005602090815260408083209386168352929052205460ff16610a96565b600a546001600160a01b03163314610de65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f9565b6001600160a01b038116610e625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104f9565b610e6b8161131f565b50565b600c546001600160a01b03163314610ebb5760405162461bcd60e51b815260206004820152601060248201526f3737ba16bb30b634b216b9b2b73232b960811b60448201526064016104f9565b6000828152600d60205260409020546001600160a01b039081169082168114610f325760405162461bcd60e51b815260206004820152602360248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776044820152623732b960e91b60648201526084016104f9565b61059a836115f0565b60006001600160e01b031982166380ac58cd60e01b1480610f6c57506001600160e01b03198216635b5e139f60e01b145b806103ec57506301ffc9a760e01b6001600160e01b03198316146103ec565b6000818152600260205260408120546001600160a01b0316806103ec5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016104f9565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061103782610f8b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166110fa5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e000000000000000000000000000000000000000060648201526084016104f9565b600061110583610f8b565b9050806001600160a01b0316846001600160a01b0316148061112c575061112c8185610d3e565b8061113e57506001600160a01b038416155b949350505050565b826001600160a01b031661115982610f8b565b6001600160a01b0316146111d55760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104f9565b6001600160a01b0382166112375760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104f9565b611242838383611697565b61124d600082611002565b6001600160a01b0383166000908152600360205260408120805460019290611276908490611f94565b90915550506001600160a01b03821660009081526003602052604081208054600192906112a4908490611f68565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610bb782826040518060200160405280600081525061174f565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156113d35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104f9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61144b848484611146565b611457848484846117cd565b610c435760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104f9565b6060816114e25750506040805180820190915260018152600360fc1b602082015290565b8160005b811561150c57806114f681612012565b91506115059050600a83611f80565b91506114e6565b60008167ffffffffffffffff81111561153557634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561155f576020820181803683370190505b5090505b841561113e57611574600183611f94565b9150611581600a8661202d565b61158c906030611f68565b60f81b8183815181106115af57634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506115e9600a86611f80565b9450611563565b60006115fb82610f8b565b905061160981600084611697565b611614600083611002565b6001600160a01b038116600090815260036020526040812080546001929061163d908490611f94565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0383166116f2576116ed81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611715565b816001600160a01b0316836001600160a01b031614611715576117158382611925565b6001600160a01b03821661172c5761059a816119c2565b826001600160a01b0316826001600160a01b03161461059a5761059a8282611a9b565b6117598383611adf565b61176660008484846117cd565b61059a5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104f9565b60006001600160a01b0384163b1561191a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611811903390899088908890600401611ed5565b602060405180830381600087803b15801561182b57600080fd5b505af192505050801561185b575060408051601f3d908101601f1916820190925261185891810190611e24565b60015b611900573d808015611889576040519150601f19603f3d011682016040523d82523d6000602084013e61188e565b606091505b5080516118f85760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104f9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061113e565b506001949350505050565b6000600161193284610a9d565b61193c9190611f94565b60008381526007602052604090205490915080821461198f576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906119d490600190611f94565b60008381526009602052604081205460088054939450909284908110611a0a57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060088381548110611a3957634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611a7f57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b6000611aa683610a9d565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216611b355760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104f9565b6000818152600260205260409020546001600160a01b031615611b9a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104f9565b611ba660008383611697565b6001600160a01b0382166000908152600360205260408120805460019290611bcf908490611f68565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b0381168114611c4457600080fd5b919050565b600060208284031215611c5a578081fd5b610a9682611c2d565b60008060408385031215611c75578081fd5b611c7e83611c2d565b9150611c8c60208401611c2d565b90509250929050565b600080600060608486031215611ca9578081fd5b611cb284611c2d565b9250611cc060208501611c2d565b9150604084013590509250925092565b60008060008060808587031215611ce5578081fd5b611cee85611c2d565b9350611cfc60208601611c2d565b925060408501359150606085013567ffffffffffffffff80821115611d1f578283fd5b818701915087601f830112611d32578283fd5b813581811115611d4457611d4461206d565b604051601f8201601f19908116603f01168101908382118183101715611d6c57611d6c61206d565b816040528281528a6020848701011115611d84578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611db7578182fd5b611dc083611c2d565b915060208301358015158114611dd4578182fd5b809150509250929050565b60008060408385031215611df1578182fd5b611dfa83611c2d565b946020939093013593505050565b600060208284031215611e19578081fd5b8135610a9681612083565b600060208284031215611e35578081fd5b8151610a9681612083565b600060208284031215611e51578081fd5b5035919050565b60008060408385031215611e6a578182fd5b82359150611c8c60208401611c2d565b60008151808452611e92816020860160208601611fab565b601f01601f19169290920160200192915050565b60008351611eb8818460208801611fab565b835190830190611ecc818360208801611fab565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611f076080830184611e7a565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611f4957835183529284019291840191600101611f2d565b50909695505050505050565b602081526000610a966020830184611e7a565b60008219821115611f7b57611f7b612041565b500190565b600082611f8f57611f8f612057565b500490565b600082821015611fa657611fa6612041565b500390565b60005b83811015611fc6578181015183820152602001611fae565b83811115610c435750506000910152565b600181811c90821680611feb57607f821691505b6020821081141561200c57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561202657612026612041565b5060010190565b60008261203c5761203c612057565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610e6b57600080fdfea164736f6c6343000804000a";

type ERC721TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Token__factory extends ContractFactory {
  constructor(...args: ERC721TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    _exchangeContractAddress: string,
    _elpTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Token> {
    return super.deploy(
      _name,
      _symbol,
      _exchangeContractAddress,
      _elpTokenAddress,
      overrides || {}
    ) as Promise<ERC721Token>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _exchangeContractAddress: string,
    _elpTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _exchangeContractAddress,
      _elpTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Token {
    return super.attach(address) as ERC721Token;
  }
  override connect(signer: Signer): ERC721Token__factory {
    return super.connect(signer) as ERC721Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TokenInterface {
    return new utils.Interface(_abi) as ERC721TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Token {
    return new Contract(address, _abi, signerOrProvider) as ERC721Token;
  }
}
