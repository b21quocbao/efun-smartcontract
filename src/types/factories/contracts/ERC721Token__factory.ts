/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721Token,
  ERC721TokenInterface,
} from "../../contracts/ERC721Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_exchangeContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_elpTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "elpTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
    ],
    name: "removeWhitelistUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_elpTokenAddress",
        type: "address",
      },
    ],
    name: "setElpTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_exchangeContractAddress",
        type: "address",
      },
    ],
    name: "setExchangeContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    name: "setTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "walletOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
    ],
    name: "whitelistUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b1238038062002b12833981016040819052620000349162000326565b8351849084906200004d906000906020850190620001b0565b50805162000063906001906020840190620001b0565b505050620000806200007a620000d960201b60201c565b620000dd565b600b80546001600160a01b038085166001600160a01b031992831617909255600c805492841692909116919091179055620000cf73e06b2e5de69cbb8dbc9b8e22bfd9e8f8a19d64c16200012f565b5050505062000405565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a546001600160a01b031633146200018e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b828054620001be90620003b2565b90600052602060002090601f016020900481019282620001e257600085556200022d565b82601f10620001fd57805160ff19168380011785556200022d565b828001600101855582156200022d579182015b828111156200022d57825182559160200191906001019062000210565b506200023b9291506200023f565b5090565b5b808211156200023b576000815560010162000240565b80516001600160a01b03811681146200026e57600080fd5b919050565b600082601f83011262000284578081fd5b81516001600160401b0380821115620002a157620002a1620003ef565b604051601f8301601f19908116603f01168101908282118183101715620002cc57620002cc620003ef565b81604052838152602092508683858801011115620002e8578485fd5b8491505b838210156200030b5785820183015181830184015290820190620002ec565b838211156200031c57848385830101525b9695505050505050565b600080600080608085870312156200033c578384fd5b84516001600160401b038082111562000353578586fd5b620003618883890162000273565b9550602087015191508082111562000377578485fd5b50620003868782880162000273565b935050620003976040860162000256565b9150620003a76060860162000256565b905092959194509250565b600181811c90821680620003c757607f821691505b60208210811415620003e957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6126fd80620004156000396000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c806370a082311161012a578063a22cb465116100bd578063c87b56dd1161008c578063e985e9c511610071578063e985e9c51461049a578063f2fde38b146104ad578063f851a440146104c057600080fd5b8063c87b56dd14610464578063d936547e1461047757600080fd5b8063a22cb46514610418578063aa1009ae1461042b578063b88d4fde1461043e578063c57de3671461045157600080fd5b806395d89b41116100f957806395d89b41146103d7578063999abb7b146103df5780639b6fbf8a146103f2578063a0355eca1461040557600080fd5b806370a08231146103a2578063715018a6146103b557806378e97925146103bd5780638da5cb5b146103c657600080fd5b80633197cbb6116101bd578063438b63001161018c5780635413899a116101715780635413899a146103695780636352211e1461037c578063704b6c021461038f57600080fd5b8063438b6300146103365780634f6ccce71461035657600080fd5b80633197cbb6146102f4578063362c0cb5146102fd57806340c10f191461031057806342842e0e1461032357600080fd5b806318160ddd116101f957806318160ddd146102a95780631c7a3c9d146102bb57806323b872dd146102ce5780632f745c59146102e157600080fd5b806301ffc9a71461022b57806306fdde0314610253578063081812fc14610268578063095ea7b314610294575b600080fd5b61023e61023936600461240b565b6104d3565b60405190151581526020015b60405180910390f35b61025b6104fe565b60405161024a9190612557565b61027c610276366004612443565b50600090565b6040516001600160a01b03909116815260200161024a565b6102a76102a236600461229e565b610590565b005b6008545b60405190815260200161024a565b6102a76102c9366004612125565b6106ab565b6102a76102dc366004612171565b610727565b6102ad6102ef36600461229e565b6107c2565b6102ad60115481565b6102a761030b366004612366565b61086a565b6102ad61031e36600461229e565b610988565b6102a7610331366004612171565b610b5f565b610349610344366004612125565b610b7a565b60405161024a9190612513565b6102ad610364366004612443565b610c38565b6102a7610377366004612125565b610cea565b61027c61038a366004612443565b610d66565b6102a761039d366004612125565b610ddd565b6102ad6103b0366004612125565b610e59565b6102a7610ef3565b6102ad60105481565b600a546001600160a01b031661027c565b61025b610f59565b6102a76103ed3660046122c7565b610f68565b6102a76104003660046122c7565b611030565b6102a761041336600461245b565b6110f7565b6102a7610426366004612264565b61115c565b600c5461027c906001600160a01b031681565b6102a761044c3660046121ac565b611167565b600b5461027c906001600160a01b031681565b61025b610472366004612443565b6111f5565b61023e610485366004612125565b600e6020526000908152604090205460ff1681565b61023e6104a836600461213f565b6112eb565b6102a76104bb366004612125565b611339565b600f5461027c906001600160a01b031681565b60006001600160e01b0319821663780e9d6360e01b14806104f857506104f88261141b565b92915050565b60606000805461050d9061262e565b80601f01602080910402602001604051908101604052809291908181526020018280546105399061262e565b80156105865780601f1061055b57610100808354040283529160200191610586565b820191906000526020600020905b81548152906001019060200180831161056957829003601f168201915b5050505050905090565b600061059b8261146b565b9050806001600160a01b0316836001600160a01b0316141561060e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061062a575061062a81336112eb565b61069c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610605565b6106a683836114e2565b505050565b600a546001600160a01b031633146107055760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610605565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b031633148061074557506107453382611550565b6107b75760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610605565b6106a6838383611622565b60006107cd83610e59565b82106108415760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610605565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600c546001600160a01b031633146108b75760405162461bcd60e51b815260206004820152601060248201526f3737ba16bb30b634b216b9b2b73232b960811b6044820152606401610605565b60005b82518110156106a65760008382815181106108e557634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516000818152600d9092526040909120549091506001600160a01b03908116908416811461096c5760405162461bcd60e51b815260206004820152602360248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776044820152623732b960e91b6064820152608401610605565b610975826117e1565b50508061098190612669565b90506108ba565b600c546000906001600160a01b031633146109d85760405162461bcd60e51b815260206004820152601060248201526f3737ba16bb30b634b216b9b2b73232b960811b6044820152606401610605565b426010541115610a2a5760405162461bcd60e51b815260206004820152601760248201527f73746172745f74696d65203c3d2074696d657374616d700000000000000000006044820152606401610605565b4260115410158015610a5457506001600160a01b0383166000908152600e602052604090205460ff165b80610a60575042601154105b610ad25760405162461bcd60e51b815260206004820152602760248201527f75736572206e6f742077686974656c6973746564206f72206e6f74207075626c60448201527f69632073616c65000000000000000000000000000000000000000000000000006064820152608401610605565b6000610add60085490565b905060015b838111610b4b5784600d6000610af884866125bf565b8152602081019190915260400160002080546001600160a01b0319166001600160a01b0392909216919091179055610b3985610b3483856125bf565b611888565b80610b4381612669565b915050610ae2565b50610b578160016125bf565b949350505050565b6106a683838360405180602001604052806000815250611167565b60606000610b8783610e59565b905060008167ffffffffffffffff811115610bb257634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610bdb578160200160208202803683370190505b50905060005b82811015610c3057610bf385826107c2565b828281518110610c1357634e487b7160e01b600052603260045260246000fd5b602090810291909101015280610c2881612669565b915050610be1565b509392505050565b6000610c4360085490565b8210610cb75760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610605565b60088281548110610cd857634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600a546001600160a01b03163314610d445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610605565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600d60205260408120546001600160a01b0316806104f85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610605565b600a546001600160a01b03163314610e375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610605565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610ed75760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610605565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610f4d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610605565b610f5760006118a2565b565b60606001805461050d9061262e565b600a546001600160a01b03163314610fc25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610605565b60005b815181101561102c576000828281518110610ff057634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03166000908152600e90915260409020805460ff191690555061102581612669565b9050610fc5565b5050565b600a546001600160a01b0316331461108a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610605565b60005b815181101561102c5760008282815181106110b857634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03166000908152600e90915260409020805460ff19166001179055506110f081612669565b905061108d565b600a546001600160a01b031633146111515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610605565b601091909155601155565b61102c3383836118f4565b6111713383611550565b6111e35760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610605565b6111ef848484846119c3565b50505050565b6000818152600260205260409020546060906001600160a01b03166112825760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610605565b600061129960408051602081019091526000815290565b905060008151116112b957604051806020016040528060008152506112e4565b806112c384611a41565b6040516020016112d49291906124a8565b6040516020818303038152906040525b9392505050565b600061130582600b546001600160a01b0391821691161490565b806112e457506001600160a01b0380841660009081526005602090815260408083209386168352929052205460ff166112e4565b600a546001600160a01b031633146113935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610605565b6001600160a01b03811661140f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610605565b611418816118a2565b50565b60006001600160e01b031982166380ac58cd60e01b148061144c57506001600160e01b03198216635b5e139f60e01b145b806104f857506301ffc9a760e01b6001600160e01b03198316146104f8565b6000818152600260205260408120546001600160a01b0316806104f85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610605565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906115178261146b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166115da5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e00000000000000000000000000000000000000006064820152608401610605565b60006115e58361146b565b9050806001600160a01b0316846001600160a01b0316148061160c575061160c81856112eb565b80610b5757505050506001600160a01b03161590565b826001600160a01b03166116358261146b565b6001600160a01b0316146116b15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610605565b6001600160a01b0382166117135760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610605565b61171e838383611b73565b6117296000826114e2565b6001600160a01b03831660009081526003602052604081208054600192906117529084906125eb565b90915550506001600160a01b03821660009081526003602052604081208054600192906117809084906125bf565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006117ec8261146b565b90506117fa81600084611b73565b6118056000836114e2565b6001600160a01b038116600090815260036020526040812080546001929061182e9084906125eb565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b61102c828260405180602001604052806000815250611c2b565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156119565760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610605565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6119ce848484611622565b6119da84848484611ca9565b6111ef5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610605565b606081611a655750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a8f5780611a7981612669565b9150611a889050600a836125d7565b9150611a69565b60008167ffffffffffffffff811115611ab857634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611ae2576020820181803683370190505b5090505b8415610b5757611af76001836125eb565b9150611b04600a86612684565b611b0f9060306125bf565b60f81b818381518110611b3257634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611b6c600a866125d7565b9450611ae6565b6001600160a01b038316611bce57611bc981600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611bf1565b816001600160a01b0316836001600160a01b031614611bf157611bf18382611e01565b6001600160a01b038216611c08576106a681611e9e565b826001600160a01b0316826001600160a01b0316146106a6576106a68282611f77565b611c358383611fbb565b611c426000848484611ca9565b6106a65760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610605565b60006001600160a01b0384163b15611df657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ced9033908990889088906004016124d7565b602060405180830381600087803b158015611d0757600080fd5b505af1925050508015611d37575060408051601f3d908101601f19168201909252611d3491810190612427565b60015b611ddc573d808015611d65576040519150601f19603f3d011682016040523d82523d6000602084013e611d6a565b606091505b508051611dd45760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610605565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b57565b506001949350505050565b60006001611e0e84610e59565b611e1891906125eb565b600083815260076020526040902054909150808214611e6b576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611eb0906001906125eb565b60008381526009602052604081205460088054939450909284908110611ee657634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060088381548110611f1557634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611f5b57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b6000611f8283610e59565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166120115760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610605565b6000818152600260205260409020546001600160a01b0316156120765760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610605565b61208260008383611b73565b6001600160a01b03821660009081526003602052604081208054600192906120ab9084906125bf565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b038116811461212057600080fd5b919050565b600060208284031215612136578081fd5b6112e482612109565b60008060408385031215612151578081fd5b61215a83612109565b915061216860208401612109565b90509250929050565b600080600060608486031215612185578081fd5b61218e84612109565b925061219c60208501612109565b9150604084013590509250925092565b600080600080608085870312156121c1578081fd5b6121ca85612109565b935060206121d9818701612109565b935060408601359250606086013567ffffffffffffffff808211156121fc578384fd5b818801915088601f83011261220f578384fd5b813581811115612221576122216126c4565b612233601f8201601f1916850161256a565b91508082528984828501011115612248578485fd5b8084840185840137810190920192909252939692955090935050565b60008060408385031215612276578182fd5b61227f83612109565b915060208301358015158114612293578182fd5b809150509250929050565b600080604083850312156122b0578182fd5b6122b983612109565b946020939093013593505050565b600060208083850312156122d9578182fd5b823567ffffffffffffffff8111156122ef578283fd5b8301601f810185136122ff578283fd5b803561231261230d8261259b565b61256a565b80828252848201915084840188868560051b8701011115612331578687fd5b8694505b8385101561235a5761234681612109565b835260019490940193918501918501612335565b50979650505050505050565b60008060408385031215612378578182fd5b823567ffffffffffffffff81111561238e578283fd5b8301601f8101851361239e578283fd5b803560206123ae61230d8361259b565b80838252828201915082850189848660051b88010111156123cd578788fd5b8795505b848610156123ef5780358352600195909501949183019183016123d1565b5095506123ff9050868201612109565b93505050509250929050565b60006020828403121561241c578081fd5b81356112e4816126da565b600060208284031215612438578081fd5b81516112e4816126da565b600060208284031215612454578081fd5b5035919050565b6000806040838503121561246d578182fd5b50508035926020909101359150565b60008151808452612494816020860160208601612602565b601f01601f19169290920160200192915050565b600083516124ba818460208801612602565b8351908301906124ce818360208801612602565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152612509608083018461247c565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561254b5783518352928401929184019160010161252f565b50909695505050505050565b6020815260006112e4602083018461247c565b604051601f8201601f1916810167ffffffffffffffff81118282101715612593576125936126c4565b604052919050565b600067ffffffffffffffff8211156125b5576125b56126c4565b5060051b60200190565b600082198211156125d2576125d2612698565b500190565b6000826125e6576125e66126ae565b500490565b6000828210156125fd576125fd612698565b500390565b60005b8381101561261d578181015183820152602001612605565b838111156111ef5750506000910152565b600181811c9082168061264257607f821691505b6020821081141561266357634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561267d5761267d612698565b5060010190565b600082612693576126936126ae565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461141857600080fdfea164736f6c6343000804000a";

type ERC721TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Token__factory extends ContractFactory {
  constructor(...args: ERC721TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    _exchangeContractAddress: string,
    _elpTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Token> {
    return super.deploy(
      _name,
      _symbol,
      _exchangeContractAddress,
      _elpTokenAddress,
      overrides || {}
    ) as Promise<ERC721Token>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _exchangeContractAddress: string,
    _elpTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _exchangeContractAddress,
      _elpTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Token {
    return super.attach(address) as ERC721Token;
  }
  override connect(signer: Signer): ERC721Token__factory {
    return super.connect(signer) as ERC721Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TokenInterface {
    return new utils.Interface(_abi) as ERC721TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Token {
    return new Contract(address, _abi, signerOrProvider) as ERC721Token;
  }
}
