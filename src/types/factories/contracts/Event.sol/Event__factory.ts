/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Event, EventInterface } from "../../../contracts/Event.sol/Event";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadlineTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "helperAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "odds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "datas",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pro",
        type: "uint256",
      },
    ],
    name: "EventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "EventResultUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadlineTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_helperAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_datas",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pro",
        type: "uint256",
      },
    ],
    name: "createSingleEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "_idx",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "events",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadlineTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "resultIndex",
        type: "uint256",
      },
      {
        internalType: "enum EDataTypes.EventStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "helperAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "_datas",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "pro",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "info",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadlineTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resultIndex",
            type: "uint256",
          },
          {
            internalType: "enum EDataTypes.EventStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "helperAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "odds",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "_datas",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "pro",
            type: "uint256",
          },
        ],
        internalType: "struct EDataTypes.Event",
        name: "_event",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nEvents",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "updateEventResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506126b5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638129fc1c1161008c5780639cdfe1ae116100665780639cdfe1ae146101cf578063bca321e5146101f0578063c422c1fa146101f9578063f2fde38b1461020c57600080fd5b80638129fc1c146101a45780638da5cb5b146101ac5780638dc654a2146101c757600080fd5b80634585e33b116100c85780634585e33b146101555780635c38eb3a146101685780636e04ff0d1461017b578063715018a61461019c57600080fd5b80630b791430146100ef5780632e340599146101205780633744199614610140575b600080fd5b6101026100fd366004612030565b61021f565b60405161011799989796959493929190612420565b60405180910390f35b61013361012e366004612030565b610304565b60405161011791906122bb565b61015361014e366004611f7e565b6104c4565b005b610153610163366004611fc3565b610665565b610153610176366004611f25565b610758565b61018e610189366004611fc3565b6107ec565b6040516101179291906122a0565b6101536108be565b610153610924565b6035546040516001600160a01b039091168152602001610117565b6101536109a7565b6101e26101dd366004612081565b610b63565b604051908152602001610117565b6101e260015481565b610153610207366004612060565b610e2d565b61015361021a366004611f0b565b61104e565b6000602081905290815260409020805460018201546002830154600384015460048501546005860154600787018054969795969495939460ff8416946101009094046001600160a01b0390811694931692919061027b90612602565b80601f01602080910402602001604051908101604052809291908181526020018280546102a790612602565b80156102f45780601f106102c9576101008083540402835291602001916102f4565b820191906000526020600020905b8154815290600101906020018083116102d757829003601f168201915b5050505050908060080154905089565b61030c611d29565b6000828152602081815260409182902082516101408101845281548152600180830154938201939093526002820154938101939093526003810154606084015260048101549091608084019160ff169081111561037957634e487b7160e01b600052602160045260246000fd5b600181111561039857634e487b7160e01b600052602160045260246000fd5b815260048201546001600160a01b0361010090910481166020808401919091526005840154909116604080840191909152600684018054825181850281018501909352808352606090940193919290919083018282801561041857602002820191906000526020600020905b815481526020019060010190808311610404575b5050505050815260200160078201805461043190612602565b80601f016020809104026020016040519081016040528092919081815260200182805461045d90612602565b80156104aa5780601f1061047f576101008083540402835291602001916104aa565b820191906000526020600020905b81548152906001019060200180831161048d57829003601f168201915b505050505081526020016008820154815250509050919050565b60008281526074602052604090205482906001600160a01b031633146105575760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f662074686560448201527f207265717565737400000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60008181526074602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a26000808084815b815181101561065b5760008282815181106105cc57634e487b7160e01b600052603260045260246000fd5b016020015160f81c9050603081108015906105ea5750603a8160ff16105b1561061b57603060ff821661060086600a6125a0565b61060a9190612489565b61061491906125bf565b9350610648565b8561062c5781945060019550610643565b600085815260208190526040812060030185905595505b600093505b508061065381612637565b9150506105a1565b5050505050505050565b60006106997f626534653833303134323533343639666132323439346230653530653035643630631ba20ccb60e11b61112d565b90506106fa6040518060400160405280600381526020016219d95d60ea1b81525084848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508694939250506111be9050565b610747604051806040016040528060048152602001630e0c2e8d60e31b815250604051806040016040528060048152602001636461746160e01b815250836111be9092919063ffffffff16565b6107528160006111e1565b50505050565b6035546001600160a01b031633146107b25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b607180546001600160a01b0319166001600160a01b038416179055607280546001600160a01b0319166001600160a01b0383161790555050565b600060608060005b6001548110156108b2576000818152602081905260409020600801541580159061082f57506000818152602081905260409020600201544210155b801561086c575060008181526020819052604081206004015460ff16600181111561086a57634e487b7160e01b600052602160045260246000fd5b145b156108a257600193508161087f82611204565b6040516020016108909291906121da565b60405160208183030381529060405291505b6108ab81612637565b90506107f4565b50809150509250929050565b6035546001600160a01b031633146109185760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b610922600061133e565b565b60006109306001611390565b90508015610948576002805461ff0019166101001790555b6103206001556109566114ad565b61095e611520565b80156109a4576002805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6035546001600160a01b03163314610a015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b6000610a156071546001600160a01b031690565b6040516370a0823160e01b81523060048201529091506001600160a01b0382169063a9059cbb90339083906370a082319060240160206040518083038186803b158015610a6157600080fd5b505afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a999190612048565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610adf57600080fd5b505af1158015610af3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b179190611f57565b6109a45760405162461bcd60e51b815260206004820152601260248201527f556e61626c6520746f207472616e736665720000000000000000000000000000604482015260640161054e565b6000888a10610bb45760405162461bcd60e51b815260206004820152601a60248201527f646561646c696e655f74696d65203e2073746172745f74696d65000000000000604482015260640161054e565b878910610c035760405162461bcd60e51b815260206004820152601860248201527f656e645f74696d65203e20646561646c696e655f74696d650000000000000000604482015260640161054e565b60015490506040518061014001604052808b81526020018a81526020018981526020016000815260200160006001811115610c4e57634e487b7160e01b600052602160045260246000fd5b8152602001886001600160a01b03168152602001846001600160a01b0316815260200187878080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509385525050506020808301889052604092830186905284825281815290829020835181559083015160018083019190915591830151600282015560608301516003820155608083015160048201805492939192909160ff19909116908381811115610d1b57634e487b7160e01b600052602160045260246000fd5b021790555060a08201516004820180547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b039384160217905560c08301516005830180546001600160a01b0319169190921617905560e08201518051610d96916006840191602090910190611d9a565b506101008201518051610db3916007840191602090910190611de5565b5061012082015181600801559050507f0ce3e4a8197f9966df36cd4efec4937e6f8c71af81fc5edaec417c6aff51dc74818b8b8b8b888c8c8c8b604051610e039a99989796959493929190612371565b60405180910390a160018054906000610e1b83612637565b91905055509998505050505050505050565b600082815260208190526040902060068101548210610e8e5760405162461bcd60e51b815260206004820152601160248201527f63616e6e6f742d66696e642d696e646578000000000000000000000000000000604482015260640161054e565b60058101546001600160a01b03163314610eea5760405162461bcd60e51b815260206004820152600c60248201527f756e617574686f72697a65640000000000000000000000000000000000000000604482015260640161054e565b4281600201541115610f3e5760405162461bcd60e51b815260206004820152601560248201527f656e645f74696d65203c3d2074696d657374616d700000000000000000000000604482015260640161054e565b4281600201546202a300610f529190612489565b1015610fa05760405162461bcd60e51b815260206004820152601e60248201527f656e645f74696d65202b20322064617973203e3d2074696d657374616d700000604482015260640161054e565b600881015415610ff25760405162461bcd60e51b815260206004820152600d60248201527f6e6f742070726f206576656e7400000000000000000000000000000000000000604482015260640161054e565b6003810182905560048101805460ff1916600117905560408051338152602081018590529081018390527f2ccc596398ffc39992c51e71000fdba89a0548fddc9aa898bd37ca38d3af73aa9060600160405180910390a1505050565b6035546001600160a01b031633146110a85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054e565b6001600160a01b0381166111245760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161054e565b6109a48161133e565b61116b6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6111a96040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6111b58186868661162a565b95945050505050565b60808301516111cd908361169d565b60808301516111dc908261169d565b505050565b6072546000906111fb906001600160a01b031684846116b4565b90505b92915050565b6060816112285750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611252578061123c81612637565b915061124b9050600a836124a1565b915061122c565b60008167ffffffffffffffff81111561127b57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156112a5576020820181803683370190505b5090505b8415611336576112ba6001836125bf565b91506112c7600a86612652565b6112d2906030612489565b60f81b8183815181106112f557634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061132f600a866124a1565b94506112a9565b949350505050565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600254600090610100900460ff1615611420578160ff1660011480156113b55750303b155b6114185760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161054e565b506000919050565b60025460ff80841691161061148e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161054e565b506002805460ff191660ff92909216919091179055600190565b919050565b600254610100900460ff166115185760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161054e565b61092261176d565b600254610100900460ff1661158b5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161054e565b670de0b6b3a7640000606755600160738190556000606855606980546001600160a01b0319908116909155606a919091556002606b557f90430203e2d9ce04f00738d355173358b054545ecb52218de9c6fb01cbd9aeaf606c557f89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6606d55606e805490911673c89bd4e1632d3a43cb03aaad5262cbe4038bc571179055565b6116686040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b61167885608001516101006117e1565b50509183526001600160a01b031660208301526001600160e01b031916604082015290565b6116aa8260038351611846565b6111dc8282611955565b6073546000906116c5816001612489565b6073556069546068548551604080880151606a5460808a01515192516000966320214ca360e11b9661170e966001600160a01b03909216959094919330938b9290602401612215565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199093169290921790915290506117638683868461197c565b9695505050505050565b600254610100900460ff166117d85760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161054e565b6109223361133e565b604080518082019091526060815260006020820152611801602083612652565b1561182957611811602083612652565b61181c9060206125bf565b6118269083612489565b91505b506020828101829052604080518085526000815290920101905290565b60178167ffffffffffffffff161161186b576107528360e0600585901b168317611ae9565b60ff8167ffffffffffffffff16116118a957611892836018611fe0600586901b1617611ae9565b506107528367ffffffffffffffff83166001611b0e565b61ffff8167ffffffffffffffff16116118e8576118d1836019611fe0600586901b1617611ae9565b506107528367ffffffffffffffff83166002611b0e565b63ffffffff8167ffffffffffffffff16116119295761191283601a611fe0600586901b1617611ae9565b506107528367ffffffffffffffff83166004611b0e565b61193e83601b611fe0600586901b1617611ae9565b506107528367ffffffffffffffff83166008611b0e565b6040805180820190915260608152600060208201526111fb83846000015151848551611b34565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f1901815282825280516020918201206000818152607490925291812080546001600160a01b0319166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a2607154604051630200057560e51b81526001600160a01b0390911690634000aea090611a3f90889087908790600401612278565b602060405180830381600087803b158015611a5957600080fd5b505af1158015611a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a919190611f57565b6113365760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261604482015262636c6560e81b606482015260840161054e565b6040805180820190915260608152600060208201526111fb8384600001515184611c1e565b604080518082019091526060815260006020820152611336848560000151518585611c7a565b6040805180820190915260608152600060208201528251821115611b5757600080fd5b6020850151611b668386612489565b1115611b9957611b9985611b8987602001518786611b849190612489565b611cfb565b611b949060026125a0565b611d12565b600080865180518760208301019350808887011115611bb85787860182525b505050602084015b60208410611bf85780518252611bd7602083612489565b9150611be4602082612489565b9050611bf16020856125bf565b9350611bc0565b51815160001960208690036101000a019081169019919091161790525083949350505050565b60408051808201909152606081526000602082015283602001518310611c5357611c538485602001516002611b9491906125a0565b835180516020858301018481535080851415611c70576001810182525b5093949350505050565b6040805180820190915260608152600060208201526020850151611c9e8584612489565b1115611cb257611cb285611b898685612489565b60006001611cc2846101006124f8565b611ccc91906125bf565b9050855183868201018583198251161781525080518487011115611cf05783860181525b509495945050505050565b600081831115611d0c5750816111fe565b50919050565b8151611d1e83836117e1565b506107528382611955565b6040518061014001604052806000815260200160008152602001600081526020016000815260200160006001811115611d7257634e487b7160e01b600052602160045260246000fd5b8152600060208201819052604082018190526060808301819052608083015260a09091015290565b828054828255906000526020600020908101928215611dd5579160200282015b82811115611dd5578251825591602001919060010190611dba565b50611de1929150611e58565b5090565b828054611df190612602565b90600052602060002090601f016020900481019282611e135760008555611dd5565b82601f10611e2c57805160ff1916838001178555611dd5565b82800160010185558215611dd55791820182811115611dd5578251825591602001919060010190611dba565b5b80821115611de15760008155600101611e59565b80356001600160a01b03811681146114a857600080fd5b600082601f830112611e94578081fd5b813567ffffffffffffffff80821115611eaf57611eaf612692565b604051601f8301601f19908116603f01168101908282118183101715611ed757611ed7612692565b81604052838152866020858801011115611eef578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611f1c578081fd5b6111fb82611e6d565b60008060408385031215611f37578081fd5b611f4083611e6d565b9150611f4e60208401611e6d565b90509250929050565b600060208284031215611f68578081fd5b81518015158114611f77578182fd5b9392505050565b60008060408385031215611f90578182fd5b82359150602083013567ffffffffffffffff811115611fad578182fd5b611fb985828601611e84565b9150509250929050565b60008060208385031215611fd5578182fd5b823567ffffffffffffffff80821115611fec578384fd5b818501915085601f830112611fff578384fd5b81358181111561200d578485fd5b86602082850101111561201e578485fd5b60209290920196919550909350505050565b600060208284031215612041578081fd5b5035919050565b600060208284031215612059578081fd5b5051919050565b60008060408385031215612072578182fd5b50508035926020909101359150565b60008060008060008060008060006101008a8c03121561209f578485fd5b8935985060208a0135975060408a013596506120bd60608b01611e6d565b955060808a013567ffffffffffffffff808211156120d9578687fd5b818c0191508c601f8301126120ec578687fd5b8135818111156120fa578788fd5b8d60208260051b850101111561210e578788fd5b6020830197508096505060a08c013591508082111561212b578485fd5b506121388c828d01611e84565b93505061214760c08b01611e6d565b915060e08a013590509295985092959850929598565b6000815180845260208085019450808401835b83811015611cf057815187529582019590820190600101612170565b600081518084526121a48160208601602086016125d6565b601f01601f19169290920160200192915050565b600281106121d657634e487b7160e01b600052602160045260246000fd5b9052565b600083516121ec8184602088016125d6565b8351908301906122008183602088016125d6565b600160fd1b9101908152600101949350505050565b60006101006001600160a01b03808c1684528a602085015289604085015280891660608501525063ffffffff60e01b871660808401528560a08401528460c08401528060e08401526122698184018561218c565b9b9a5050505050505050505050565b6001600160a01b03841681528260208201526060604082015260006111b5606083018461218c565b8215158152604060208201526000611336604083018461218c565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152600060808301516122f860a08401826121b8565b5060a08301516001600160a01b03811660c08401525060c08301516001600160a01b03811660e08401525060e0830151610140610100818186015261234161016086018461215d565b9250808601519050610120601f198685030181870152612361848361218c565b9601519190940152509192915050565b60006101208c83528b60208401528a60408401528960608401526001600160a01b03808a16608085015280891660a0850152508060c08401528581840152506101407f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8611156123df578182fd5b8560051b8088838601378301818101838152848203830160e0860152612405818861218c565b9350505050826101008301529b9a5050505050505050505050565b60006101208b83528a602084015289604084015288606084015261244760808401896121b8565b6001600160a01b0387811660a0850152861660c084015260e083018190526124718184018661218c565b915050826101008301529a9950505050505050505050565b6000821982111561249c5761249c612666565b500190565b6000826124b0576124b061267c565b500490565b600181815b808511156124f05781600019048211156124d6576124d6612666565b808516156124e357918102915b93841c93908002906124ba565b509250929050565b60006111fb838360008261250e575060016111fe565b8161251b575060006111fe565b8160018114612531576002811461253b57612557565b60019150506111fe565b60ff84111561254c5761254c612666565b50506001821b6111fe565b5060208310610133831016604e8410600b841016171561257a575081810a6111fe565b61258483836124b5565b806000190482111561259857612598612666565b029392505050565b60008160001904831182151516156125ba576125ba612666565b500290565b6000828210156125d1576125d1612666565b500390565b60005b838110156125f15781810151838201526020016125d9565b838111156107525750506000910152565b600181811c9082168061261657607f821691505b60208210811415611d0c57634e487b7160e01b600052602260045260246000fd5b600060001982141561264b5761264b612666565b5060010190565b6000826126615761266161267c565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000804000a";

type EventConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Event__factory extends ContractFactory {
  constructor(...args: EventConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Event> {
    return super.deploy(overrides || {}) as Promise<Event>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Event {
    return super.attach(address) as Event;
  }
  override connect(signer: Signer): Event__factory {
    return super.connect(signer) as Event__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventInterface {
    return new utils.Interface(_abi) as EventInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Event {
    return new Contract(address, _abi, signerOrProvider) as Event;
  }
}
