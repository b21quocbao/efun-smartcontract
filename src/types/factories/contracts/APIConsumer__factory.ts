/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  APIConsumer,
  APIConsumerInterface,
} from "../../contracts/APIConsumer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "volume",
        type: "uint256",
      },
    ],
    name: "RequestVolume",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_volume",
        type: "uint256",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestVolumeData",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "volume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016004553480156200001657600080fd5b5033806000816200006e5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600680546001600160a01b0319166001600160a01b0384811691909117909155811615620000a157620000a1816200013f565b505050620000c97301be23585060835e02b77ef475b0cc51aa1e0709620001ec60201b60201c565b600380546001600160a01b03191673f3fbb7f3391f62c8fe53f89b41dfc8159ee9653f1790557f6361393833363663633733313439353762386330313263373266303561656562600955600a6200012a670de0b6b3a764000060016200022f565b6200013691906200020e565b600a556200025b565b6001600160a01b0381163314156200019a5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640162000065565b600780546001600160a01b0319166001600160a01b03838116918217909255600654604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000826200022a57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156200025657634e487b7160e01b81526011600452602481fd5b500290565b611234806200026b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ba5780638dc654a2146100d5578063c618a1e4146100dd578063f2fde38b146100e657600080fd5b80634357855e146100825780636021abac1461009757806379ba5097146100b2575b600080fd5b610095610090366004610f08565b6100f9565b005b61009f610210565b6040519081526020015b60405180910390f35b61009561032c565b6006546040516001600160a01b0390911681526020016100a9565b6100956103e1565b61009f60085481565b6100956100f4366004610eba565b61054e565b60008281526005602052604090205482906001600160a01b0316331461018c5760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f662074686560448201527f207265717565737400000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a2827f673b38182859a514d734bdfcb49d3a05c4a641dec9311d9894c9717bcb79af768360405161020191815260200190565b60405180910390a25060085550565b60008061022760095430634357855e60e01b61055f565b90506102696040518060400160405280600381526020016219d95d60ea1b8152506040518060800160405280604981526020016111df604991398391906105f0565b6102cf604051806040016040528060048152602001630e0c2e8d60e31b8152506040518060400160405280601881526020017f5241572c4554482c5553442c564f4c554d453234484f55520000000000000000815250836105f09092919063ffffffff16565b60408051808201909152600581527f74696d65730000000000000000000000000000000000000000000000000000006020820152670de0b6b3a76400009061031990839083610613565b61032582600a54610631565b9250505090565b6007546001600160a01b031633146103865760405162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152606401610183565b600680546001600160a01b0319808216339081179093556007805490911690556040516001600160a01b03909116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6103e9610654565b60006103fd6002546001600160a01b031690565b6040516370a0823160e01b81523060048201529091506001600160a01b0382169063a9059cbb90339083906370a082319060240160206040518083038186803b15801561044957600080fd5b505afa15801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190610f29565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156104c757600080fd5b505af11580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190610ee8565b61054b5760405162461bcd60e51b815260206004820152601260248201527f556e61626c6520746f207472616e7366657200000000000000000000000000006044820152606401610183565b50565b610556610654565b61054b816106b0565b61059d6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6105db6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6105e78186868661075b565b95945050505050565b60808301516105ff90836107d7565b608083015161060e90826107d7565b505050565b608083015161062290836107d7565b608083015161060e90826107ee565b60035460009061064b906001600160a01b03168484610852565b90505b92915050565b6006546001600160a01b031633146106ae5760405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152606401610183565b565b6001600160a01b0381163314156107095760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610183565b600780546001600160a01b0319166001600160a01b03838116918217909255600654604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b6107996040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6107a985608001516101006108fa565b50508284526001600160a01b03821660208501526001600160e01b031981166040850152835b949350505050565b6107e4826003835161095f565b61060e8282610a74565b67ffffffffffffffff1981121561080d576108098282610a9b565b5050565b67ffffffffffffffff811315610827576108098282610add565b6000811261083b576108098260008361095f565b61080982600161084d84600019611139565b61095f565b600454600090610863816001611017565b600455835160408086015160808701515191516000936320214ca360e11b9361089b9386938493923092918a91600191602401610f8c565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199093169290921790915290506108f086838684610b00565b9695505050505050565b60408051808201909152606081526000602082015261091a6020836111a8565b156109425761092a6020836111a8565b610935906020611191565b61093f9083611017565b91505b506020828101829052604080518085526000815290920101905290565b60178167ffffffffffffffff161161098a576109848360e0600585901b168317610c6d565b50505050565b60ff8167ffffffffffffffff16116109c8576109b1836018611fe0600586901b1617610c6d565b506109848367ffffffffffffffff83166001610c92565b61ffff8167ffffffffffffffff1611610a07576109f0836019611fe0600586901b1617610c6d565b506109848367ffffffffffffffff83166002610c92565b63ffffffff8167ffffffffffffffff1611610a4857610a3183601a611fe0600586901b1617610c6d565b506109848367ffffffffffffffff83166004610c92565b610a5d83601b611fe0600586901b1617610c6d565b506109848367ffffffffffffffff83166008610c92565b60408051808201909152606081526000602082015261064b83846000015151848551610cb8565b610aa68260c3610c6d565b5061080982610ab783600019611139565b604051602001610ac991815260200190565b604051602081830303815290604052610da2565b610ae88260c2610c6d565b506108098282604051602001610ac991815260200190565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f1901815282825280516020918201206000818152600590925291812080546001600160a01b0319166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a2600254604051630200057560e51b81526001600160a01b0390911690634000aea090610bc390889087908790600401610fef565b602060405180830381600087803b158015610bdd57600080fd5b505af1158015610bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c159190610ee8565b6107cf5760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261604482015262636c6560e81b6064820152608401610183565b60408051808201909152606081526000602082015261064b8384600001515184610daf565b6040805180820190915260608152600060208201526107cf848560000151518585610e0b565b6040805180820190915260608152600060208201528251821115610cdb57600080fd5b6020850151610cea8386611017565b1115610d1d57610d1d85610d0d87602001518786610d089190611017565b610e8c565b610d1890600261111a565b610ea3565b600080865180518760208301019350808887011115610d3c5787860182525b505050602084015b60208410610d7c5780518252610d5b602083611017565b9150610d68602082611017565b9050610d75602085611191565b9350610d44565b51815160001960208690036101000a019081169019919091161790525083949350505050565b6107e4826002835161095f565b60408051808201909152606081526000602082015283602001518310610de457610de48485602001516002610d18919061111a565b835180516020858301018481535080851415610e01576001810182525b5093949350505050565b6040805180820190915260608152600060208201526020850151610e2f8584611017565b1115610e4357610e4385610d0d8685611017565b60006001610e5384610100611072565b610e5d9190611191565b9050855183868201018583198251161781525080518487011115610e815783860181525b509495945050505050565b600081831115610e9d57508161064e565b50919050565b8151610eaf83836108fa565b506109848382610a74565b600060208284031215610ecb578081fd5b81356001600160a01b0381168114610ee1578182fd5b9392505050565b600060208284031215610ef9578081fd5b81518015158114610ee1578182fd5b60008060408385031215610f1a578081fd5b50508035926020909101359150565b600060208284031215610f3a578081fd5b5051919050565b60008151808452815b81811015610f6657602081850181015186830182015201610f4a565b81811115610f775782602083870101525b50601f01601f19169290920160200192915050565b60006101006001600160a01b03808c1684528a602085015289604085015280891660608501525063ffffffff60e01b871660808401528560a08401528460c08401528060e0840152610fe081840185610f41565b9b9a5050505050505050505050565b6001600160a01b03841681528260208201526060604082015260006105e76060830184610f41565b6000821982111561102a5761102a6111c8565b500190565b600181815b8085111561106a578160001904821115611050576110506111c8565b8085161561105d57918102915b93841c9390800290611034565b509250929050565b600061064b83836000826110885750600161064e565b816110955750600061064e565b81600181146110ab57600281146110b5576110d1565b600191505061064e565b60ff8411156110c6576110c66111c8565b50506001821b61064e565b5060208310610133831016604e8410600b84101617156110f4575081810a61064e565b6110fe838361102f565b8060001904821115611112576111126111c8565b029392505050565b6000816000190483118215151615611134576111346111c8565b500290565b60008083128015600160ff1b850184121615611157576111576111c8565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01831381161561118b5761118b6111c8565b50500390565b6000828210156111a3576111a36111c8565b500390565b6000826111c357634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052601160045260246000fdfe68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344a164736f6c6343000804000a";

type APIConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: APIConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class APIConsumer__factory extends ContractFactory {
  constructor(...args: APIConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<APIConsumer> {
    return super.deploy(overrides || {}) as Promise<APIConsumer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): APIConsumer {
    return super.attach(address) as APIConsumer;
  }
  override connect(signer: Signer): APIConsumer__factory {
    return super.connect(signer) as APIConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): APIConsumerInterface {
    return new utils.Interface(_abi) as APIConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): APIConsumer {
    return new Contract(address, _abi, signerOrProvider) as APIConsumer;
  }
}
