/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  APIConsumer,
  APIConsumerInterface,
} from "../../contracts/APIConsumer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "id",
        type: "string",
      },
    ],
    name: "RequestFirstId",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestFirstId",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016004553480156200001657600080fd5b5033806000816200006e5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600680546001600160a01b0319166001600160a01b0384811691909117909155811615620000a157620000a1816200013f565b505050620000c97301be23585060835e02b77ef475b0cc51aa1e0709620001ec60201b60201c565b600380546001600160a01b03191673d3a145ce722a68869ec7aed8f08a9ab44450fa311790557f6265346538333031343235333436396661323234393462306535306530356436600955600a6200012a670de0b6b3a764000060016200022f565b6200013691906200020e565b600a556200025b565b6001600160a01b0381163314156200019a5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640162000065565b600780546001600160a01b0319166001600160a01b03838116918217909255600654604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000826200022a57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156200025657634e487b7160e01b81526011600452602481fd5b500290565b6112b5806200026b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ba5780638dc654a2146100d5578063af640d0f146100dd578063f2fde38b146100f257600080fd5b806309323a6a14610082578063374419961461009d57806379ba5097146100b2575b600080fd5b61008a610105565b6040519081526020015b60405180910390f35b6100b06100ab366004610eed565b6101bd565b005b6100b06102e4565b6006546040516001600160a01b039091168152602001610094565b6100b0610399565b6100e5610506565b6040516100949190611091565b6100b0610100366004610e9f565b610594565b60008061011c60095430633744199660e01b6105a5565b905061015e6040518060400160405280600381526020016219d95d60ea1b8152506040518060800160405280604a815260200161125f604a9139839190610636565b6101ab604051806040016040528060048152602001630e0c2e8d60e31b815250604051806040016040528060048152602001630c0b1a5960e21b815250836106369092919063ffffffff16565b6101b781600a54610659565b91505090565b60008281526005602052604090205482906001600160a01b031633146102505760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f662074686560448201527f207265717565737400000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a2827f5b72487f892feba565865a27f191da8fb1e852651bd966bfb0a41fc272c54aea836040516102c39190611091565b60405180910390a281516102de906008906020850190610e06565b50505050565b6007546001600160a01b0316331461033e5760405162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152606401610247565b600680546001600160a01b0319808216339081179093556007805490911690556040516001600160a01b03909116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6103a161067c565b60006103b56002546001600160a01b031690565b6040516370a0823160e01b81523060048201529091506001600160a01b0382169063a9059cbb90339083906370a082319060240160206040518083038186803b15801561040157600080fd5b505afa158015610415573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104399190610fa3565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561047f57600080fd5b505af1158015610493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b79190610ecd565b6105035760405162461bcd60e51b815260206004820152601260248201527f556e61626c6520746f207472616e7366657200000000000000000000000000006044820152606401610247565b50565b60088054610513906111dd565b80601f016020809104026020016040519081016040528092919081815260200182805461053f906111dd565b801561058c5780601f106105615761010080835404028352916020019161058c565b820191906000526020600020905b81548152906001019060200180831161056f57829003601f168201915b505050505081565b61059c61067c565b610503816106d8565b6105e36040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6106216040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b61062d81868686610783565b95945050505050565b608083015161064590836107ff565b608083015161065490826107ff565b505050565b600354600090610673906001600160a01b03168484610816565b90505b92915050565b6006546001600160a01b031633146106d65760405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152606401610247565b565b6001600160a01b0381163314156107315760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610247565b600780546001600160a01b0319166001600160a01b03838116918217909255600654604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b6107c16040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6107d185608001516101006108be565b50508284526001600160a01b03821660208501526001600160e01b031981166040850152835b949350505050565b61080c8260038351610923565b6106548282610a32565b6004546000906108278160016110a4565b600455835160408086015160808701515191516000936320214ca360e11b9361085f9386938493923092918a91600191602401611006565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199093169290921790915290506108b486838684610a59565b9695505050505050565b6040805180820190915260608152600060208201526108de602083611212565b15610906576108ee602083611212565b6108f99060206111c6565b61090390836110a4565b91505b506020828101829052604080518085526000815290920101905290565b60178167ffffffffffffffff1611610948576102de8360e0600585901b168317610bc6565b60ff8167ffffffffffffffff16116109865761096f836018611fe0600586901b1617610bc6565b506102de8367ffffffffffffffff83166001610beb565b61ffff8167ffffffffffffffff16116109c5576109ae836019611fe0600586901b1617610bc6565b506102de8367ffffffffffffffff83166002610beb565b63ffffffff8167ffffffffffffffff1611610a06576109ef83601a611fe0600586901b1617610bc6565b506102de8367ffffffffffffffff83166004610beb565b610a1b83601b611fe0600586901b1617610bc6565b506102de8367ffffffffffffffff83166008610beb565b60408051808201909152606081526000602082015261067383846000015151848551610c11565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f1901815282825280516020918201206000818152600590925291812080546001600160a01b0319166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a2600254604051630200057560e51b81526001600160a01b0390911690634000aea090610b1c90889087908790600401611069565b602060405180830381600087803b158015610b3657600080fd5b505af1158015610b4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6e9190610ecd565b6107f75760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261604482015262636c6560e81b6064820152608401610247565b6040805180820190915260608152600060208201526106738384600001515184610cfb565b6040805180820190915260608152600060208201526107f7848560000151518585610d57565b6040805180820190915260608152600060208201528251821115610c3457600080fd5b6020850151610c4383866110a4565b1115610c7657610c7685610c6687602001518786610c6191906110a4565b610dd8565b610c719060026111a7565b610def565b600080865180518760208301019350808887011115610c955787860182525b505050602084015b60208410610cd55780518252610cb46020836110a4565b9150610cc16020826110a4565b9050610cce6020856111c6565b9350610c9d565b51815160001960208690036101000a019081169019919091161790525083949350505050565b60408051808201909152606081526000602082015283602001518310610d3057610d308485602001516002610c7191906111a7565b835180516020858301018481535080851415610d4d576001810182525b5093949350505050565b6040805180820190915260608152600060208201526020850151610d7b85846110a4565b1115610d8f57610d8f85610c6686856110a4565b60006001610d9f846101006110ff565b610da991906111c6565b9050855183868201018583198251161781525080518487011115610dcd5783860181525b509495945050505050565b600081831115610de9575081610676565b50919050565b8151610dfb83836108be565b506102de8382610a32565b828054610e12906111dd565b90600052602060002090601f016020900481019282610e345760008555610e7a565b82601f10610e4d57805160ff1916838001178555610e7a565b82800160010185558215610e7a579182015b82811115610e7a578251825591602001919060010190610e5f565b50610e86929150610e8a565b5090565b5b80821115610e865760008155600101610e8b565b600060208284031215610eb0578081fd5b81356001600160a01b0381168114610ec6578182fd5b9392505050565b600060208284031215610ede578081fd5b81518015158114610ec6578182fd5b60008060408385031215610eff578081fd5b82359150602083013567ffffffffffffffff80821115610f1d578283fd5b818501915085601f830112610f30578283fd5b813581811115610f4257610f42611248565b604051601f8201601f19908116603f01168101908382118183101715610f6a57610f6a611248565b81604052828152886020848701011115610f82578586fd5b82602086016020830137856020848301015280955050505050509250929050565b600060208284031215610fb4578081fd5b5051919050565b60008151808452815b81811015610fe057602081850181015186830182015201610fc4565b81811115610ff15782602083870101525b50601f01601f19169290920160200192915050565b60006101006001600160a01b03808c1684528a602085015289604085015280891660608501525063ffffffff60e01b871660808401528560a08401528460c08401528060e084015261105a81840185610fbb565b9b9a5050505050505050505050565b6001600160a01b038416815282602082015260606040820152600061062d6060830184610fbb565b6020815260006106736020830184610fbb565b600082198211156110b7576110b7611232565b500190565b600181815b808511156110f75781600019048211156110dd576110dd611232565b808516156110ea57918102915b93841c93908002906110c1565b509250929050565b6000610673838360008261111557506001610676565b8161112257506000610676565b816001811461113857600281146111425761115e565b6001915050610676565b60ff84111561115357611153611232565b50506001821b610676565b5060208310610133831016604e8410600b8410161715611181575081810a610676565b61118b83836110bc565b806000190482111561119f5761119f611232565b029392505050565b60008160001904831182151516156111c1576111c1611232565b500290565b6000828210156111d8576111d8611232565b500390565b600181811c908216806111f157607f821691505b60208210811415610de957634e487b7160e01b600052602260045260246000fd5b60008261122d57634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe68747470733a2f2f6170692e636f696e6765636b6f2e636f6d2f6170692f76332f636f696e732f6d61726b6574733f76735f63757272656e63793d757364267065725f706167653d3130a164736f6c6343000804000a";

type APIConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: APIConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class APIConsumer__factory extends ContractFactory {
  constructor(...args: APIConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<APIConsumer> {
    return super.deploy(overrides || {}) as Promise<APIConsumer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): APIConsumer {
    return super.attach(address) as APIConsumer;
  }
  override connect(signer: Signer): APIConsumer__factory {
    return super.connect(signer) as APIConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): APIConsumerInterface {
    return new utils.Interface(_abi) as APIConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): APIConsumer {
    return new Contract(address, _abi, signerOrProvider) as APIConsumer;
  }
}
