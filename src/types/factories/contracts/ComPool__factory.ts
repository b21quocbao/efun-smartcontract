/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ComPool, ComPoolInterface } from "../../contracts/ComPool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allocations",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "alloc",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_elpToken",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "capacity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idx",
        type: "uint256",
      },
    ],
    name: "getAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "potentialLoss",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_names",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "_allocs",
        type: "uint256[]",
      },
    ],
    name: "setDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_potentialLoss",
        type: "uint256",
      },
    ],
    name: "setPotentialLossPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611411806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063821ef4371161008c578063da35a26f11610066578063da35a26f146101a8578063daea85c5146101bb578063f2fde38b146101ce578063fc0c546a146101e157600080fd5b8063821ef4371461015d5780638da5cb5b14610170578063b6b55f251461019557600080fd5b80635f25a015116100bd5780635f25a01514610137578063715018a61461014c578063752746eb1461015457600080fd5b80630a2642bf146100e45780635a5804b31461010e5780635cfc1a511461012f575b600080fd5b6100f76100f23660046111d2565b6101f4565b604051610105929190611288565b60405180910390f35b61012161011c3660046111d2565b610298565b604051908152602001610105565b6101216102ec565b61014a6101453660046111d2565b61036d565b005b61014a6103d1565b61012160685481565b61014a61016b366004611092565b610437565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610105565b61014a6101a33660046111d2565b610617565b61014a6101b6366004611202565b610632565b61014a6101c9366004611078565b610847565b61014a6101dc366004611078565b610929565b60665461017d906001600160a01b031681565b60676020526000908152604090208054819061020f90611382565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90611382565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050908060010154905082565b6065546068546000838152606760205260408120600101549092919082906102be6102ec565b6102c89190611337565b6102d29190611317565b6102dc9190611337565b6102e69190611317565b92915050565b6066546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561033057600080fd5b505afa158015610344573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036891906111ea565b905090565b6033546001600160a01b031633146103cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b606855565b6033546001600160a01b0316331461042b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c3565b6104356000610a04565b565b6033546001600160a01b031633146104915760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c3565b80518251146104e25760405162461bcd60e51b815260206004820152601060248201527f6e6f742d6d617463682d6c656e6774680000000000000000000000000000000060448201526064016103c3565b6000805b82518110156105c05782818151811061050f57634e487b7160e01b600052603260045260246000fd5b60200260200101518261052291906112ff565b915083818151811061054457634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008381526067835260409020815161056e93919290910190610f59565b5082818151811061058f57634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008381526067909252604090912060010155806105b8816113bd565b9150506104e6565b5060655481146106125760405162461bcd60e51b815260206004820152601960248201527f6e6f742d657175616c2d68756e647265642d70657263656e740000000000000060448201526064016103c3565b505050565b60665461062f906001600160a01b0316333084610a63565b50565b600061063e6001610ad8565b90508015610656576000805461ff0019166101001790555b60658390556066805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841617905561068b610bf3565b6040805160808101825260059181019182527f53706f7274000000000000000000000000000000000000000000000000000000606082015290815260655460208201906064906106dc906050611337565b6106e69190611317565b90526000805260676020908152815180517fd4e1ac8b62c3ff1e2c1b7113742533b8310ce5ab8a8767ead9ba8b250c7e3cc992610727928492910190610f59565b506020918201516001909101556040805160808101825260069181019182527f4f7468657273000000000000000000000000000000000000000000000000000060608201529081526065549091820190606490610785906014611337565b61078f9190611317565b9052600160005260676020908152815180517f6bee784efeb983674392298ab585b22866bedf00ebb0eea949d1e66f3f50e71d926107d1928492910190610f59565b5060208201518160010155905050606460655460026107f09190611337565b6107fa9190611317565b6068558015610612576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6033546001600160a01b031633146108a15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c3565b60665460405163095ea7b360e01b81526001600160a01b0383811660048301526000196024830181905292169063095ea7b390604401602060405180830381600087803b1580156108f157600080fd5b505af1158015610905573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061291906111b2565b6033546001600160a01b031633146109835760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c3565b6001600160a01b0381166109ff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103c3565b61062f815b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610ad2908590610c66565b50505050565b60008054610100900460ff1615610b66578160ff166001148015610afb5750303b155b610b5e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103c3565b506000919050565b60005460ff808416911610610bd45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103c3565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610c5e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103c3565b610435610d4b565b6000610cbb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610dbf9092919063ffffffff16565b8051909150156106125780806020019051810190610cd991906111b2565b6106125760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103c3565b600054610100900460ff16610db65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103c3565b61043533610a04565b6060610dce8484600085610dd8565b90505b9392505050565b606082471015610e505760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103c3565b6001600160a01b0385163b610ea75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103c3565b600080866001600160a01b03168587604051610ec39190611259565b60006040518083038185875af1925050503d8060008114610f00576040519150601f19603f3d011682016040523d82523d6000602084013e610f05565b606091505b5091509150610f15828286610f20565b979650505050505050565b60608315610f2f575081610dd1565b825115610f3f5782518084602001fd5b8160405162461bcd60e51b81526004016103c39190611275565b828054610f6590611382565b90600052602060002090601f016020900481019282610f875760008555610fcd565b82601f10610fa057805160ff1916838001178555610fcd565b82800160010185558215610fcd579182015b82811115610fcd578251825591602001919060010190610fb2565b50610fd9929150610fdd565b5090565b5b80821115610fd95760008155600101610fde565b80356001600160a01b0381168114610bee57600080fd5b600082601f830112611019578081fd5b8135602061102e611029836112db565b6112aa565b80838252828201915082860187848660051b890101111561104d578586fd5b855b8581101561106b5781358452928401929084019060010161104f565b5090979650505050505050565b600060208284031215611089578081fd5b610dd182610ff2565b60008060408084860312156110a5578182fd5b833567ffffffffffffffff808211156110bc578384fd5b818601915086601f8301126110cf578384fd5b813560206110df611029836112db565b8083825282820191508286018b848660051b89010111156110fe578889fd5b885b8581101561118257813587811115611116578a8bfd5b8801603f81018e13611126578a8bfd5b858101358881111561113a5761113a6113ee565b61114c601f8201601f191688016112aa565b8181528f8c83850101111561115f578c8dfd5b818c84018983013790810187018c90528552509284019290840190600101611100565b5090985050508701359350508083111561119a578384fd5b50506111a885828601611009565b9150509250929050565b6000602082840312156111c3578081fd5b81518015158114610dd1578182fd5b6000602082840312156111e3578081fd5b5035919050565b6000602082840312156111fb578081fd5b5051919050565b60008060408385031215611214578182fd5b8235915061122460208401610ff2565b90509250929050565b60008151808452611245816020860160208601611356565b601f01601f19169290920160200192915050565b6000825161126b818460208701611356565b9190910192915050565b602081526000610dd1602083018461122d565b60408152600061129b604083018561122d565b90508260208301529392505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156112d3576112d36113ee565b604052919050565b600067ffffffffffffffff8211156112f5576112f56113ee565b5060051b60200190565b60008219821115611312576113126113d8565b500190565b60008261133257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611351576113516113d8565b500290565b60005b83811015611371578181015183820152602001611359565b83811115610ad25750506000910152565b600181811c9082168061139657607f821691505b602082108114156113b757634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156113d1576113d16113d8565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000804000a";

type ComPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComPool__factory extends ContractFactory {
  constructor(...args: ComPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ComPool> {
    return super.deploy(overrides || {}) as Promise<ComPool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ComPool {
    return super.attach(address) as ComPool;
  }
  override connect(signer: Signer): ComPool__factory {
    return super.connect(signer) as ComPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComPoolInterface {
    return new utils.Interface(_abi) as ComPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ComPool {
    return new Contract(address, _abi, signerOrProvider) as ComPool;
  }
}
