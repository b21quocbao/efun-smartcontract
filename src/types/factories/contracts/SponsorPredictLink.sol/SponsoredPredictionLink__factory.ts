/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SponsoredPredictionLink,
  SponsoredPredictionLinkInterface,
} from "../../../contracts/SponsorPredictLink.sol/SponsoredPredictionLink";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "option",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PredictionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    inputs: [],
    name: "bnbRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_matchId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sponsorReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_matchId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBNB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeEFUN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getMatchInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[8]",
            name: "predictionAmount",
            type: "uint256[8]",
          },
        ],
        internalType: "struct SDataTypesExt.SPredictStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPredictInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[8]",
            name: "predictionAmount",
            type: "uint256[8]",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct SDataTypesExt.SPrediction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
    ],
    name: "getRewardTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
    ],
    name: "getSponsorToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
    ],
    name: "getSponsorTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "includeSponsorTokenBack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotCollector",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "matchData",
    outputs: [
      {
        internalType: "contract SIMatchExt",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "participateRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_matchId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_option",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "predict",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "predictions",
    outputs: [
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bnbRate",
        type: "uint256",
      },
    ],
    name: "setBnbRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeBNB",
        type: "uint256",
      },
    ],
    name: "setFeeBNB",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeEFUN",
        type: "uint256",
      },
    ],
    name: "setFeeEFUN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotRate",
        type: "uint256",
      },
    ],
    name: "setFeeLot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lotCollector",
        type: "address",
      },
    ],
    name: "setLotCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_matchData",
        type: "address",
      },
    ],
    name: "setMatchData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isRewardSponsorToken",
        type: "bool",
      },
    ],
    name: "setRewardSponsorToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_matchId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setRewardTotal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_matchId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setSponsorTotal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526127106002556064600c55600d805460ff1916905534801561002557600080fd5b5061002f33610038565b60018055610088565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6124dd806100976000396000f3fe6080604052600436106102195760003560e01c8063a42dce801161011d578063e40104ee116100b0578063f2fde38b1161007f578063f7c618c111610064578063f7c618c11461065d578063fa82a4771461067d578063fab81d2a1461069d57600080fd5b8063f2fde38b1461061d578063f56ca9c21461063d57600080fd5b8063e40104ee14610596578063e41cbdef146105b0578063e7027a01146105d0578063f1504686146105f057600080fd5b8063c2455a58116100ec578063c2455a58146104f8578063c415b95c14610525578063cfa64afd14610545578063dabb16411461058057600080fd5b8063a42dce8014610441578063b492b33114610461578063c0854f401461048e578063c19360d2146104e257600080fd5b8063715018a6116101b05780638bf9dfe31161017f57806395ccea671161016457806395ccea67146103dc5780639cb1a43b146103fc5780639d7b631f1461041c57600080fd5b80638bf9dfe31461038a5780638da5cb5b146103aa57600080fd5b8063715018a6146103225780637acdaf83146103375780638a60091c1461034a5780638aee81271461036a57600080fd5b80633a49d552116101ec5780633a49d552146102b65780634c442f53146102d65780636b578cf5146102f65780636da1709e1461030c57600080fd5b80630d599d701461021e578063109fea86146102405780631f6fb92a14610269578063329f23f114610296575b600080fd5b34801561022a57600080fd5b5061023e610239366004611fbb565b6106bd565b005b34801561024c57600080fd5b5061025660085481565b6040519081526020015b60405180910390f35b34801561027557600080fd5b506102896102843660046120b6565b61071d565b60405161026091906122b7565b3480156102a257600080fd5b5061023e6102b1366004612086565b61078a565b3480156102c257600080fd5b5061023e6102d1366004611f34565b6107d7565b3480156102e257600080fd5b5061023e6102f1366004612086565b610841565b34801561030257600080fd5b50610256600a5481565b34801561031857600080fd5b50610256600b5481565b34801561032e57600080fd5b5061023e61088e565b61023e610345366004612207565b6108e2565b34801561035657600080fd5b5061023e610365366004612126565b610c27565b34801561037657600080fd5b5061023e610385366004611f34565b610f27565b34801561039657600080fd5b5061023e6103a5366004611f34565b610f91565b3480156103b657600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610260565b3480156103e857600080fd5b5061023e6103f7366004611f90565b611018565b34801561040857600080fd5b5061023e610417366004612086565b6110b7565b34801561042857600080fd5b50600d546103c49061010090046001600160a01b031681565b34801561044d57600080fd5b5061023e61045c366004611f34565b611104565b34801561046d57600080fd5b5061048161047c3660046120e5565b61116e565b60405161026091906122cb565b34801561049a57600080fd5b506104d26104a9366004611f50565b600360209081526000938452604080852082529284528284209052825290206008015460ff1681565b6040519015158152602001610260565b3480156104ee57600080fd5b50610256600c5481565b34801561050457600080fd5b50610256610513366004612086565b6000908152600f602052604090205490565b34801561053157600080fd5b506005546103c4906001600160a01b031681565b34801561055157600080fd5b506105656105603660046120e5565b6111f7565b60408051938452602084019290925290820152606001610260565b34801561058c57600080fd5b5061025660095481565b3480156105a257600080fd5b50600d546104d29060ff1681565b3480156105bc57600080fd5b5061023e6105cb366004612086565b6114e3565b3480156105dc57600080fd5b506102566105eb366004612086565b611530565b3480156105fc57600080fd5b5061025661060b366004612086565b6000908152600e602052604090205490565b34801561062957600080fd5b5061023e610638366004611f34565b611634565b34801561064957600080fd5b506007546103c4906001600160a01b031681565b34801561066957600080fd5b506006546103c4906001600160a01b031681565b34801561068957600080fd5b5061023e6106983660046121e6565b611704565b3480156106a957600080fd5b5061023e6106b83660046121e6565b61175e565b6000546001600160a01b0316331461070a5760405162461bcd60e51b815260206004820181905260248201526000805160206124b183398151915260448201526064015b60405180910390fd5b600d805460ff1916911515919091179055565b610725611dd3565b6001600160a01b03821660009081526004602090815260408083208684528252918290208251610120810190935290829081018260088282826020028201915b8154815260200190600101908083116107655750505050508152505090505b92915050565b6000546001600160a01b031633146107d25760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b600a55565b6000546001600160a01b0316331461081f5760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146108895760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b600955565b6000546001600160a01b031633146108d65760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b6108e060006117b8565b565b600d54604051632e34059960e01b81526004810186905260009161010090046001600160a01b031690632e340599906024016104006040518083038186803b15801561092d57600080fd5b505afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190611ff3565b90504281602001511115801561097f575080604001514211155b6109cb5760405162461bcd60e51b815260206004820152601460248201527f696e76616c69642d707265646963742d74696d650000000000000000000000006044820152606401610701565b60018160a0015160048111156109f157634e487b7160e01b600052602160045260246000fd5b14610a3e5760405162461bcd60e51b815260206004820152601360248201527f6d617463682d6e6f742d617661696c61626c65000000000000000000000000006044820152606401610701565b600a8410610a8e5760405162461bcd60e51b815260206004820152600e60248201527f6f7074696f6e2d696e76616c69640000000000000000000000000000000000006044820152606401610701565b346001600160a01b03841615610ab5575081610ab56001600160a01b038516333084611808565b60008111610b055760405162461bcd60e51b815260206004820152601160248201527f707265646963742d76616c7565203d20300000000000000000000000000000006044820152606401610701565b6001600160a01b03841660009081526003602090815260408083203384528252808320898452909152902083908660088110610b5157634e487b7160e01b600052603260045260246000fd5b016000828254610b6191906123ac565b90915550506001600160a01b0384166000908152600460209081526040808320898452909152902083908660088110610baa57634e487b7160e01b600052603260045260246000fd5b016000828254610bba91906123ac565b90915550610bcb90508433856118a6565b60408051878152602081018790526001600160a01b03861691810191909152606081018490527f0e29598537663c4d0751152682c4904c82b863f1e941bdcc40657b5c9a979b08906080015b60405180910390a1505050505050565b600d54604051632e34059960e01b81526004810184905260009161010090046001600160a01b031690632e340599906024016104006040518083038186803b158015610c7257600080fd5b505afa158015610c86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caa9190611ff3565b905060028160a001516004811115610cd257634e487b7160e01b600052602160045260246000fd5b14610d1f5760405162461bcd60e51b815260206004820152601060248201527f6d617463682d6e6f742d66696e697368000000000000000000000000000000006044820152606401610701565b4281604001511115610d735760405162461bcd60e51b815260206004820152601460248201527f656e645f74696d65203e2074696d657374616d700000000000000000000000006044820152606401610701565b60008080805b8551811015610ef35760036000878381518110610da657634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252818101929092526040908101600090812033825283528181208a825290925290206008015460ff16610ee157610e1b8733888481518110610e0e57634e487b7160e01b600052603260045260246000fd5b60200260200101516111f7565b919550935091508315610e7057610e70868281518110610e4b57634e487b7160e01b600052603260045260246000fd5b602090810291909101015160c08701516006546001600160a01b031633888888611937565b600160036000888481518110610e9657634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252818101929092526040908101600090812033825283528181208b82529092529020600801805460ff19169115159190911790555b80610eeb81612446565b915050610d79565b507f11c198f906b0e001d80fdf9ddf861a3213e5ebdbf9addb21b7468733563d9c07868685604051610c17939291906122f2565b6000546001600160a01b03163314610f6f5760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610fd95760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b600d80546001600160a01b03909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b6000546001600160a01b031633146110605760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b6001600160a01b03821661109f5760405133904780156108fc02916000818181858888f1935050505015801561109a573d6000803e3d6000fd5b505050565b6110b36001600160a01b0383163383611b26565b5050565b6000546001600160a01b031633146110ff5760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b600855565b6000546001600160a01b0316331461114c5760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b611176611deb565b6001600160a01b0380831660009081526003602090815260408083209387168352928152828220878352905281902081516101408101835291829081018260088282826020028201915b8154815260200190600101908083116111c05750505091835250506008919091015460ff16151560209091015290505b9392505050565b600d54604051632e34059960e01b8152600481018590526000918291829182916101009091046001600160a01b031690632e340599906024016104006040518083038186803b15801561124957600080fd5b505afa15801561125d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112819190611ff3565b60808101516001600160a01b03871660009081526004602090815260408083208c84529091528120929350909182600881106112cd57634e487b7160e01b600052603260045260246000fd5b01546000965086955085945090508061138b5760005b6001600160a01b038089166000908152600360209081526040808320938d168352928152918120908c905290526008811015611385576001600160a01b038089166000908152600360209081526040808320938d1683529281528282208d8352905220816008811061136557634e487b7160e01b600052603260045260246000fd5b015461137190886123ac565b96508061137d81612446565b9150506112e3565b506114d7565b6001600160a01b038088166000908152600360209081526040808320938c1683529281528282208c83529052908120819084600881106113db57634e487b7160e01b600052603260045260246000fd5b0154905060005b6001600160a01b038a1660009081526004602090815260408220918e905252600881101561146c576001600160a01b038a1660009081526004602090815260408083208f84529091529020816008811061144c57634e487b7160e01b600052603260045260246000fd5b015461145890846123ac565b92508061146481612446565b9150506113e2565b508261147883836123e4565b61148291906123c4565b60008c8152600e602052604090205490985082906114a0908a6123e4565b6114aa91906123c4565b60008c8152600f602052604090205490975082906114c8908a6123e4565b6114d291906123c4565b955050505b50505093509350939050565b6000546001600160a01b0316331461152b5760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b600b55565b600d54604051632e34059960e01b81526004810183905260009182916101009091046001600160a01b031690632e340599906024016104006040518083038186803b15801561157e57600080fd5b505afa158015611592573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b69190611ff3565b60c08101516040516370a0823160e01b81523060048201529192506001600160a01b0316906370a082319060240160206040518083038186803b1580156115fc57600080fd5b505afa158015611610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f0919061209e565b6000546001600160a01b0316331461167c5760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b6001600160a01b0381166116f85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610701565b611701816117b8565b50565b6000546001600160a01b0316331461174c5760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b6000918252600e602052604090912055565b6000546001600160a01b031633146117a65760405162461bcd60e51b815260206004820181905260248201526000805160206124b18339815191526044820152606401610701565b6000918252600f602052604090912055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526118a09085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b56565b50505050565b60065460009081906001600160a01b03161561193057600b541561191357600254600c546118d490856123e4565b6118de91906123c4565b91508190506001600160a01b03851661191357600b5461190683670de0b6b3a76400006123e4565b61191091906123c4565b90505b811561193057600654611930906001600160a01b03168583611b26565b5050505050565b600080600254600a548661194b91906123e4565b61195591906123c4565b90506001600160a01b038916611a5e576008541561198a5760025460085461197d90876123e4565b61198791906123c4565b91505b81156119cc576005546040516001600160a01b039091169083156108fc029084906000818181858888f193505050501580156119ca573d6000803e3d6000fd5b505b6001600160a01b0386166108fc826119e48589612403565b6119ee9190612403565b6040518115909202916000818181858888f19350505050158015611a16573d6000803e3d6000fd5b508015611a59576007546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611a57573d6000803e3d6000fd5b505b611aed565b60095415611a8357600254600954611a7690876123e4565b611a8091906123c4565b91505b8115611aa357600554611aa3906001600160a01b038b8116911684611b26565b611acd8682611ab28589612403565b611abc9190612403565b6001600160a01b038c169190611b26565b8015611aed57600754611aed906001600160a01b038b8116911683611b26565b611b016001600160a01b0389168786611b26565b8215611b1b57611b1b6001600160a01b0388168785611b26565b505050505050505050565b6040516001600160a01b03831660248201526044810182905261109a90849063a9059cbb60e01b9060640161183c565b6000611bab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c3b9092919063ffffffff16565b80519091501561109a5780806020019051810190611bc99190611fd7565b61109a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610701565b6060611c4a8484600085611c52565b949350505050565b606082471015611cca5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610701565b6001600160a01b0385163b611d215760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610701565b600080866001600160a01b03168587604051611d3d9190612268565b60006040518083038185875af1925050503d8060008114611d7a576040519150601f19603f3d011682016040523d82523d6000602084013e611d7f565b606091505b5091509150611d8f828286611d9a565b979650505050505050565b60608315611da95750816111f0565b825115611db95782518084602001fd5b8160405162461bcd60e51b81526004016107019190612284565b6040518060200160405280611de6611e0b565b905290565b6040518060400160405280611dfe611e0b565b8152600060209091015290565b6040518061010001604052806008906020820280368337509192915050565b8051611e358161248d565b919050565b600082601f830112611e4a578081fd5b60405161010080820182811067ffffffffffffffff82111715611e6f57611e6f612477565b6040528184828101871015611e82578485fd5b8492505b6008831015611ea657805182526001929092019160209182019101611e86565b509195945050505050565b805160058110611e3557600080fd5b60006103008284031215611ed2578081fd5b6040516060810181811067ffffffffffffffff82111715611ef557611ef5612477565b604052905080611f058484611e3a565b8152611f15846101008501611e3a565b6020820152611f28846102008501611e3a565b60408201525092915050565b600060208284031215611f45578081fd5b81356111f08161248d565b600080600060608486031215611f64578182fd5b8335611f6f8161248d565b92506020840135611f7f8161248d565b929592945050506040919091013590565b60008060408385031215611fa2578182fd5b8235611fad8161248d565b946020939093013593505050565b600060208284031215611fcc578081fd5b81356111f0816124a2565b600060208284031215611fe8578081fd5b81516111f0816124a2565b60006104008284031215612005578081fd5b61200d612351565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015261204560a08401611eb1565b60a082015261205660c08401611e2a565b60c082015261206760e08401611e2a565b60e082015261010061207b85828601611ec0565b908201529392505050565b600060208284031215612097578081fd5b5035919050565b6000602082840312156120af578081fd5b5051919050565b600080604083850312156120c8578182fd5b8235915060208301356120da8161248d565b809150509250929050565b6000806000606084860312156120f9578081fd5b83359250602084013561210b8161248d565b9150604084013561211b8161248d565b809150509250925092565b60008060408385031215612138578182fd5b8235915060208084013567ffffffffffffffff80821115612157578384fd5b818601915086601f83011261216a578384fd5b81358181111561217c5761217c612477565b8060051b915061218d84830161237b565b8181528481019084860184860187018b10156121a7578788fd5b8795505b838610156121d557803594506121c08561248d565b848352600195909501949186019186016121ab565b508096505050505050509250929050565b600080604083850312156121f8578182fd5b50508035926020909101359150565b6000806000806080858703121561221c578182fd5b843593506020850135925060408501356122358161248d565b9396929550929360600135925050565b8060005b60088110156118a0578151845260209384019390910190600101612249565b6000825161227a81846020870161241a565b9190910192915050565b60208152600082518060208401526122a381604085016020870161241a565b601f01601f19169190910160400192915050565b600061010082019050610784828451612245565b6000610120820190506122df828451612245565b6020830151151561010083015292915050565b60006060820185835260206060818501528186518084526080860191508288019350845b8181101561233b5784516001600160a01b031683529383019391830191600101612316565b5050809350505050826040830152949350505050565b604051610120810167ffffffffffffffff8111828210171561237557612375612477565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156123a4576123a4612477565b604052919050565b600082198211156123bf576123bf612461565b500190565b6000826123df57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156123fe576123fe612461565b500290565b60008282101561241557612415612461565b500390565b60005b8381101561243557818101518382015260200161241d565b838111156118a05750506000910152565b600060001982141561245a5761245a612461565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461170157600080fd5b801515811461170157600080fdfe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a164736f6c6343000804000a";

type SponsoredPredictionLinkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SponsoredPredictionLinkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SponsoredPredictionLink__factory extends ContractFactory {
  constructor(...args: SponsoredPredictionLinkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SponsoredPredictionLink> {
    return super.deploy(overrides || {}) as Promise<SponsoredPredictionLink>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SponsoredPredictionLink {
    return super.attach(address) as SponsoredPredictionLink;
  }
  override connect(signer: Signer): SponsoredPredictionLink__factory {
    return super.connect(signer) as SponsoredPredictionLink__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SponsoredPredictionLinkInterface {
    return new utils.Interface(_abi) as SponsoredPredictionLinkInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SponsoredPredictionLink {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SponsoredPredictionLink;
  }
}
