/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Event, EventInterface } from "../../contracts/Event";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadlineTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "helperAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "odds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "datas",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pro",
        type: "uint256",
      },
    ],
    name: "EventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "EventResultUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadlineTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_helperAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_datas",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pro",
        type: "uint256",
      },
    ],
    name: "createSingleEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "_idx",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "events",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadlineTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "resultIndex",
        type: "uint256",
      },
      {
        internalType: "enum EDataTypes.EventStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "helperAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "_datas",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "pro",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "info",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadlineTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resultIndex",
            type: "uint256",
          },
          {
            internalType: "enum EDataTypes.EventStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "helperAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "odds",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "_datas",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "pro",
            type: "uint256",
          },
        ],
        internalType: "struct EDataTypes.Event",
        name: "_event",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nEvents",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "updateEventResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506126bf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638129fc1c1161008c5780639cdfe1ae116100665780639cdfe1ae146101cf578063bca321e5146101f0578063c422c1fa146101f9578063f2fde38b1461020c57600080fd5b80638129fc1c146101a45780638da5cb5b146101ac5780638dc654a2146101c757600080fd5b80634585e33b116100c85780634585e33b146101555780635c38eb3a146101685780636e04ff0d1461017b578063715018a61461019c57600080fd5b80630b791430146100ef5780632e340599146101205780633744199614610140575b600080fd5b6101026100fd36600461203a565b61021f565b6040516101179998979695949392919061242a565b60405180910390f35b61013361012e36600461203a565b610304565b60405161011791906122c5565b61015361014e366004611f88565b6104d0565b005b610153610163366004611fcd565b610671565b610153610176366004611f2f565b610764565b61018e610189366004611fcd565b610800565b6040516101179291906122aa565b6101536108d2565b610153610938565b6033546040516001600160a01b039091168152602001610117565b6101536109b2565b6101e26101dd36600461208b565b610b6e565b604051908152602001610117565b6101e260745481565b61015361020736600461206a565b610e39565b61015361021a366004611f15565b61105a565b6073602052600090815260409020805460018201546002830154600384015460048501546005860154600787018054969795969495939460ff8416946101009094046001600160a01b0390811694931692919061027b9061260c565b80601f01602080910402602001604051908101604052809291908181526020018280546102a79061260c565b80156102f45780601f106102c9576101008083540402835291602001916102f4565b820191906000526020600020905b8154815290600101906020018083116102d757829003601f168201915b5050505050908060080154905089565b61030c611d33565b6073600083815260200190815260200160002060405180610140016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16600181111561038557634e487b7160e01b600052602160045260246000fd5b60018111156103a457634e487b7160e01b600052602160045260246000fd5b815260048201546001600160a01b0361010090910481166020808401919091526005840154909116604080840191909152600684018054825181850281018501909352808352606090940193919290919083018282801561042457602002820191906000526020600020905b815481526020019060010190808311610410575b5050505050815260200160078201805461043d9061260c565b80601f01602080910402602001604051908101604052809291908181526020018280546104699061260c565b80156104b65780601f1061048b576101008083540402835291602001916104b6565b820191906000526020600020905b81548152906001019060200180831161049957829003601f168201915b505050505081526020016008820154815250509050919050565b60008281526072602052604090205482906001600160a01b031633146105635760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f662074686560448201527f207265717565737400000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60008181526072602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a26000808084815b81518110156106675760008282815181106105d857634e487b7160e01b600052603260045260246000fd5b016020015160f81c9050603081108015906105f65750603a8160ff16105b1561062757603060ff821661060c86600a6125aa565b6106169190612493565b61062091906125c9565b9350610654565b85610638578194506001955061064f565b600085815260736020526040812060030185905595505b600093505b508061065f81612641565b9150506105ad565b5050505050505050565b60006106a57f626534653833303134323533343639666132323439346230653530653035643630631ba20ccb60e11b611139565b90506107066040518060400160405280600381526020016219d95d60ea1b81525084848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508694939250506111ca9050565b610753604051806040016040528060048152602001630e0c2e8d60e31b815250604051806040016040528060048152602001636461746160e01b815250836111ca9092919063ffffffff16565b61075e8160006111ed565b50505050565b6033546001600160a01b031633146107be5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161055a565b6107c6611210565b606f80546001600160a01b0319166001600160a01b038416179055607080546001600160a01b0319166001600160a01b0383161790555050565b600060608060005b6074548110156108c6576000818152607360205260409020600801541580159061084357506000818152607360205260409020600201544210155b8015610880575060008181526073602052604081206004015460ff16600181111561087e57634e487b7160e01b600052602160045260246000fd5b145b156108b65760019350816108938261131a565b6040516020016108a49291906121e4565b60405160208183030381529060405291505b6108bf81612641565b9050610808565b50809150509250929050565b6033546001600160a01b0316331461092c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161055a565b6109366000611454565b565b600061094460016114a6565b9050801561095c576000805461ff0019166101001790555b60006074556109696115c1565b80156109af576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6033546001600160a01b03163314610a0c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161055a565b6000610a20606f546001600160a01b031690565b6040516370a0823160e01b81523060048201529091506001600160a01b0382169063a9059cbb90339083906370a082319060240160206040518083038186803b158015610a6c57600080fd5b505afa158015610a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa49190612052565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610aea57600080fd5b505af1158015610afe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b229190611f61565b6109af5760405162461bcd60e51b815260206004820152601260248201527f556e61626c6520746f207472616e736665720000000000000000000000000000604482015260640161055a565b6000888a10610bbf5760405162461bcd60e51b815260206004820152601a60248201527f646561646c696e655f74696d65203e2073746172745f74696d65000000000000604482015260640161055a565b878910610c0e5760405162461bcd60e51b815260206004820152601860248201527f656e645f74696d65203e20646561646c696e655f74696d650000000000000000604482015260640161055a565b60745490506040518061014001604052808b81526020018a81526020018981526020016000815260200160006001811115610c5957634e487b7160e01b600052602160045260246000fd5b8152602001886001600160a01b03168152602001846001600160a01b031681526020018787808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552505050602080830188905260409283018690528482526073815290829020835181559083015160018083019190915591830151600282015560608301516003820155608083015160048201805492939192909160ff19909116908381811115610d2757634e487b7160e01b600052602160045260246000fd5b021790555060a08201516004820180547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b039384160217905560c08301516005830180546001600160a01b0319169190921617905560e08201518051610da2916006840191602090910190611da4565b506101008201518051610dbf916007840191602090910190611def565b5061012082015181600801559050507f0ce3e4a8197f9966df36cd4efec4937e6f8c71af81fc5edaec417c6aff51dc74818b8b8b8b888c8c8c8b604051610e0f9a9998979695949392919061237b565b60405180910390a160748054906000610e2783612641565b91905055509998505050505050505050565b600082815260736020526040902060068101548210610e9a5760405162461bcd60e51b815260206004820152601160248201527f63616e6e6f742d66696e642d696e646578000000000000000000000000000000604482015260640161055a565b60058101546001600160a01b03163314610ef65760405162461bcd60e51b815260206004820152600c60248201527f756e617574686f72697a65640000000000000000000000000000000000000000604482015260640161055a565b4281600201541115610f4a5760405162461bcd60e51b815260206004820152601560248201527f656e645f74696d65203c3d2074696d657374616d700000000000000000000000604482015260640161055a565b4281600201546202a300610f5e9190612493565b1015610fac5760405162461bcd60e51b815260206004820152601e60248201527f656e645f74696d65202b20322064617973203e3d2074696d657374616d700000604482015260640161055a565b600881015415610ffe5760405162461bcd60e51b815260206004820152600d60248201527f6e6f742070726f206576656e7400000000000000000000000000000000000000604482015260640161055a565b6003810182905560048101805460ff1916600117905560408051338152602081018590529081018390527f2ccc596398ffc39992c51e71000fdba89a0548fddc9aa898bd37ca38d3af73aa9060600160405180910390a1505050565b6033546001600160a01b031633146110b45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161055a565b6001600160a01b0381166111305760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161055a565b6109af81611454565b6111776040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6111b56040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b6111c181868686611634565b95945050505050565b60808301516111d990836116a7565b60808301516111e890826116a7565b505050565b607054600090611207906001600160a01b031684846116be565b90505b92915050565b600054610100900460ff1661127b5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161055a565b670de0b6b3a7640000606555600160718190556000606655606780546001600160a01b031990811690915560689190915560026069557f90430203e2d9ce04f00738d355173358b054545ecb52218de9c6fb01cbd9aeaf606a557f89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6606b55606c805490911673c89bd4e1632d3a43cb03aaad5262cbe4038bc571179055565b60608161133e5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611368578061135281612641565b91506113619050600a836124ab565b9150611342565b60008167ffffffffffffffff81111561139157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156113bb576020820181803683370190505b5090505b841561144c576113d06001836125c9565b91506113dd600a8661265c565b6113e8906030612493565b60f81b81838151811061140b57634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611445600a866124ab565b94506113bf565b949350505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615611534578160ff1660011480156114c95750303b155b61152c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161055a565b506000919050565b60005460ff8084169116106115a25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161055a565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661162c5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161055a565b610936611777565b6116726040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b61168285608001516101006117eb565b50509183526001600160a01b031660208301526001600160e01b031916604082015290565b6116b48260038351611850565b6111e8828261195f565b6071546000906116cf816001612493565b607155606754606654855160408088015160685460808a01515192516000966320214ca360e11b96611718966001600160a01b03909216959094919330938b929060240161221f565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152905061176d86838684611986565b9695505050505050565b600054610100900460ff166117e25760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161055a565b61093633611454565b60408051808201909152606081526000602082015261180b60208361265c565b156118335761181b60208361265c565b6118269060206125c9565b6118309083612493565b91505b506020828101829052604080518085526000815290920101905290565b60178167ffffffffffffffff16116118755761075e8360e0600585901b168317611af3565b60ff8167ffffffffffffffff16116118b35761189c836018611fe0600586901b1617611af3565b5061075e8367ffffffffffffffff83166001611b18565b61ffff8167ffffffffffffffff16116118f2576118db836019611fe0600586901b1617611af3565b5061075e8367ffffffffffffffff83166002611b18565b63ffffffff8167ffffffffffffffff16116119335761191c83601a611fe0600586901b1617611af3565b5061075e8367ffffffffffffffff83166004611b18565b61194883601b611fe0600586901b1617611af3565b5061075e8367ffffffffffffffff83166008611b18565b60408051808201909152606081526000602082015261120783846000015151848551611b3e565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f1901815282825280516020918201206000818152607290925291812080546001600160a01b0319166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a2606f54604051630200057560e51b81526001600160a01b0390911690634000aea090611a4990889087908790600401612282565b602060405180830381600087803b158015611a6357600080fd5b505af1158015611a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9b9190611f61565b61144c5760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261604482015262636c6560e81b606482015260840161055a565b6040805180820190915260608152600060208201526112078384600001515184611c28565b60408051808201909152606081526000602082015261144c848560000151518585611c84565b6040805180820190915260608152600060208201528251821115611b6157600080fd5b6020850151611b708386612493565b1115611ba357611ba385611b9387602001518786611b8e9190612493565b611d05565b611b9e9060026125aa565b611d1c565b600080865180518760208301019350808887011115611bc25787860182525b505050602084015b60208410611c025780518252611be1602083612493565b9150611bee602082612493565b9050611bfb6020856125c9565b9350611bca565b51815160001960208690036101000a019081169019919091161790525083949350505050565b60408051808201909152606081526000602082015283602001518310611c5d57611c5d8485602001516002611b9e91906125aa565b835180516020858301018481535080851415611c7a576001810182525b5093949350505050565b6040805180820190915260608152600060208201526020850151611ca88584612493565b1115611cbc57611cbc85611b938685612493565b60006001611ccc84610100612502565b611cd691906125c9565b9050855183868201018583198251161781525080518487011115611cfa5783860181525b509495945050505050565b600081831115611d1657508161120a565b50919050565b8151611d2883836117eb565b5061075e838261195f565b6040518061014001604052806000815260200160008152602001600081526020016000815260200160006001811115611d7c57634e487b7160e01b600052602160045260246000fd5b8152600060208201819052604082018190526060808301819052608083015260a09091015290565b828054828255906000526020600020908101928215611ddf579160200282015b82811115611ddf578251825591602001919060010190611dc4565b50611deb929150611e62565b5090565b828054611dfb9061260c565b90600052602060002090601f016020900481019282611e1d5760008555611ddf565b82601f10611e3657805160ff1916838001178555611ddf565b82800160010185558215611ddf5791820182811115611ddf578251825591602001919060010190611dc4565b5b80821115611deb5760008155600101611e63565b80356001600160a01b03811681146115bc57600080fd5b600082601f830112611e9e578081fd5b813567ffffffffffffffff80821115611eb957611eb961269c565b604051601f8301601f19908116603f01168101908282118183101715611ee157611ee161269c565b81604052838152866020858801011115611ef9578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611f26578081fd5b61120782611e77565b60008060408385031215611f41578081fd5b611f4a83611e77565b9150611f5860208401611e77565b90509250929050565b600060208284031215611f72578081fd5b81518015158114611f81578182fd5b9392505050565b60008060408385031215611f9a578182fd5b82359150602083013567ffffffffffffffff811115611fb7578182fd5b611fc385828601611e8e565b9150509250929050565b60008060208385031215611fdf578182fd5b823567ffffffffffffffff80821115611ff6578384fd5b818501915085601f830112612009578384fd5b813581811115612017578485fd5b866020828501011115612028578485fd5b60209290920196919550909350505050565b60006020828403121561204b578081fd5b5035919050565b600060208284031215612063578081fd5b5051919050565b6000806040838503121561207c578182fd5b50508035926020909101359150565b60008060008060008060008060006101008a8c0312156120a9578485fd5b8935985060208a0135975060408a013596506120c760608b01611e77565b955060808a013567ffffffffffffffff808211156120e3578687fd5b818c0191508c601f8301126120f6578687fd5b813581811115612104578788fd5b8d60208260051b8501011115612118578788fd5b6020830197508096505060a08c0135915080821115612135578485fd5b506121428c828d01611e8e565b93505061215160c08b01611e77565b915060e08a013590509295985092959850929598565b6000815180845260208085019450808401835b83811015611cfa5781518752958201959082019060010161217a565b600081518084526121ae8160208601602086016125e0565b601f01601f19169290920160200192915050565b600281106121e057634e487b7160e01b600052602160045260246000fd5b9052565b600083516121f68184602088016125e0565b83519083019061220a8183602088016125e0565b600160fd1b9101908152600101949350505050565b60006101006001600160a01b03808c1684528a602085015289604085015280891660608501525063ffffffff60e01b871660808401528560a08401528460c08401528060e084015261227381840185612196565b9b9a5050505050505050505050565b6001600160a01b03841681528260208201526060604082015260006111c16060830184612196565b821515815260406020820152600061144c6040830184612196565b60208152815160208201526020820151604082015260408201516060820152606082015160808201526000608083015161230260a08401826121c2565b5060a08301516001600160a01b03811660c08401525060c08301516001600160a01b03811660e08401525060e0830151610140610100818186015261234b610160860184612167565b9250808601519050610120601f19868503018187015261236b8483612196565b9601519190940152509192915050565b60006101208c83528b60208401528a60408401528960608401526001600160a01b03808a16608085015280891660a0850152508060c08401528581840152506101407f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8611156123e9578182fd5b8560051b8088838601378301818101838152848203830160e086015261240f8188612196565b9350505050826101008301529b9a5050505050505050505050565b60006101208b83528a602084015289604084015288606084015261245160808401896121c2565b6001600160a01b0387811660a0850152861660c084015260e0830181905261247b81840186612196565b915050826101008301529a9950505050505050505050565b600082198211156124a6576124a6612670565b500190565b6000826124ba576124ba612686565b500490565b600181815b808511156124fa5781600019048211156124e0576124e0612670565b808516156124ed57918102915b93841c93908002906124c4565b509250929050565b600061120783836000826125185750600161120a565b816125255750600061120a565b816001811461253b576002811461254557612561565b600191505061120a565b60ff84111561255657612556612670565b50506001821b61120a565b5060208310610133831016604e8410600b8410161715612584575081810a61120a565b61258e83836124bf565b80600019048211156125a2576125a2612670565b029392505050565b60008160001904831182151516156125c4576125c4612670565b500290565b6000828210156125db576125db612670565b500390565b60005b838110156125fb5781810151838201526020016125e3565b8381111561075e5750506000910152565b600181811c9082168061262057607f821691505b60208210811415611d1657634e487b7160e01b600052602260045260246000fd5b600060001982141561265557612655612670565b5060010190565b60008261266b5761266b612686565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000804000a";

type EventConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Event__factory extends ContractFactory {
  constructor(...args: EventConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Event> {
    return super.deploy(overrides || {}) as Promise<Event>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Event {
    return super.attach(address) as Event;
  }
  override connect(signer: Signer): Event__factory {
    return super.connect(signer) as Event__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventInterface {
    return new utils.Interface(_abi) as EventInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Event {
    return new Contract(address, _abi, signerOrProvider) as Event;
  }
}
