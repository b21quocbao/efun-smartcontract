/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Event, EventInterface } from "../../contracts/Event";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadlineTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "helperAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string[]",
            name: "data",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "odds",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct EDataTypes.Option",
        name: "options",
        type: "tuple",
      },
    ],
    name: "EventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "result",
        type: "string",
      },
    ],
    name: "EventResultUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadlineTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_helperAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string[]",
            name: "data",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "odds",
            type: "uint256[]",
          },
        ],
        internalType: "struct EDataTypes.Option",
        name: "_options",
        type: "tuple",
      },
    ],
    name: "createSingleEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "events",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadlineTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "resultIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "result",
        type: "string",
      },
      {
        internalType: "enum EDataTypes.EventStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "helperAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "info",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadlineTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resultIndex",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "result",
            type: "string",
          },
          {
            internalType: "enum EDataTypes.EventStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "helperAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "string[]",
            name: "options",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "odds",
            type: "uint256[]",
          },
        ],
        internalType: "struct EDataTypes.Event",
        name: "_event",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_result",
        type: "string",
      },
    ],
    name: "updateEventResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611987806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638129fc1c1161005b5780638129fc1c146100fa5780638da5cb5b14610102578063a60c32821461011d578063f2fde38b1461013057600080fd5b80630b7914301461008d5780632960ddc3146100bd5780632e340599146100d2578063715018a6146100f2575b600080fd5b6100a061009b366004611291565b610143565b6040516100b49897969594939291906116e7565b60405180910390f35b6100d06100cb3660046112a9565b61021f565b005b6100e56100e0366004611291565b610491565b6040516100b49190611507565b6100d0610727565b6100d061078d565b6033546040516001600160a01b0390911681526020016100b4565b6100d061012b3660046112ee565b610802565b6100d061013e366004611270565b610bb6565b606560205260009081526040902080546001820154600283015460038401546004850180549495939492939192610179906118f8565b80601f01602080910402602001604051908101604052809291908181526020018280546101a5906118f8565b80156101f25780601f106101c7576101008083540402835291602001916101f2565b820191906000526020600020905b8154815290600101906020018083116101d557829003601f168201915b5050506005840154600690940154929360ff8116936001600160a01b036101009092048216935016905088565b6000828152606560209081526040808320600781018054835181860281018601909452808452919493610309939290859084015b828210156102ff578382906000526020600020018054610272906118f8565b80601f016020809104026020016040519081016040528092919081815260200182805461029e906118f8565b80156102eb5780601f106102c0576101008083540402835291602001916102eb565b820191906000526020600020905b8154815290600101906020018083116102ce57829003601f168201915b505050505081526020019060010190610253565b5050505084610c95565b60068301549091506001600160a01b0316331461036d5760405162461bcd60e51b815260206004820152600c60248201527f756e617574686f72697a6564000000000000000000000000000000000000000060448201526064015b60405180910390fd5b42826002015411156103c15760405162461bcd60e51b815260206004820152601560248201527f656e645f74696d65203c3d2074696d657374616d7000000000000000000000006044820152606401610364565b4282600201546202a3006103d59190611827565b10156104235760405162461bcd60e51b815260206004820152601e60248201527f656e645f74696d65202b20322064617973203e3d2074696d657374616d7000006044820152606401610364565b82516104389060048401906020860190610ffa565b506003820181905560058201805460ff191660011790556040517fa3c262ffbf369b7ce5804dd0381ee64854a6df80812ec62f785877f99646fd3e90610483903390879087906114d6565b60405180910390a150505050565b61049961107e565b6065600083815260200190815260200160002060405180610140016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820180546104f0906118f8565b80601f016020809104026020016040519081016040528092919081815260200182805461051c906118f8565b80156105695780601f1061053e57610100808354040283529160200191610569565b820191906000526020600020905b81548152906001019060200180831161054c57829003601f168201915b5050509183525050600582015460209091019060ff16600181111561059e57634e487b7160e01b600052602160045260246000fd5b60018111156105bd57634e487b7160e01b600052602160045260246000fd5b815260058201546001600160a01b0361010090910481166020808401919091526006840154909116604080840191909152600784018054825181850281018501909352808352606090940193919290919060009084015b828210156106c0578382906000526020600020018054610633906118f8565b80601f016020809104026020016040519081016040528092919081815260200182805461065f906118f8565b80156106ac5780601f10610681576101008083540402835291602001916106ac565b820191906000526020600020905b81548152906001019060200180831161068f57829003601f168201915b505050505081526020019060010190610614565b5050505081526020016008820180548060200260200160405190810160405280929190818152602001828054801561071757602002820191906000526020600020905b815481526020019060010190808311610703575b5050505050815250509050919050565b6033546001600160a01b031633146107815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610364565b61078b6000610d40565b565b60006107996001610d9f565b905080156107b1576000805461ff0019166101001790555b6107b9610eba565b80156107ff576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b8385106108515760405162461bcd60e51b815260206004820152601a60248201527f646561646c696e655f74696d65203e2073746172745f74696d650000000000006044820152606401610364565b8284106108a05760405162461bcd60e51b815260206004820152601860248201527f656e645f74696d65203e20646561646c696e655f74696d6500000000000000006044820152606401610364565b6108ad6020820182611798565b90506108b98280611749565b9050146109085760405162461bcd60e51b815260206004820152601b60248201527f6e6f742d6d617463682d6c656e6774682d6f7074696f6e2d6f646400000000006044820152606401610364565b6000868152606560205260409020600601546001600160a01b0316156109705760405162461bcd60e51b815260206004820152600f60248201527f616c7265616479206578697374656400000000000000000000000000000000006044820152606401610364565b60405180610140016040528086815260200185815260200184815260200160008152602001604051806020016040528060008152508152602001600060018111156109cb57634e487b7160e01b600052602160045260246000fd5b81526001600160a01b03841660208201523360408201526060016109ef8380611749565b6109f89161183f565b8152602001828060200190610a0d9190611798565b80806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093909452505088815260656020908152604091829020845181558482015160018201559184015160028301556060840151600383015560808401518051929350610a8d9260048501929190910190610ffa565b5060a082015160058201805460ff191660018381811115610abe57634e487b7160e01b600052602160045260246000fd5b021790555060c08201516005820180547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b0393841681029190911790915560e084015160068401805473ffffffffffffffffffffffffffffffffffffffff191691909316179091558201518051610b4a9160078401916020909101906110ef565b506101208201518051610b67916008840191602090910190611148565b509050507f699253c71d36e32f440d4353894429904c45e5ec5c73061e689defc8eae470f886868686863387604051610ba697969594939291906115da565b60405180910390a1505050505050565b6033546001600160a01b03163314610c105760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610364565b6001600160a01b038116610c8c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610364565b6107ff81610d40565b6000805b8351811015610cf157610cd3848281518110610cc557634e487b7160e01b600052603260045260246000fd5b602002602001015184610f2d565b15610cdf579050610d3a565b80610ce981611933565b915050610c99565b5060405162461bcd60e51b815260206004820152601160248201527f63616e6e6f742d66696e642d696e6465780000000000000000000000000000006044820152606401610364565b92915050565b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615610e2d578160ff166001148015610dc25750303b155b610e255760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610364565b506000919050565b60005460ff808416911610610e9b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610364565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610f255760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610364565b61078b610f86565b600081604051602001610f4091906114ba565b6040516020818303038152906040528051906020012083604051602001610f6791906114ba565b6040516020818303038152906040528051906020012014905092915050565b600054610100900460ff16610ff15760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610364565b61078b33610d40565b828054611006906118f8565b90600052602060002090601f016020900481019282611028576000855561106e565b82601f1061104157805160ff191683800117855561106e565b8280016001018555821561106e579182015b8281111561106e578251825591602001919060010190611053565b5061107a929150611182565b5090565b6040518061014001604052806000815260200160008152602001600081526020016000815260200160608152602001600060018111156110ce57634e487b7160e01b600052602160045260246000fd5b81526000602082018190526040820152606080820181905260809091015290565b82805482825590600052602060002090810192821561113c579160200282015b8281111561113c578251805161112c918491602090910190610ffa565b509160200191906001019061110f565b5061107a929150611197565b82805482825590600052602060002090810192821561106e579160200282018281111561106e578251825591602001919060010190611053565b5b8082111561107a5760008155600101611183565b8082111561107a5760006111ab82826111b4565b50600101611197565b5080546111c0906118f8565b6000825580601f106111d0575050565b601f0160209004906000526020600020908101906107ff9190611182565b80356001600160a01b0381168114610eb557600080fd5b600082601f830112611215578081fd5b813567ffffffffffffffff81111561122f5761122f611964565b611242601f8201601f19166020016117ae565b818152846020838601011115611256578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215611281578081fd5b61128a826111ee565b9392505050565b6000602082840312156112a2578081fd5b5035919050565b600080604083850312156112bb578081fd5b82359150602083013567ffffffffffffffff8111156112d8578182fd5b6112e485828601611205565b9150509250929050565b60008060008060008060c08789031215611306578182fd5b8635955060208701359450604087013593506060870135925061132b608088016111ee565b915060a087013567ffffffffffffffff811115611346578182fd5b87016040818a031215611357578182fd5b809150509295509295509295565b600082825180855260208086019550808260051b840101818601855b848110156113af57601f1986840301895261139d83835161148e565b98840198925090830190600101611381565b5090979650505050505050565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156113ed578081fd5b8260051b80836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b838110156114385781518752958201959082019060010161141c565b509495945050505050565b6002811061146157634e487b7160e01b600052602160045260246000fd5b9052565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600081518084526114a68160208601602086016118c8565b601f01601f19169290920160200192915050565b600082516114cc8184602087016118c8565b9190910192915050565b6001600160a01b03841681528260208201526060604082015260006114fe606083018461148e565b95945050505050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152600060808301516101408060a085015261154e61016085018361148e565b915060a085015161156260c0860182611443565b5060c08501516001600160a01b03811660e08601525060e0850151610100611594818701836001600160a01b03169052565b80870151915050601f196101208187860301818801526115b48584611365565b9088015187820390920184880152935090506115d08382611409565b9695505050505050565b8781526000602088818401528760408401528660608401526001600160a01b03808716608085015280861660a08501525060e060c0840152610120830161162185866117df565b604060e087015291829052610140600583901b860181019290860182865b838110156116ac5788860361013f19018352813536869003601e19018112611665578889fd5b8501803567ffffffffffffffff81111561167d57898afd5b80360387131561168b57898afd5b61169888828b8501611465565b97505050918601919086019060010161163f565b50505050506116bd828601866117df565b85830360df190161010087015292506116d78284836113bc565b9c9b505050505050505050505050565b60006101008a83528960208401528860408401528760608401528060808401526117138184018861148e565b91505061172360a0830186611443565b6001600160a01b0380851660c084015280841660e0840152509998505050505050505050565b6000808335601e1984360301811261175f578283fd5b83018035915067ffffffffffffffff821115611779578283fd5b6020019150600581901b360382131561179157600080fd5b9250929050565b6000808335601e1984360301811261175f578182fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156117d7576117d7611964565b604052919050565b6000808335601e198436030181126117f5578283fd5b830160208101925035905067ffffffffffffffff81111561181557600080fd5b8060051b360383131561179157600080fd5b6000821982111561183a5761183a61194e565b500190565b600067ffffffffffffffff8084111561185a5761185a611964565b8360051b602061186b8183016117ae565b8681528181019086368582011115611881578687fd5b8694505b888510156118bc5780358681111561189b578788fd5b6118a736828b01611205565b84525060019490940193918301918301611885565b50979650505050505050565b60005b838110156118e35781810151838201526020016118cb565b838111156118f2576000848401525b50505050565b600181811c9082168061190c57607f821691505b6020821081141561192d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156119475761194761194e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000804000a";

type EventConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Event__factory extends ContractFactory {
  constructor(...args: EventConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Event> {
    return super.deploy(overrides || {}) as Promise<Event>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Event {
    return super.attach(address) as Event;
  }
  override connect(signer: Signer): Event__factory {
    return super.connect(signer) as Event__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventInterface {
    return new utils.Interface(_abi) as EventInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Event {
    return new Contract(address, _abi, signerOrProvider) as Event;
  }
}
