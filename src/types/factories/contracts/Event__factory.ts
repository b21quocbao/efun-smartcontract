/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Event, EventInterface } from "../../contracts/Event";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadlineTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "helperAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string[]",
            name: "data",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "odds",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct EDataTypes.Option",
        name: "options",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "string[12]",
        name: "datas",
        type: "string[12]",
      },
    ],
    name: "EventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "result",
        type: "string",
      },
    ],
    name: "EventResultUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadlineTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_helperAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string[]",
            name: "data",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "odds",
            type: "uint256[]",
          },
        ],
        internalType: "struct EDataTypes.Option",
        name: "_options",
        type: "tuple",
      },
      {
        internalType: "string[12]",
        name: "_datas",
        type: "string[12]",
      },
    ],
    name: "createSingleEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "_idx",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "events",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadlineTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "resultIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "result",
        type: "string",
      },
      {
        internalType: "enum EDataTypes.EventStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "helperAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "info",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadlineTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resultIndex",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "result",
            type: "string",
          },
          {
            internalType: "enum EDataTypes.EventStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "helperAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "string[]",
            name: "options",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "odds",
            type: "uint256[]",
          },
          {
            internalType: "string[12]",
            name: "_datas",
            type: "string[12]",
          },
        ],
        internalType: "struct EDataTypes.Event",
        name: "_event",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nEvents",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_result",
        type: "string",
      },
    ],
    name: "updateEventResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611bf2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063715018a6116100765780638da5cb5b1161005b5780638da5cb5b1461013e578063bca321e514610159578063f2fde38b1461016257600080fd5b8063715018a61461012e5780638129fc1c1461013657600080fd5b80630b791430146100a85780630c18c18a146100d85780632960ddc3146100f95780632e3405991461010e575b600080fd5b6100bb6100b63660046113d3565b610175565b6040516100cf989796959493929190611928565b60405180910390f35b6100eb6100e6366004611430565b610251565b6040519081526020016100cf565b61010c6101073660046113eb565b6105dc565b005b61012161011c3660046113d3565b610849565b6040516100cf919061170c565b61010c610ba4565b61010c610c0a565b6033546040516001600160a01b0390911681526020016100cf565b6100eb60665481565b61010c6101703660046113b2565b610c84565b6065602052600090815260409020805460018201546002830154600384015460048501805494959394929391926101ab90611b63565b80601f01602080910402602001604051908101604052809291908181526020018280546101d790611b63565b80156102245780601f106101f957610100808354040283529160200191610224565b820191906000526020600020905b81548152906001019060200180831161020757829003601f168201915b5050506005840154600690940154929360ff8116936001600160a01b036101009092048216935016905088565b60008587106102a75760405162461bcd60e51b815260206004820152601a60248201527f646561646c696e655f74696d65203e2073746172745f74696d6500000000000060448201526064015b60405180910390fd5b8486106102f65760405162461bcd60e51b815260206004820152601860248201527f656e645f74696d65203e20646561646c696e655f74696d650000000000000000604482015260640161029e565b61030360208401846119d9565b905061030f848061198a565b90501461035e5760405162461bcd60e51b815260206004820152601b60248201527f6e6f742d6d617463682d6c656e6774682d6f7074696f6e2d6f64640000000000604482015260640161029e565b606654905060405180610160016040528088815260200187815260200186815260200160008152602001604051806020016040528060008152508152602001600060018111156103be57634e487b7160e01b600052602160045260246000fd5b81526001600160a01b03861660208201523360408201526060016103e2858061198a565b6103eb91611aaa565b815260200184806020019061040091906119d9565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509385525050506020918201859052838152606582526040908190208351815583830151600182015590830151600282015560608301516003820155608083015180519192610483926004850192909101906110c8565b5060a082015160058201805460ff1916600183818111156104b457634e487b7160e01b600052602160045260246000fd5b021790555060c08201516005820180547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b0393841681029190911790915560e084015160068401805473ffffffffffffffffffffffffffffffffffffffff19169190931617909155820151805161054091600784019160209091019061114c565b50610120820151805161055d9160088401916020909101906111a5565b50610140820151610574906009830190600c6111df565b509050507f2828956644a25a53dbf1e61c09e0a2651c0f2a7fbbda3f549a3d3c58d4cb4ca981888888883389896040516105b59897969594939291906117fe565b60405180910390a1606680549060006105cd83611b9e565b91905055509695505050505050565b60008281526065602090815260408083206007810180548351818602810186019094528084529194936106c6939290859084015b828210156106bc57838290600052602060002001805461062f90611b63565b80601f016020809104026020016040519081016040528092919081815260200182805461065b90611b63565b80156106a85780601f1061067d576101008083540402835291602001916106a8565b820191906000526020600020905b81548152906001019060200180831161068b57829003601f168201915b505050505081526020019060010190610610565b5050505084610d63565b60068301549091506001600160a01b031633146107255760405162461bcd60e51b815260206004820152600c60248201527f756e617574686f72697a65640000000000000000000000000000000000000000604482015260640161029e565b42826002015411156107795760405162461bcd60e51b815260206004820152601560248201527f656e645f74696d65203c3d2074696d657374616d700000000000000000000000604482015260640161029e565b4282600201546202a30061078d9190611a92565b10156107db5760405162461bcd60e51b815260206004820152601e60248201527f656e645f74696d65202b20322064617973203e3d2074696d657374616d700000604482015260640161029e565b82516107f090600484019060208601906110c8565b506003820181905560058201805460ff191660011790556040517fa3c262ffbf369b7ce5804dd0381ee64854a6df80812ec62f785877f99646fd3e9061083b903390879087906116db565b60405180910390a150505050565b61085161121f565b6065600083815260200190815260200160002060405180610160016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820180546108a890611b63565b80601f01602080910402602001604051908101604052809291908181526020018280546108d490611b63565b80156109215780601f106108f657610100808354040283529160200191610921565b820191906000526020600020905b81548152906001019060200180831161090457829003601f168201915b5050509183525050600582015460209091019060ff16600181111561095657634e487b7160e01b600052602160045260246000fd5b600181111561097557634e487b7160e01b600052602160045260246000fd5b815260058201546001600160a01b0361010090910481166020808401919091526006840154909116604080840191909152600784018054825181850281018501909352808352606090940193919290919060009084015b82821015610a785783829060005260206000200180546109eb90611b63565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1790611b63565b8015610a645780601f10610a3957610100808354040283529160200191610a64565b820191906000526020600020905b815481529060010190602001808311610a4757829003601f168201915b5050505050815260200190600101906109cc565b50505050815260200160088201805480602002602001604051908101604052809291908181526020018280548015610acf57602002820191906000526020600020905b815481526020019060010190808311610abb575b505050918352505060408051610180810190915260209091019060098301600c6000835b82821015610b96578382018054610b0990611b63565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3590611b63565b8015610b825780601f10610b5757610100808354040283529160200191610b82565b820191906000526020600020905b815481529060010190602001808311610b6557829003601f168201915b505050505081526020019060010190610af3565b505050915250909392505050565b6033546001600160a01b03163314610bfe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029e565b610c086000610e0e565b565b6000610c166001610e6d565b90508015610c2e576000805461ff0019166101001790555b6000606655610c3b610f88565b8015610c81576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6033546001600160a01b03163314610cde5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029e565b6001600160a01b038116610d5a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161029e565b610c8181610e0e565b6000805b8351811015610dbf57610da1848281518110610d9357634e487b7160e01b600052603260045260246000fd5b602002602001015184610ffb565b15610dad579050610e08565b80610db781611b9e565b915050610d67565b5060405162461bcd60e51b815260206004820152601160248201527f63616e6e6f742d66696e642d696e646578000000000000000000000000000000604482015260640161029e565b92915050565b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615610efb578160ff166001148015610e905750303b155b610ef35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161029e565b506000919050565b60005460ff808416911610610f695760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161029e565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610ff35760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161029e565b610c08611054565b60008160405160200161100e91906116bf565b604051602081830303815290604052805190602001208360405160200161103591906116bf565b6040516020818303038152906040528051906020012014905092915050565b600054610100900460ff166110bf5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161029e565b610c0833610e0e565b8280546110d490611b63565b90600052602060002090601f0160209004810192826110f6576000855561113c565b82601f1061110f57805160ff191683800117855561113c565b8280016001018555821561113c579182015b8281111561113c578251825591602001919060010190611121565b5061114892915061129c565b5090565b828054828255906000526020600020908101928215611199579160200282015b8281111561119957825180516111899184916020909101906110c8565b509160200191906001019061116c565b506111489291506112b1565b82805482825590600052602060002090810192821561113c579160200282018281111561113c578251825591602001919060010190611121565b82600c8101928215611199579160200282015b82811115611199578251805161120f9184916020909101906110c8565b50916020019190600101906111f2565b60405180610160016040528060008152602001600081526020016000815260200160008152602001606081526020016000600181111561126f57634e487b7160e01b600052602160045260246000fd5b815260006020820181905260408201526060808201819052608082015260a0016112976112ce565b905290565b5b80821115611148576000815560010161129d565b808211156111485760006112c582826112f6565b506001016112b1565b604051806101800160405280600c905b60608152602001906001900390816112de5790505090565b50805461130290611b63565b6000825580601f10611312575050565b601f016020900490600052602060002090810190610c81919061129c565b80356001600160a01b0381168114610f8357600080fd5b600082601f830112611357578081fd5b813567ffffffffffffffff81111561137157611371611bcf565b611384601f8201601f1916602001611a19565b818152846020838601011115611398578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156113c3578081fd5b6113cc82611330565b9392505050565b6000602082840312156113e4578081fd5b5035919050565b600080604083850312156113fd578081fd5b82359150602083013567ffffffffffffffff81111561141a578182fd5b61142685828601611347565b9150509250929050565b60008060008060008060c08789031215611448578182fd5b86359550602087013594506040870135935061146660608801611330565b9250608087013567ffffffffffffffff80821115611482578384fd5b908801906040828b031215611495578384fd5b90925060a088013590808211156114aa578283fd5b818901915089601f8301126114bd578283fd5b6114c56119ef565b80838c610180860111156114d7578586fd5b855b600c811015611512578135858111156114f0578788fd5b6114fc8f828901611347565b85525060209384019391909101906001016114d9565b5050809450505050509295509295509295565b600082610180810183835b600c81101561155f578383038752611549838351611693565b6020978801979093509190910190600101611530565b509095945050505050565b600082825180855260208086019550808260051b840101818601855b848110156115b457601f198684030189526115a2838351611693565b98840198925090830190600101611586565b5090979650505050505050565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156115f2578081fd5b8260051b80836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b8381101561163d57815187529582019590820190600101611621565b509495945050505050565b6002811061166657634e487b7160e01b600052602160045260246000fd5b9052565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600081518084526116ab816020860160208601611b33565b601f01601f19169290920160200192915050565b600082516116d1818460208701611b33565b9190910192915050565b6001600160a01b03841681528260208201526060604082015260006117036060830184611693565b95945050505050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152600060808301516101608060a0850152611753610180850183611693565b915060a085015161176760c0860182611648565b5060c08501516001600160a01b03811660e08601525060e0850151610100611799818701836001600160a01b03169052565b80870151915050601f196101208187860301818801526117b9858461156a565b9450808801519250506101408187860301818801526117d8858461160e565b9088015187820390920184880152935090506117f48382611525565b9695505050505050565b60006101008a835260208a818501528960408501528860608501526001600160a01b03808916608086015280881660a0860152508160c085015261014084016118478788611a4a565b60408588015282945080835261016092508287019450828160051b880101925081865b828110156118d75788850361015f19018752813536859003601e19018112611890578889fd5b8401803567ffffffffffffffff8111156118a857898afd5b8036038613156118b657898afd5b6118c387828a850161166a565b98880198965050509085019060010161186a565b505050506118e782880188611a4a565b86830360ff1901610120880152935091506119038184846115c1565b9250505082810360e08401526119198185611525565b9b9a5050505050505050505050565b60006101008a835289602084015288604084015287606084015280608084015261195481840188611693565b91505061196460a0830186611648565b6001600160a01b0380851660c084015280841660e0840152509998505050505050505050565b6000808335601e198436030181126119a0578283fd5b83018035915067ffffffffffffffff8211156119ba578283fd5b6020019150600581901b36038213156119d257600080fd5b9250929050565b6000808335601e198436030181126119a0578182fd5b604051610180810167ffffffffffffffff81118282101715611a1357611a13611bcf565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611a4257611a42611bcf565b604052919050565b6000808335601e19843603018112611a60578283fd5b830160208101925035905067ffffffffffffffff811115611a8057600080fd5b8060051b36038313156119d257600080fd5b60008219821115611aa557611aa5611bb9565b500190565b600067ffffffffffffffff80841115611ac557611ac5611bcf565b8360051b6020611ad6818301611a19565b8681528181019086368582011115611aec578687fd5b8694505b88851015611b2757803586811115611b06578788fd5b611b1236828b01611347565b84525060019490940193918301918301611af0565b50979650505050505050565b60005b83811015611b4e578181015183820152602001611b36565b83811115611b5d576000848401525b50505050565b600181811c90821680611b7757607f821691505b60208210811415611b9857634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611bb257611bb2611bb9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000804000a";

type EventConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Event__factory extends ContractFactory {
  constructor(...args: EventConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Event> {
    return super.deploy(overrides || {}) as Promise<Event>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Event {
    return super.attach(address) as Event;
  }
  override connect(signer: Signer): Event__factory {
    return super.connect(signer) as Event__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventInterface {
    return new utils.Interface(_abi) as EventInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Event {
    return new Contract(address, _abi, signerOrProvider) as Event;
  }
}
