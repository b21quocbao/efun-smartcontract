/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  GRMatch,
  GRMatchInterface,
} from "../../../../contracts/custom/group-predict/GRMatch";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_matchId",
        type: "uint256",
      },
    ],
    name: "info",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "description",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "firstTeam",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "secondTeam",
                type: "uint256",
              },
            ],
            internalType: "struct GDataTypes.Score",
            name: "score",
            type: "tuple",
          },
          {
            internalType: "enum GDataTypes.MatchStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "sToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sTotal",
            type: "uint256",
          },
        ],
        internalType: "struct GDataTypes.Match",
        name: "_match",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class GRMatch__factory {
  static readonly abi = _abi;
  static createInterface(): GRMatchInterface {
    return new utils.Interface(_abi) as GRMatchInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GRMatch {
    return new Contract(address, _abi, signerOrProvider) as GRMatch;
  }
}
