/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MiniMatch,
  MiniMatchInterface,
} from "../../../../contracts/custom/group-predict/MiniMatch";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "descriptions",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sTotal",
        type: "uint256",
      },
    ],
    name: "MatchCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "firstTeam",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondTeam",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct MDataTypes.Score",
        name: "score",
        type: "tuple",
      },
    ],
    name: "MatchScoreUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum MDataTypes.MatchStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "MatchStatusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_descriptions",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "_startTimes",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_endTimes",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_sToken",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_sTotal",
        type: "uint256[]",
      },
    ],
    name: "createMatches",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_matchId",
        type: "uint256",
      },
    ],
    name: "info",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "description",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "firstTeam",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "secondTeam",
                type: "uint256",
              },
            ],
            internalType: "struct MDataTypes.Score",
            name: "score",
            type: "tuple",
          },
          {
            internalType: "enum MDataTypes.MatchStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "sToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sTotal",
            type: "uint256",
          },
        ],
        internalType: "struct MDataTypes.Match",
        name: "_match",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "matches",
    outputs: [
      {
        internalType: "bytes32",
        name: "description",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "firstTeam",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "secondTeam",
            type: "uint256",
          },
        ],
        internalType: "struct MDataTypes.Score",
        name: "score",
        type: "tuple",
      },
      {
        internalType: "enum MDataTypes.MatchStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sTotal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nMatches",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setAdminPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_matchIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_point1",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_point2",
        type: "uint256[]",
      },
    ],
    name: "updateMatchScores",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_matchIds",
        type: "uint256[]",
      },
      {
        internalType: "enum MDataTypes.MatchStatus[]",
        name: "_status",
        type: "uint8[]",
      },
    ],
    name: "updateMatchStatuses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_matchIds",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_sToken",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_sTotal",
        type: "uint256[]",
      },
    ],
    name: "updateSToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type MiniMatchConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MiniMatchConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MiniMatch__factory extends ContractFactory {
  constructor(...args: MiniMatchConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MiniMatch> {
    return super.deploy(overrides || {}) as Promise<MiniMatch>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MiniMatch {
    return super.attach(address) as MiniMatch;
  }
  override connect(signer: Signer): MiniMatch__factory {
    return super.connect(signer) as MiniMatch__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MiniMatchInterface {
    return new utils.Interface(_abi) as MiniMatchInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MiniMatch {
    return new Contract(address, _abi, signerOrProvider) as MiniMatch;
  }
}
