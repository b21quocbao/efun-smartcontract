/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Handicap,
  HandicapInterface,
} from "../../../contracts/custom/Handicap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictOptionStats",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numPredict",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "predictOptions",
            type: "string",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sponsorReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictOptionStats",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a82806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063dc5e10981461003b578063fa29edd914610068575b600080fd5b61004e610049366004610670565b61008b565b604080519283526020830191909152015b60405180910390f35b61007b6100763660046106fa565b610318565b604051901515815260200161005f565b60008060008a73ffffffffffffffffffffffffffffffffffffffff16632e3405998b6040518263ffffffff1660e01b81526004016100cb91815260200190565b60006040518083038186803b1580156100e357600080fd5b505afa1580156100f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261011f9190810190610761565b9050600061017682610120015189806040019061013c91906108a0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061043b92505050565b905080158015610187575084600414155b8061019c575080600414801561019c57508415155b6101ec5760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b801580156101f8575084155b8061020e575080600114801561020e5750846004145b1561022c578561021f888a356109a3565b6102299190610983565b93505b8015801561023a5750846001145b8061025057508060011480156102505750846003145b1561028457856002610262898361096b565b61026d908b356109a3565b6102779190610983565b6102819190610983565b93505b801580156102925750846002145b806102a857508060011480156102a85750846002145b156102b257873593505b801580156102c05750846003145b806102d657508060011480156102d65750846001145b156102ea576102e760028935610983565b93505b60e08201518a906102fd908a35906109a3565b6103079190610983565b925050509850989650505050505050565b6000808385610327898c61096b565b610331919061096b565b61033b91906109a3565b90506000610349888a61096b565b905060006103578a8c6109c2565b9050600061036589846109a3565b905060006002610375898c61096b565b61037f90866109a3565b6103899190610983565b90506000610398600286610983565b9050600060026103a88b8e61096b565b6103b290876109a3565b6103bc9190610983565b905060006103cb600287610983565b90508488101560006103dd838761096b565b8a1015905060006103ee868661096b565b8b1015905060008d158061040257508d6004145b905083801561040e5750825b80156104175750815b80156104205750805b9c505050505050505050505050509998505050505050505050565b6000805b83518110156104975761047984828151811061046b57634e487b7160e01b600052603260045260246000fd5b60200260200101518461049f565b15610485579050610499565b8061048f81610a09565b91505061043f565b505b92915050565b6000816040516020016104b29190610884565b60405160208183030381529060405280519060200120836040516020016104d99190610884565b6040516020818303038152906040528051906020012014905092915050565b805161050381610a50565b919050565b600082601f830112610518578081fd5b8151602061052d61052883610947565b610916565b80838252828201915082860187848660051b890101111561054c578586fd5b855b8581101561058d57815167ffffffffffffffff81111561056c578788fd5b61057a8a87838c0101610606565b855250928401929084019060010161054e565b5090979650505050505050565b600082601f8301126105aa578081fd5b815160206105ba61052883610947565b80838252828201915082860187848660051b89010111156105d9578586fd5b855b8581101561058d578151845292840192908401906001016105db565b80516002811061050357600080fd5b600082601f830112610616578081fd5b815167ffffffffffffffff81111561063057610630610a3a565b610643601f8201601f1916602001610916565b818152846020838601011115610657578283fd5b6106688260208301602087016109d9565b949350505050565b600080600080600080600080610100898b03121561068c578384fd5b883561069781610a50565b9750602089013596506040890135955060608901359450608089013567ffffffffffffffff8111156106c7578485fd5b89016080818c0312156106d8578485fd5b979a969950949793969560a0850135955060c08501359460e001359350915050565b60008060008060008060008060006101208a8c031215610718578081fd5b893561072381610a50565b9b60208b01359b5060408b01359a60608101359a506080810135995060a0810135985060c0810135975060e081013596506101000135945092505050565b600060208284031215610772578081fd5b815167ffffffffffffffff80821115610789578283fd5b90830190610160828603121561079d578283fd5b6107a56108ec565b8251815260208301516020820152604083015160408201526060830151828111156107ce578485fd5b6107da87828601610606565b6060830152506107ec608084016105f7565b60808201526107fd60a084016104f8565b60a082015261080e60c084016104f8565b60c082015260e083015160e082015261010061082b8185016104f8565b908201526101208381015183811115610842578586fd5b61084e88828701610508565b8284015250506101408084015183811115610867578586fd5b6108738882870161059a565b918301919091525095945050505050565b600082516108968184602087016109d9565b9190910192915050565b6000808335601e198436030181126108b6578283fd5b83018035915067ffffffffffffffff8211156108d0578283fd5b6020019150368190038213156108e557600080fd5b9250929050565b604051610160810167ffffffffffffffff8111828210171561091057610910610a3a565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561093f5761093f610a3a565b604052919050565b600067ffffffffffffffff82111561096157610961610a3a565b5060051b60200190565b6000821982111561097e5761097e610a24565b500190565b60008261099e57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156109bd576109bd610a24565b500290565b6000828210156109d4576109d4610a24565b500390565b60005b838110156109f45781810151838201526020016109dc565b83811115610a03576000848401525b50505050565b6000600019821415610a1d57610a1d610a24565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610a7257600080fd5b5056fea164736f6c6343000804000a";

type HandicapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HandicapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Handicap__factory extends ContractFactory {
  constructor(...args: HandicapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Handicap> {
    return super.deploy(overrides || {}) as Promise<Handicap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Handicap {
    return super.attach(address) as Handicap;
  }
  override connect(signer: Signer): Handicap__factory {
    return super.connect(signer) as Handicap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HandicapInterface {
    return new utils.Interface(_abi) as HandicapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Handicap {
    return new Contract(address, _abi, signerOrProvider) as Handicap;
  }
}
