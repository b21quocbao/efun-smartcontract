/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Handicap,
  HandicapInterface,
} from "../../../contracts/custom/Handicap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e44806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063812acab111610050578063812acab1146100a557806383688316146100c857806394558f0a146100db57600080fd5b80634f4d2e1e1461006c5780636341acbc14610092575b600080fd5b61007f61007a3660046109ba565b6100ee565b6040519081526020015b60405180910390f35b61007f6100a0366004610a5f565b610431565b6100b86100b3366004610b91565b610663565b6040519015158152602001610089565b61007f6100d6366004610b08565b610700565b61007f6100e9366004610b91565b610751565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561013357600080fd5b505afa158015610147573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261016f9190810190610c23565b905082915060005b878110156104225788888281811061019f57634e487b7160e01b600052603260045260246000fd5b90506020020135836101b19190610d6a565b9250801580156101c657508160600151600414155b806101df57508060041480156101df5750606082015115155b1561041257801580156101f457506060820151155b8061020e575080600114801561020e575081606001516004145b15610283578487878381811061023457634e487b7160e01b600052603260045260246000fd5b905060200201358a8a8481811061025b57634e487b7160e01b600052603260045260246000fd5b9050602002013561026c9190610da2565b6102769190610d82565b6102809084610dc1565b92505b80158015610295575081606001516001145b806102af57508060011480156102af575081606001516003145b1561033b578460028888848181106102d757634e487b7160e01b600052603260045260246000fd5b90506020020135876102e99190610d6a565b8b8b8581811061030957634e487b7160e01b600052603260045260246000fd5b9050602002013561031a9190610da2565b6103249190610d82565b61032e9190610d82565b6103389084610dc1565b92505b8015801561034d575081606001516002145b806103675750806001148015610367575081606001516002145b156103a15788888281811061038c57634e487b7160e01b600052603260045260246000fd5b905060200201358361039e9190610dc1565b92505b801580156103b3575081606001516003145b806103cd57508060011480156103cd575081606001516001145b156104125760028989838181106103f457634e487b7160e01b600052603260045260246000fd5b905060200201356104059190610d82565b61040f9084610dc1565b92505b61041b81610dd8565b9050610177565b50509998505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561047657600080fd5b505afa15801561048a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104b29190810190610c23565b90506020870135801580156104cc57508160600151600414155b806104e557508060041480156104e55750606082015115155b6105355760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b8015801561054557506060820151155b8061055f575080600114801561055f575081606001516004145b1561057d5785610570888a35610da2565b61057a9190610d82565b92505b8015801561058f575081606001516001145b806105a957508060011480156105a9575081606001516003145b156105dd578560026105bb8983610d6a565b6105c6908b35610da2565b6105d09190610d82565b6105da9190610d82565b92505b801580156105ef575081606001516002145b806106095750806001148015610609575081606001516002145b1561061357873592505b80158015610625575081606001516003145b8061063f575080600114801561063f575081606001516001145b156106535761065060028935610d82565b92505b50509a9950505050505050505050565b6000808385610672898d610d6a565b61067c9190610d6a565b6106869190610da2565b90506000878a8a868181106106ab57634e487b7160e01b600052603260045260246000fd5b905060200201356106bc9190610d6a565b905060006106ca8883610da2565b90508083101560008615806106df5750866004145b90508180156106eb5750805b955050505050509a9950505050505050505050565b60008061073689868a8a8781811061072857634e487b7160e01b600052603260045260246000fd5b9050602002013589886107f9565b90506107428482610da2565b9b9a5050505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561079657600080fd5b505afa1580156107aa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107d29190810190610c23565b9050846107df8789610da2565b6107e99190610d82565b9c9b505050505050505050505050565b6000806108068688610d6a565b905060006108148587610da2565b905060006108228587610dc1565b90508061082f8385610dc1565b6108399190610d82565b9998505050505050505050565b805161085181610e1f565b919050565b60008083601f840112610867578182fd5b50813567ffffffffffffffff81111561087e578182fd5b6020830191508360208260051b850101111561089957600080fd5b9250929050565b600082601f8301126108b0578081fd5b8151602067ffffffffffffffff8211156108cc576108cc610e09565b8160051b6108db828201610d39565b8381528281019086840183880185018910156108f5578687fd5b8693505b858410156109175780518352600193909301929184019184016108f9565b50979650505050505050565b80516002811061085157600080fd5b600082601f830112610942578081fd5b815167ffffffffffffffff81111561095c5761095c610e09565b6020610970601f8301601f19168201610d39565b8281528582848701011115610983578384fd5b835b838110156109a0578581018301518282018401528201610985565b838111156109b057848385840101525b5095945050505050565b600080600080600080600080600060e08a8c0312156109d7578485fd5b89356109e281610e1f565b985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115610a0c578687fd5b610a188d838e01610856565b909850965060808c0135915080821115610a30578586fd5b50610a3d8c828d01610856565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b6000806000806000806000806000808a8c03610160811215610a7f578182fd5b8b35610a8a81610e1f565b9a5060208c0135995060408c0135985060608c013567ffffffffffffffff811115610ab3578283fd5b610abf8e828f01610856565b9099509750506060607f1982011215610ad6578182fd5b50989b979a509598949750929560808501955060e0850135946101008101359450610120810135935061014001359150565b60008060008060008060008060006101008a8c031215610b26578485fd5b8935610b3181610e1f565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610b5a578586fd5b610b668c828d01610856565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610bb0578384fd5b8a35610bbb81610e1f565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610be4578485fd5b610bf08d828e01610856565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610c34578081fd5b815167ffffffffffffffff80821115610c4b578283fd5b908301906101208286031215610c5f578283fd5b610c67610d0f565b82518152602083015160208201526040830151604082015260608301516060820152610c9560808401610923565b6080820152610ca660a08401610846565b60a0820152610cb760c08401610846565b60c082015260e083015182811115610ccd578485fd5b610cd9878286016108a0565b60e0830152506101008084015183811115610cf2578586fd5b610cfe88828701610932565b918301919091525095945050505050565b604051610120810167ffffffffffffffff81118282101715610d3357610d33610e09565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d6257610d62610e09565b604052919050565b60008219821115610d7d57610d7d610df3565b500190565b600082610d9d57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610dbc57610dbc610df3565b500290565b600082821015610dd357610dd3610df3565b500390565b6000600019821415610dec57610dec610df3565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e3457600080fd5b5056fea164736f6c6343000804000a";

type HandicapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HandicapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Handicap__factory extends ContractFactory {
  constructor(...args: HandicapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Handicap> {
    return super.deploy(overrides || {}) as Promise<Handicap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Handicap {
    return super.attach(address) as Handicap;
  }
  override connect(signer: Signer): Handicap__factory {
    return super.connect(signer) as Handicap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HandicapInterface {
    return new utils.Interface(_abi) as HandicapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Handicap {
    return new Contract(address, _abi, signerOrProvider) as Handicap;
  }
}
