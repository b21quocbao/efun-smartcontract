/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Handicap,
  HandicapInterface,
} from "../../../contracts/custom/Handicap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e71806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063812acab111610050578063812acab1146100a557806383688316146100c857806394558f0a146100db57600080fd5b8063061bf2dc1461006c5780634f4d2e1e14610092575b600080fd5b61007f61007a366004610a76565b6100ee565b6040519081526020015b60405180910390f35b61007f6100a03660046109d1565b610327565b6100b86100b3366004610bbe565b61066a565b6040519015158152602001610089565b61007f6100d6366004610b35565b610707565b61007f6100e9366004610bbe565b610758565b604051632e34059960e01b8152600481018b905260009081906001600160a01b038e1690632e3405999060240160006040518083038186803b15801561013357600080fd5b505afa158015610147573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261016f9190810190610c50565b9050602088013583156101f8578015801561018f57508160600151600414155b806101a857508060041480156101a85750606082015115155b6101f85760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b8015801561020857506060820151155b806102225750806001148015610222575081606001516004145b156102405786610233898b35610dcf565b61023d9190610daf565b92505b80158015610252575081606001516001145b8061026c575080600114801561026c575081606001516003145b156102a05786600261027e8a83610d97565b610289908c35610dcf565b6102939190610daf565b61029d9190610daf565b92505b801580156102b2575081606001516002145b806102cc57508060011480156102cc575081606001516002145b156102d657883592505b801580156102e8575081606001516003145b806103025750806001148015610302575081606001516001145b156103165761031360028a35610daf565b92505b50509b9a5050505050505050505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561036c57600080fd5b505afa158015610380573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103a89190810190610c50565b905082915060005b8781101561065b578888828181106103d857634e487b7160e01b600052603260045260246000fd5b90506020020135836103ea9190610d97565b9250801580156103ff57508160600151600414155b8061041857508060041480156104185750606082015115155b1561064b578015801561042d57506060820151155b806104475750806001148015610447575081606001516004145b156104bc578487878381811061046d57634e487b7160e01b600052603260045260246000fd5b905060200201358a8a8481811061049457634e487b7160e01b600052603260045260246000fd5b905060200201356104a59190610dcf565b6104af9190610daf565b6104b99084610dee565b92505b801580156104ce575081606001516001145b806104e857508060011480156104e8575081606001516003145b156105745784600288888481811061051057634e487b7160e01b600052603260045260246000fd5b90506020020135876105229190610d97565b8b8b8581811061054257634e487b7160e01b600052603260045260246000fd5b905060200201356105539190610dcf565b61055d9190610daf565b6105679190610daf565b6105719084610dee565b92505b80158015610586575081606001516002145b806105a057508060011480156105a0575081606001516002145b156105da578888828181106105c557634e487b7160e01b600052603260045260246000fd5b90506020020135836105d79190610dee565b92505b801580156105ec575081606001516003145b806106065750806001148015610606575081606001516001145b1561064b57600289898381811061062d57634e487b7160e01b600052603260045260246000fd5b9050602002013561063e9190610daf565b6106489084610dee565b92505b61065481610e05565b90506103b0565b50509998505050505050505050565b6000808385610679898d610d97565b6106839190610d97565b61068d9190610dcf565b90506000878a8a868181106106b257634e487b7160e01b600052603260045260246000fd5b905060200201356106c39190610d97565b905060006106d18883610dcf565b90508083101560008615806106e65750866004145b90508180156106f25750805b955050505050509a9950505050505050505050565b60008061073d89868a8a8781811061072f57634e487b7160e01b600052603260045260246000fd5b905060200201358988610800565b90506107498482610dcf565b9b9a5050505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561079d57600080fd5b505afa1580156107b1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107d99190810190610c50565b9050846107e68789610dcf565b6107f09190610daf565b9c9b505050505050505050505050565b60008061080d8688610d97565b9050600061081b8587610dcf565b905060006108298587610dee565b9050806108368385610dee565b6108409190610daf565b9998505050505050505050565b805161085881610e4c565b919050565b60008083601f84011261086e578182fd5b50813567ffffffffffffffff811115610885578182fd5b6020830191508360208260051b85010111156108a057600080fd5b9250929050565b600082601f8301126108b7578081fd5b8151602067ffffffffffffffff8211156108d3576108d3610e36565b8160051b6108e2828201610d66565b8381528281019086840183880185018910156108fc578687fd5b8693505b8584101561091e578051835260019390930192918401918401610900565b50979650505050505050565b8035801515811461085857600080fd5b80516002811061085857600080fd5b600082601f830112610959578081fd5b815167ffffffffffffffff81111561097357610973610e36565b6020610987601f8301601f19168201610d66565b828152858284870101111561099a578384fd5b835b838110156109b757858101830151828201840152820161099c565b838111156109c757848385840101525b5095945050505050565b600080600080600080600080600060e08a8c0312156109ee578485fd5b89356109f981610e4c565b985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115610a23578687fd5b610a2f8d838e0161085d565b909850965060808c0135915080821115610a47578586fd5b50610a548c828d0161085d565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b60008060008060008060008060008060006101808c8e031215610a97578182fd5b610aa18c35610e4c565b8b359a5060208c0135995060408c0135985060608c013567ffffffffffffffff811115610acc578283fd5b610ad88e828f0161085d565b90995097505060608c8e03607f19011215610af1578182fd5b60808c01955060e08c013594506101008c013593506101208c013592506101408c01359150610b236101608d0161092a565b90509295989b509295989b9093969950565b60008060008060008060008060006101008a8c031215610b53578485fd5b8935610b5e81610e4c565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610b87578586fd5b610b938c828d0161085d565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610bdd578384fd5b8a35610be881610e4c565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610c11578485fd5b610c1d8d828e0161085d565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610c61578081fd5b815167ffffffffffffffff80821115610c78578283fd5b908301906101208286031215610c8c578283fd5b610c94610d3c565b82518152602083015160208201526040830151604082015260608301516060820152610cc26080840161093a565b6080820152610cd360a0840161084d565b60a0820152610ce460c0840161084d565b60c082015260e083015182811115610cfa578485fd5b610d06878286016108a7565b60e0830152506101008084015183811115610d1f578586fd5b610d2b88828701610949565b918301919091525095945050505050565b604051610120810167ffffffffffffffff81118282101715610d6057610d60610e36565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d8f57610d8f610e36565b604052919050565b60008219821115610daa57610daa610e20565b500190565b600082610dca57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610de957610de9610e20565b500290565b600082821015610e0057610e00610e20565b500390565b6000600019821415610e1957610e19610e20565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e6157600080fd5b5056fea164736f6c6343000804000a";

type HandicapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HandicapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Handicap__factory extends ContractFactory {
  constructor(...args: HandicapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Handicap> {
    return super.deploy(overrides || {}) as Promise<Handicap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Handicap {
    return super.attach(address) as Handicap;
  }
  override connect(signer: Signer): Handicap__factory {
    return super.connect(signer) as Handicap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HandicapInterface {
    return new utils.Interface(_abi) as HandicapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Handicap {
    return new Contract(address, _abi, signerOrProvider) as Handicap;
  }
}
