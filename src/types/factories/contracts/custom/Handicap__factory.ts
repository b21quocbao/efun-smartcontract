/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Handicap,
  HandicapInterface,
} from "../../../contracts/custom/Handicap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d8d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636341acbc14610046578063812acab11461006c578063836883161461008f575b600080fd5b610059610054366004610948565b6100a2565b6040519081526020015b60405180910390f35b61007f61007a366004610a7a565b6102e1565b6040519015158152602001610063565b61005961009d3660046109f1565b610455565b604051632e34059960e01b8152600481018a9052600090819073ffffffffffffffffffffffffffffffffffffffff8d1690632e3405999060240160006040518083038186803b1580156100f457600080fd5b505afa158015610108573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101309190810190610b0c565b905060208701358015801561014a57508160600151600414155b8061016357508060041480156101635750606082015115155b6101b35760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b801580156101c357506060820151155b806101dd57508060011480156101dd575081606001516004145b156101fb57856101ee888a35610cf9565b6101f89190610cd9565b92505b8015801561020d575081606001516001145b806102275750806001148015610227575081606001516003145b1561025b578560026102398983610cc1565b610244908b35610cf9565b61024e9190610cd9565b6102589190610cd9565b92505b8015801561026d575081606001516002145b806102875750806001148015610287575081606001516002145b1561029157873592505b801580156102a3575081606001516003145b806102bd57508060011480156102bd575081606001516001145b156102d1576102ce60028935610cd9565b92505b50509a9950505050505050505050565b60008083856102f0898d610cc1565b6102fa9190610cc1565b6103049190610cf9565b90506000878a8a8681811061032957634e487b7160e01b600052603260045260246000fd5b9050602002013561033a9190610cc1565b905060008a8a8681811061035e57634e487b7160e01b600052603260045260246000fd5b905060200201358c6103709190610d18565b9050600061037e8984610cf9565b90506000600261038e898c610cc1565b6103989086610cf9565b6103a29190610cd9565b905060006103b1600286610cd9565b9050600060026103c18b8e610cc1565b6103cb9087610cf9565b6103d59190610cd9565b905060006103e4600287610cd9565b90508488101560006103f68387610cc1565b8a1015905060006104078686610cc1565b8b1015905060008d158061041b57508d6004145b90508380156104275750825b80156104305750815b80156104395750805b9c505050505050505050505050509a9950505050505050505050565b6000808061048c8a878b8b8881811061047e57634e487b7160e01b600052603260045260246000fd5b905060200201358a89610545565b905060006104c38b888c8c898181106104b557634e487b7160e01b600052603260045260246000fd5b905060200201358b8a610592565b905060006104fa8c898d8d8a8181106104ec57634e487b7160e01b600052603260045260246000fd5b905060200201358c8b61063a565b9050818310801561050a57508083105b1561051757829350610529565b8082106105245780610526565b815b93505b6105338785610cf9565b9e9d5050505050505050505050505050565b6000806105528688610cc1565b905060006105608587610cf9565b9050600061056e8587610d18565b90508061057b8385610d18565b6105859190610cd9565b9998505050505050505050565b60008061059f8688610cc1565b905060006105ad8689610d18565b905060008460026105be8289610cc1565b6105c8908a610cf9565b6105d29190610cd9565b6105dc9190610cd9565b905060006105eb600284610cd9565b905060006105f98789610d18565b90506000610608600283610cd9565b905080846106168589610d18565b6106209190610d18565b61062a9190610cd9565b9c9b505050505050505050505050565b6000806106478688610cc1565b905060006106558689610d18565b90506000610664600288610cd9565b90506000856002610675828a610cc1565b61067f9086610cf9565b6106899190610cd9565b6106939190610cd9565b905060006106a2600288610cd9565b905080826106b08588610d18565b6106ba9190610d18565b6106c49190610cd9565b9b9a5050505050505050505050565b80516106de81610d5b565b919050565b600082601f8301126106f3578081fd5b60405161018080820167ffffffffffffffff838210818311171561071957610719610d45565b816040528391508587848801111561072f578586fd5b8593505b600c84101561076c5780518281111561074a578687fd5b61075689828a016108c0565b8452506001939093019260209283019201610733565b50929695505050505050565b600082601f830112610788578081fd5b8151602061079d61079883610c9d565b610c6c565b80838252828201915082860187848660051b89010111156107bc578586fd5b855b858110156107fd57815167ffffffffffffffff8111156107dc578788fd5b6107ea8a87838c01016108c0565b85525092840192908401906001016107be565b5090979650505050505050565b60008083601f84011261081b578182fd5b50813567ffffffffffffffff811115610832578182fd5b6020830191508360208260051b850101111561084d57600080fd5b9250929050565b600082601f830112610864578081fd5b8151602061087461079883610c9d565b80838252828201915082860187848660051b8901011115610893578586fd5b855b858110156107fd57815184529284019290840190600101610895565b8051600281106106de57600080fd5b600082601f8301126108d0578081fd5b815167ffffffffffffffff8111156108ea576108ea610d45565b60206108fe601f8301601f19168201610c6c565b8281528582848701011115610911578384fd5b835b8381101561092e578581018301518282018401528201610913565b8381111561093e57848385840101525b5095945050505050565b6000806000806000806000806000808a8c03610160811215610968578687fd5b8b3561097381610d5b565b9a5060208c0135995060408c0135985060608c013567ffffffffffffffff81111561099c578788fd5b6109a88e828f0161080a565b9099509750506060607f19820112156109bf578586fd5b50989b979a509598949750929560808501955060e0850135946101008101359450610120810135935061014001359150565b60008060008060008060008060006101008a8c031215610a0f578485fd5b8935610a1a81610d5b565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610a43578586fd5b610a4f8c828d0161080a565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610a99578384fd5b8a35610aa481610d5b565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610acd578485fd5b610ad98d828e0161080a565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610b1d578081fd5b815167ffffffffffffffff80821115610b34578283fd5b908301906101608286031215610b48578283fd5b610b50610c42565b82518152602083015160208201526040830151604082015260608301516060820152608083015182811115610b83578485fd5b610b8f878286016108c0565b608083015250610ba160a084016108b1565b60a0820152610bb260c084016106d3565b60c0820152610bc360e084016106d3565b60e08201526101008084015183811115610bdb578586fd5b610be788828701610778565b8284015250506101208084015183811115610c00578586fd5b610c0c88828701610854565b8284015250506101408084015183811115610c25578586fd5b610c31888287016106e3565b918301919091525095945050505050565b604051610160810167ffffffffffffffff81118282101715610c6657610c66610d45565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c9557610c95610d45565b604052919050565b600067ffffffffffffffff821115610cb757610cb7610d45565b5060051b60200190565b60008219821115610cd457610cd4610d2f565b500190565b600082610cf457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610d1357610d13610d2f565b500290565b600082821015610d2a57610d2a610d2f565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610d7d57600080fd5b5056fea164736f6c6343000804000a";

type HandicapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HandicapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Handicap__factory extends ContractFactory {
  constructor(...args: HandicapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Handicap> {
    return super.deploy(overrides || {}) as Promise<Handicap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Handicap {
    return super.attach(address) as Handicap;
  }
  override connect(signer: Signer): Handicap__factory {
    return super.connect(signer) as Handicap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HandicapInterface {
    return new utils.Interface(_abi) as HandicapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Handicap {
    return new Contract(address, _abi, signerOrProvider) as Handicap;
  }
}
