/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Handicap,
  HandicapInterface,
} from "../../../contracts/custom/Handicap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ee8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063836883161161005057806383688316146100b557806394558f0a146100c8578063dcbfcc97146100db57600080fd5b80634f4d2e1e1461006c578063812acab114610092575b600080fd5b61007f61007a366004610a14565b6100ee565b6040519081526020015b60405180910390f35b6100a56100a0366004610bee565b610431565b6040519015158152602001610089565b61007f6100c3366004610b65565b6104ce565b61007f6100d6366004610bee565b61055f565b61007f6100e9366004610ab9565b610607565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561013357600080fd5b505afa158015610147573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261016f9190810190610c80565b905082915060005b878110156104225788888281811061019f57634e487b7160e01b600052603260045260246000fd5b90506020020135836101b19190610e00565b9250801580156101c657508160600151600414155b806101df57508060041480156101df5750606082015115155b1561041257801580156101f457506060820151155b8061020e575080600414801561020e575081606001516004145b15610283578487878381811061023457634e487b7160e01b600052603260045260246000fd5b905060200201358a8a8481811061025b57634e487b7160e01b600052603260045260246000fd5b9050602002013561026c9190610e38565b6102769190610e18565b6102809084610e57565b92505b80158015610295575081606001516001145b806102af57508060041480156102af575081606001516003145b1561033b578460028888848181106102d757634e487b7160e01b600052603260045260246000fd5b90506020020135876102e99190610e00565b8b8b8581811061030957634e487b7160e01b600052603260045260246000fd5b9050602002013561031a9190610e38565b6103249190610e18565b61032e9190610e18565b6103389084610e57565b92505b8015801561034d575081606001516002145b806103675750806004148015610367575081606001516002145b156103a15788888281811061038c57634e487b7160e01b600052603260045260246000fd5b905060200201358361039e9190610e57565b92505b801580156103b3575081606001516003145b806103cd57508060041480156103cd575081606001516001145b156104125760028989838181106103f457634e487b7160e01b600052603260045260246000fd5b905060200201356104059190610e18565b61040f9084610e57565b92505b61041b81610e6e565b9050610177565b50509998505050505050505050565b6000808385610440898d610e00565b61044a9190610e00565b6104549190610e38565b90506000878a8a8681811061047957634e487b7160e01b600052603260045260246000fd5b9050602002013561048a9190610e00565b905060006104988883610e38565b90508083101560008615806104ad5750866004145b90508180156104b95750805b955050505050509a9950505050505050505050565b6000806104db858a610e00565b9050600084878a8a8781811061050157634e487b7160e01b600052603260045260246000fd5b905060200201356105129190610e38565b61051c9190610e18565b9050600061052a8689610e57565b905080866105388486610e57565b6105429190610e38565b61054c9190610e18565b93505050505b9998505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b1580156105a457600080fd5b505afa1580156105b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e09190810190610c80565b9050846105ed8789610e38565b6105f79190610e18565b9c9b505050505050505050505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561064c57600080fd5b505afa158015610660573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106889190810190610c80565b905060008660200135905060008260e0015182815181106106b957634e487b7160e01b600052603260045260246000fd5b60200260200101519050841561074a57811580156106dc57508260600151600414155b806106f557508160041480156106f55750606083015115155b6107455760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b61076a565b86610756828a35610e38565b6107609190610e18565b9350505050610552565b8115801561077a57506060830151155b806107945750816004148015610794575082606001516004145b156107b257866107a5828a35610e38565b6107af9190610e18565b93505b811580156107c4575082606001516001145b806107de57508160041480156107de575082606001516003145b15610812578660026107f08383610e00565b6107fb908b35610e38565b6108059190610e18565b61080f9190610e18565b93505b81158015610824575082606001516002145b8061083e575081600414801561083e575082606001516002145b1561084857873593505b8115801561085a575082606001516003145b806108745750816004148015610874575082606001516001145b156108855761054c60028935610e18565b5050509998505050505050505050565b80516108a081610eb5565b919050565b60008083601f8401126108b6578182fd5b50813567ffffffffffffffff8111156108cd578182fd5b6020830191508360208260051b85010111156108e857600080fd5b9250929050565b600082601f8301126108ff578081fd5b8151602067ffffffffffffffff82111561091b5761091b610e9f565b8160051b61092a828201610dcf565b838152828101908684018388018501891015610944578687fd5b8693505b85841015610966578051835260019390930192918401918401610948565b50979650505050505050565b80516108a081610ecd565b8051600281106108a057600080fd5b600082601f83011261099c578081fd5b815167ffffffffffffffff8111156109b6576109b6610e9f565b60206109ca601f8301601f19168201610dcf565b82815285828487010111156109dd578384fd5b835b838110156109fa5785810183015182820184015282016109df565b83811115610a0a57848385840101525b5095945050505050565b600080600080600080600080600060e08a8c031215610a31578485fd5b8935610a3c81610eb5565b985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115610a66578687fd5b610a728d838e016108a5565b909850965060808c0135915080821115610a8a578586fd5b50610a978c828d016108a5565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b6000806000806000806000806000898b03610140811215610ad8578586fd5b8a35610ae381610eb5565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610b0c578687fd5b610b188d828e016108a5565b9098509650506060607f1982011215610b2f578485fd5b5060808a01935060e08a013592506101008a013591506101208a0135610b5481610ecd565b809150509295985092959850929598565b60008060008060008060008060006101008a8c031215610b83578485fd5b8935610b8e81610eb5565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610bb7578586fd5b610bc38c828d016108a5565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610c0d578384fd5b8a35610c1881610eb5565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610c41578485fd5b610c4d8d828e016108a5565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610c91578081fd5b815167ffffffffffffffff80821115610ca8578283fd5b908301906101a08286031215610cbc578283fd5b610cc4610da5565b82518152602083015160208201526040830151604082015260608301516060820152610cf26080840161097d565b6080820152610d0360a08401610895565b60a0820152610d1460c08401610895565b60c082015260e083015182811115610d2a578485fd5b610d36878286016108ef565b60e0830152506101008084015183811115610d4f578586fd5b610d5b8882870161098c565b828401525050610120915081830151828201526101409150610d7e828401610972565b91810191909152610160828101519082015261018091820151918101919091529392505050565b6040516101a0810167ffffffffffffffff81118282101715610dc957610dc9610e9f565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610df857610df8610e9f565b604052919050565b60008219821115610e1357610e13610e89565b500190565b600082610e3357634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e5257610e52610e89565b500290565b600082821015610e6957610e69610e89565b500390565b6000600019821415610e8257610e82610e89565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610eca57600080fd5b50565b8015158114610eca57600080fdfea164736f6c6343000804000a";

type HandicapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HandicapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Handicap__factory extends ContractFactory {
  constructor(...args: HandicapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Handicap> {
    return super.deploy(overrides || {}) as Promise<Handicap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Handicap {
    return super.attach(address) as Handicap;
  }
  override connect(signer: Signer): Handicap__factory {
    return super.connect(signer) as Handicap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HandicapInterface {
    return new utils.Interface(_abi) as HandicapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Handicap {
    return new Contract(address, _abi, signerOrProvider) as Handicap;
  }
}
