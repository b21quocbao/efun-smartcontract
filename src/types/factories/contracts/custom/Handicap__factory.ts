/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Handicap,
  HandicapInterface,
} from "../../../contracts/custom/Handicap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611250806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063812acab111610050578063812acab1146100a557806383688316146100c857806394558f0a146100db57600080fd5b80634f4d2e1e1461006c5780636341acbc14610092575b600080fd5b61007f61007a366004610d58565b6100ee565b6040519081526020015b60405180910390f35b61007f6100a0366004610dfd565b610431565b6100b86100b3366004610f2f565b610663565b6040519015158152602001610089565b61007f6100d6366004610ea6565b6107d7565b61007f6100e9366004610f2f565b6108c7565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561013357600080fd5b505afa158015610147573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261016f9190810190610fc1565b905082915060005b878110156104225788888281811061019f57634e487b7160e01b600052603260045260246000fd5b90506020020135836101b19190611176565b9250801580156101c657508160600151600414155b806101df57508060041480156101df5750606082015115155b1561041257801580156101f457506060820151155b8061020e575080600114801561020e575081606001516004145b15610283578487878381811061023457634e487b7160e01b600052603260045260246000fd5b905060200201358a8a8481811061025b57634e487b7160e01b600052603260045260246000fd5b9050602002013561026c91906111ae565b610276919061118e565b61028090846111cd565b92505b80158015610295575081606001516001145b806102af57508060011480156102af575081606001516003145b1561033b578460028888848181106102d757634e487b7160e01b600052603260045260246000fd5b90506020020135876102e99190611176565b8b8b8581811061030957634e487b7160e01b600052603260045260246000fd5b9050602002013561031a91906111ae565b610324919061118e565b61032e919061118e565b61033890846111cd565b92505b8015801561034d575081606001516002145b806103675750806001148015610367575081606001516002145b156103a15788888281811061038c57634e487b7160e01b600052603260045260246000fd5b905060200201358361039e91906111cd565b92505b801580156103b3575081606001516003145b806103cd57508060011480156103cd575081606001516001145b156104125760028989838181106103f457634e487b7160e01b600052603260045260246000fd5b90506020020135610405919061118e565b61040f90846111cd565b92505b61041b816111e4565b9050610177565b50509998505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561047657600080fd5b505afa15801561048a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104b29190810190610fc1565b90506020870135801580156104cc57508160600151600414155b806104e557508060041480156104e55750606082015115155b6105355760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b8015801561054557506060820151155b8061055f575080600114801561055f575081606001516004145b1561057d5785610570888a356111ae565b61057a919061118e565b92505b8015801561058f575081606001516001145b806105a957508060011480156105a9575081606001516003145b156105dd578560026105bb8983611176565b6105c6908b356111ae565b6105d0919061118e565b6105da919061118e565b92505b801580156105ef575081606001516002145b806106095750806001148015610609575081606001516002145b1561061357873592505b80158015610625575081606001516003145b8061063f575080600114801561063f575081606001516001145b15610653576106506002893561118e565b92505b50509a9950505050505050505050565b6000808385610672898d611176565b61067c9190611176565b61068691906111ae565b90506000878a8a868181106106ab57634e487b7160e01b600052603260045260246000fd5b905060200201356106bc9190611176565b905060008a8a868181106106e057634e487b7160e01b600052603260045260246000fd5b905060200201358c6106f291906111cd565b9050600061070089846111ae565b905060006002610710898c611176565b61071a90866111ae565b610724919061118e565b9050600061073360028661118e565b9050600060026107438b8e611176565b61074d90876111ae565b610757919061118e565b9050600061076660028761118e565b90508488101560006107788387611176565b8a1015905060006107898686611176565b8b1015905060008d158061079d57508d6004145b90508380156107a95750825b80156107b25750815b80156107bb5750805b9c505050505050505050505050509a9950505050505050505050565b6000808061080e8a878b8b8881811061080057634e487b7160e01b600052603260045260246000fd5b905060200201358a8961096f565b905060006108458b888c8c8981811061083757634e487b7160e01b600052603260045260246000fd5b905060200201358b8a6109bc565b9050600061087c8c898d8d8a81811061086e57634e487b7160e01b600052603260045260246000fd5b905060200201358c8b610a4a565b9050818310801561088c57508083105b15610899578293506108ab565b8082106108a657806108a8565b815b93505b6108b587856111ae565b9e9d5050505050505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561090c57600080fd5b505afa158015610920573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109489190810190610fc1565b90508461095587896111ae565b61095f919061118e565b9c9b505050505050505050505050565b60008061097c8688611176565b9050600061098a85876111ae565b9050600061099885876111cd565b9050806109a583856111cd565b6109af919061118e565b9998505050505050505050565b6000806109c98688611176565b905060006109d786896111cd565b905060008460026109e88289611176565b6109f2908a6111ae565b6109fc919061118e565b610a06919061118e565b90506000610a1560028461118e565b90506000610a2387896111cd565b90506000610a3260028361118e565b90508084610a4085896111cd565b61095591906111cd565b600080610a578688611176565b90506000610a6586896111cd565b90506000610a7460028861118e565b90506000856002610a85828a611176565b610a8f90866111ae565b610a99919061118e565b610aa3919061118e565b90506000610ab260028861118e565b90508082610ac085886111cd565b610aca91906111cd565b610ad4919061118e565b9b9a5050505050505050505050565b8051610aee8161122b565b919050565b600082601f830112610b03578081fd5b60405161018080820167ffffffffffffffff8382108183111715610b2957610b29611215565b8160405283915085878488011115610b3f578586fd5b8593505b600c841015610b7c57805182811115610b5a578687fd5b610b6689828a01610cd0565b8452506001939093019260209283019201610b43565b50929695505050505050565b600082601f830112610b98578081fd5b81516020610bad610ba883611152565b611121565b80838252828201915082860187848660051b8901011115610bcc578586fd5b855b85811015610c0d57815167ffffffffffffffff811115610bec578788fd5b610bfa8a87838c0101610cd0565b8552509284019290840190600101610bce565b5090979650505050505050565b60008083601f840112610c2b578182fd5b50813567ffffffffffffffff811115610c42578182fd5b6020830191508360208260051b8501011115610c5d57600080fd5b9250929050565b600082601f830112610c74578081fd5b81516020610c84610ba883611152565b80838252828201915082860187848660051b8901011115610ca3578586fd5b855b85811015610c0d57815184529284019290840190600101610ca5565b805160028110610aee57600080fd5b600082601f830112610ce0578081fd5b815167ffffffffffffffff811115610cfa57610cfa611215565b6020610d0e601f8301601f19168201611121565b8281528582848701011115610d21578384fd5b835b83811015610d3e578581018301518282018401528201610d23565b83811115610d4e57848385840101525b5095945050505050565b600080600080600080600080600060e08a8c031215610d75578485fd5b8935610d808161122b565b985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115610daa578687fd5b610db68d838e01610c1a565b909850965060808c0135915080821115610dce578586fd5b50610ddb8c828d01610c1a565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b6000806000806000806000806000808a8c03610160811215610e1d578182fd5b8b35610e288161122b565b9a5060208c0135995060408c0135985060608c013567ffffffffffffffff811115610e51578283fd5b610e5d8e828f01610c1a565b9099509750506060607f1982011215610e74578182fd5b50989b979a509598949750929560808501955060e0850135946101008101359450610120810135935061014001359150565b60008060008060008060008060006101008a8c031215610ec4578283fd5b8935610ecf8161122b565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610ef8578384fd5b610f048c828d01610c1a565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610f4e578384fd5b8a35610f598161122b565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610f82578485fd5b610f8e8d828e01610c1a565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610fd2578081fd5b815167ffffffffffffffff80821115610fe9578283fd5b908301906101608286031215610ffd578283fd5b6110056110f7565b82518152602083015160208201526040830151604082015260608301516060820152608083015182811115611038578485fd5b61104487828601610cd0565b60808301525061105660a08401610cc1565b60a082015261106760c08401610ae3565b60c082015261107860e08401610ae3565b60e08201526101008084015183811115611090578586fd5b61109c88828701610b88565b82840152505061012080840151838111156110b5578586fd5b6110c188828701610c64565b82840152505061014080840151838111156110da578586fd5b6110e688828701610af3565b918301919091525095945050505050565b604051610160810167ffffffffffffffff8111828210171561111b5761111b611215565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561114a5761114a611215565b604052919050565b600067ffffffffffffffff82111561116c5761116c611215565b5060051b60200190565b60008219821115611189576111896111ff565b500190565b6000826111a957634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156111c8576111c86111ff565b500290565b6000828210156111df576111df6111ff565b500390565b60006000198214156111f8576111f86111ff565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461124057600080fd5b5056fea164736f6c6343000804000a";

type HandicapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HandicapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Handicap__factory extends ContractFactory {
  constructor(...args: HandicapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Handicap> {
    return super.deploy(overrides || {}) as Promise<Handicap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Handicap {
    return super.attach(address) as Handicap;
  }
  override connect(signer: Signer): Handicap__factory {
    return super.connect(signer) as Handicap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HandicapInterface {
    return new utils.Interface(_abi) as HandicapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Handicap {
    return new Contract(address, _abi, signerOrProvider) as Handicap;
  }
}
