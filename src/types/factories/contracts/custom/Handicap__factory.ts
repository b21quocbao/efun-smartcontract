/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Handicap,
  HandicapInterface,
} from "../../../contracts/custom/Handicap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e87806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063812acab111610050578063812acab1146100a557806383688316146100c857806394558f0a146100db57600080fd5b8063061bf2dc1461006c5780634f4d2e1e14610092575b600080fd5b61007f61007a366004610a8c565b6100ee565b6040519081526020015b60405180910390f35b61007f6100a03660046109e7565b61034c565b6100b86100b3366004610bd4565b61068f565b6040519015158152602001610089565b61007f6100d6366004610b4b565b61072c565b61007f6100e9366004610bd4565b6107bb565b604051632e34059960e01b8152600481018b905260009081906001600160a01b038e1690632e3405999060240160006040518083038186803b15801561013357600080fd5b505afa158015610147573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261016f9190810190610c66565b9050602088013583156101fd578015801561018f57508160600151600414155b806101a857508060041480156101a85750606082015115155b6101f85760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b61021c565b86610209898b35610de5565b6102139190610dc5565b9250505061033d565b8015801561022c57506060820151155b806102465750806004148015610246575081606001516004145b156102645786610257898b35610de5565b6102619190610dc5565b92505b80158015610276575081606001516001145b806102905750806004148015610290575081606001516003145b156102c4578660026102a28a83610dad565b6102ad908c35610de5565b6102b79190610dc5565b6102c19190610dc5565b92505b801580156102d6575081606001516002145b806102f057508060041480156102f0575081606001516002145b156102fa57883592505b8015801561030c575081606001516003145b806103265750806004148015610326575081606001516001145b1561033a5761033760028a35610dc5565b92505b50505b9b9a5050505050505050505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561039157600080fd5b505afa1580156103a5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103cd9190810190610c66565b905082915060005b87811015610680578888828181106103fd57634e487b7160e01b600052603260045260246000fd5b905060200201358361040f9190610dad565b92508015801561042457508160600151600414155b8061043d575080600414801561043d5750606082015115155b15610670578015801561045257506060820151155b8061046c575080600414801561046c575081606001516004145b156104e1578487878381811061049257634e487b7160e01b600052603260045260246000fd5b905060200201358a8a848181106104b957634e487b7160e01b600052603260045260246000fd5b905060200201356104ca9190610de5565b6104d49190610dc5565b6104de9084610e04565b92505b801580156104f3575081606001516001145b8061050d575080600414801561050d575081606001516003145b156105995784600288888481811061053557634e487b7160e01b600052603260045260246000fd5b90506020020135876105479190610dad565b8b8b8581811061056757634e487b7160e01b600052603260045260246000fd5b905060200201356105789190610de5565b6105829190610dc5565b61058c9190610dc5565b6105969084610e04565b92505b801580156105ab575081606001516002145b806105c557508060041480156105c5575081606001516002145b156105ff578888828181106105ea57634e487b7160e01b600052603260045260246000fd5b90506020020135836105fc9190610e04565b92505b80158015610611575081606001516003145b8061062b575080600414801561062b575081606001516001145b1561067057600289898381811061065257634e487b7160e01b600052603260045260246000fd5b905060200201356106639190610dc5565b61066d9084610e04565b92505b61067981610e1b565b90506103d5565b50509998505050505050505050565b600080838561069e898d610dad565b6106a89190610dad565b6106b29190610de5565b90506000878a8a868181106106d757634e487b7160e01b600052603260045260246000fd5b905060200201356106e89190610dad565b905060006106f68883610de5565b905080831015600086158061070b5750866004145b90508180156107175750805b955050505050509a9950505050505050505050565b600080610739858a610dad565b9050600084878a8a8781811061075f57634e487b7160e01b600052603260045260246000fd5b905060200201356107709190610de5565b61077a9190610dc5565b905060006107888689610e04565b905080866107968486610e04565b6107a09190610de5565b6107aa9190610dc5565b9d9c50505050505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561080057600080fd5b505afa158015610814573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261083c9190810190610c66565b9050846108498789610de5565b6108539190610dc5565b9c9b505050505050505050505050565b805161086e81610e62565b919050565b60008083601f840112610884578182fd5b50813567ffffffffffffffff81111561089b578182fd5b6020830191508360208260051b85010111156108b657600080fd5b9250929050565b600082601f8301126108cd578081fd5b8151602067ffffffffffffffff8211156108e9576108e9610e4c565b8160051b6108f8828201610d7c565b838152828101908684018388018501891015610912578687fd5b8693505b85841015610934578051835260019390930192918401918401610916565b50979650505050505050565b8035801515811461086e57600080fd5b80516002811061086e57600080fd5b600082601f83011261096f578081fd5b815167ffffffffffffffff81111561098957610989610e4c565b602061099d601f8301601f19168201610d7c565b82815285828487010111156109b0578384fd5b835b838110156109cd5785810183015182820184015282016109b2565b838111156109dd57848385840101525b5095945050505050565b600080600080600080600080600060e08a8c031215610a04578485fd5b8935610a0f81610e62565b985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115610a39578687fd5b610a458d838e01610873565b909850965060808c0135915080821115610a5d578586fd5b50610a6a8c828d01610873565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b60008060008060008060008060008060006101808c8e031215610aad578182fd5b610ab78c35610e62565b8b359a5060208c0135995060408c0135985060608c013567ffffffffffffffff811115610ae2578283fd5b610aee8e828f01610873565b90995097505060608c8e03607f19011215610b07578182fd5b60808c01955060e08c013594506101008c013593506101208c013592506101408c01359150610b396101608d01610940565b90509295989b509295989b9093969950565b60008060008060008060008060006101008a8c031215610b69578485fd5b8935610b7481610e62565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610b9d578586fd5b610ba98c828d01610873565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610bf3578384fd5b8a35610bfe81610e62565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610c27578485fd5b610c338d828e01610873565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610c77578081fd5b815167ffffffffffffffff80821115610c8e578283fd5b908301906101208286031215610ca2578283fd5b610caa610d52565b82518152602083015160208201526040830151604082015260608301516060820152610cd860808401610950565b6080820152610ce960a08401610863565b60a0820152610cfa60c08401610863565b60c082015260e083015182811115610d10578485fd5b610d1c878286016108bd565b60e0830152506101008084015183811115610d35578586fd5b610d418882870161095f565b918301919091525095945050505050565b604051610120810167ffffffffffffffff81118282101715610d7657610d76610e4c565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610da557610da5610e4c565b604052919050565b60008219821115610dc057610dc0610e36565b500190565b600082610de057634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610dff57610dff610e36565b500290565b600082821015610e1657610e16610e36565b500390565b6000600019821415610e2f57610e2f610e36565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e7757600080fd5b5056fea164736f6c6343000804000a";

type HandicapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HandicapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Handicap__factory extends ContractFactory {
  constructor(...args: HandicapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Handicap> {
    return super.deploy(overrides || {}) as Promise<Handicap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Handicap {
    return super.attach(address) as Handicap;
  }
  override connect(signer: Signer): Handicap__factory {
    return super.connect(signer) as Handicap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HandicapInterface {
    return new utils.Interface(_abi) as HandicapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Handicap {
    return new Contract(address, _abi, signerOrProvider) as Handicap;
  }
}
