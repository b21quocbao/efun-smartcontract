/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GroupPredict,
  GroupPredictInterface,
} from "../../../contracts/custom/GroupPredict";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRewardSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "getAmountHasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "hostFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platFormfeeBefore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e23806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806383688316116100815780639f5c36f01161005b5780639f5c36f014610178578063ccb32ac51461018b578063dcbfcc971461019e57600080fd5b8063836883161461013f5780638d1d6ea61461015257806394558f0a1461016557600080fd5b80634f4d2e1e116100b25780634f4d2e1e146100eb57806358dcf240146100fe578063812acab11461011157600080fd5b806326232a2e146100ce5780632fb88c4e146100e4575b600080fd5b60645b6040519081526020015b60405180910390f35b60006100d1565b6100d16100f93660046108a3565b6101b1565b6100d161010c366004610948565b610282565b61012f61011f366004610b02565b60019a9950505050505050505050565b60405190151581526020016100db565b6100d161014d366004610a79565b6103ce565b6100d1610160366004610b02565b6103de565b6100d1610173366004610b02565b610435565b6100d1610186366004610cda565b610489565b6100d1610199366004610878565b61049c565b6100d16101ac3660046109d6565b61052a565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b1580156101f657600080fd5b505afa15801561020a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102329190810190610b94565b90508787826060015181811061025857634e487b7160e01b600052603260045260246000fd5b905060200201356000141561026f57829150610274565b600091505b509998505050505050505050565b604051632e34059960e01b81526004810188905260009081906001600160a01b038b1690632e3405999060240160006040518083038186803b1580156102c757600080fd5b505afa1580156102db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103039190810190610b94565b905060008560200135905060008260e00151828151811061033457634e487b7160e01b600052603260045260246000fd5b602002602001015190508888846060015181811061036257634e487b7160e01b600052603260045260246000fd5b905060200201356000141561037d57600093505050506103c2565b88888381811061039d57634e487b7160e01b600052603260045260246000fd5b602002919091013590506103b2883587610d8e565b6103bc9190610d6e565b93505050505b98975050505050505050565b60005b9998505050505050505050565b60008588888581811061040157634e487b7160e01b600052603260045260246000fd5b905060200201356104129190610d56565b61041c8784610d8e565b6104269190610d6e565b9b9a5050505050505050505050565b60008588888581811061045857634e487b7160e01b600052603260045260246000fd5b905060200201356104699190610d56565b8680610475858d610d56565b61047f9190610d56565b61041c9190610d8e565b60006104958383610dad565b9392505050565b604051632e34059960e01b81526004810182905260009081906001600160a01b03851690632e3405999060240160006040518083038186803b1580156104e157600080fd5b505afa1580156104f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261051d9190810190610b94565b6101c00151949350505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561056f57600080fd5b505afa158015610583573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ab9190810190610b94565b905060008660200135905060008260e0015182815181106105dc57634e487b7160e01b600052603260045260246000fd5b602002602001015190508989846060015181811061060a57634e487b7160e01b600052603260045260246000fd5b9050602002013560001415610626575050853591506103d19050565b84156106875787602001358360600151146106875760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b8989838181106106a757634e487b7160e01b600052603260045260246000fd5b6020029190910135905088356106bd888e610d56565b6106c79190610d8e565b6106d19190610d6e565b9d9c50505050505050505050505050565b80516106ed81610df0565b919050565b60008083601f840112610703578182fd5b50813567ffffffffffffffff81111561071a578182fd5b6020830191508360208260051b850101111561073557600080fd5b9250929050565b600082601f83011261074c578081fd5b8151602067ffffffffffffffff82111561076857610768610dda565b8160051b610777828201610d25565b838152828101908684018388018501891015610791578687fd5b8693505b858410156107b3578051835260019390930192918401918401610795565b50979650505050505050565b80516106ed81610e08565b8051600381106106ed57600080fd5b600082601f8301126107e9578081fd5b815167ffffffffffffffff81111561080357610803610dda565b6020610817601f8301601f19168201610d25565b828152858284870101111561082a578384fd5b835b8381101561084757858101830151828201840152820161082c565b8381111561085757848385840101525b5095945050505050565b600060608284031215610872578081fd5b50919050565b6000806040838503121561088a578182fd5b823561089581610df0565b946020939093013593505050565b600080600080600080600080600060e08a8c0312156108c0578485fd5b89356108cb81610df0565b985060208a0135975060408a0135965060608a013567ffffffffffffffff808211156108f5578687fd5b6109018d838e016106f2565b909850965060808c0135915080821115610919578586fd5b506109268c828d016106f2565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b600080600080600080600080610120898b031215610964578384fd5b883561096f81610df0565b97506020890135965060408901359550606089013567ffffffffffffffff811115610998578485fd5b6109a48b828c016106f2565b90965094506109b890508a60808b01610861565b925060e0890135915061010089013590509295985092959890939650565b60008060008060008060008060006101408a8c0312156109f4578485fd5b89356109ff81610df0565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610a28578586fd5b610a348c828d016106f2565b9097509550610a4890508b60808c01610861565b935060e08a013592506101008a013591506101208a0135610a6881610e08565b809150509295985092959850929598565b60008060008060008060008060006101008a8c031215610a97578283fd5b8935610aa281610df0565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610acb578384fd5b610ad78c828d016106f2565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610b21578384fd5b8a35610b2c81610df0565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610b55578485fd5b610b618d828e016106f2565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610ba5578081fd5b815167ffffffffffffffff80821115610bbc578283fd5b908301906101e08286031215610bd0578283fd5b610bd8610cfb565b82518152602083015160208201526040830151604082015260608301516060820152610c06608084016107ca565b6080820152610c1760a084016106e2565b60a0820152610c2860c084016106e2565b60c082015260e083015182811115610c3e578485fd5b610c4a8782860161073c565b60e0830152506101008084015183811115610c63578586fd5b610c6f888287016107d9565b828401525050610120915081830151828201526101409150610c928284016107bf565b91810191909152610160828101519082015261018080830151908201526101a090610cbe8284016107bf565b918101919091526101c091820151918101919091529392505050565b60008060408385031215610cec578182fd5b50508035926020909101359150565b6040516101e0810167ffffffffffffffff81118282101715610d1f57610d1f610dda565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d4e57610d4e610dda565b604052919050565b60008219821115610d6957610d69610dc4565b500190565b600082610d8957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610da857610da8610dc4565b500290565b600082821015610dbf57610dbf610dc4565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e0557600080fd5b50565b8015158114610e0557600080fdfea164736f6c6343000804000a";

type GroupPredictConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroupPredictConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GroupPredict__factory extends ContractFactory {
  constructor(...args: GroupPredictConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GroupPredict> {
    return super.deploy(overrides || {}) as Promise<GroupPredict>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GroupPredict {
    return super.attach(address) as GroupPredict;
  }
  override connect(signer: Signer): GroupPredict__factory {
    return super.connect(signer) as GroupPredict__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroupPredictInterface {
    return new utils.Interface(_abi) as GroupPredictInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GroupPredict {
    return new Contract(address, _abi, signerOrProvider) as GroupPredict;
  }
}
