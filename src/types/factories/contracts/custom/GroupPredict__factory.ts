/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GroupPredict,
  GroupPredictInterface,
} from "../../../contracts/custom/GroupPredict";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRewardSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "getAmountHasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "hostFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e11806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638d1d6ea6116100765780639f5c36f01161005b5780639f5c36f014610166578063ccb32ac514610179578063dcbfcc971461018c57600080fd5b80638d1d6ea61461014057806394558f0a1461015357600080fd5b806358dcf240116100a757806358dcf240146100ec578063812acab1146100ff578063836883161461012d57600080fd5b806326232a2e146100c35780634f4d2e1e146100d9575b600080fd5b60645b6040519081526020015b60405180910390f35b6100c66100e7366004610891565b61019f565b6100c66100fa366004610936565b610270565b61011d61010d366004610af0565b60019a9950505050505050505050565b60405190151581526020016100d0565b6100c661013b366004610a67565b6103bc565b6100c661014e366004610af0565b6103cc565b6100c6610161366004610af0565b610423565b6100c6610174366004610cc8565b610477565b6100c6610187366004610866565b61048a565b6100c661019a3660046109c4565b610518565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b1580156101e457600080fd5b505afa1580156101f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102209190810190610b82565b90508787826060015181811061024657634e487b7160e01b600052603260045260246000fd5b905060200201356000141561025d57829150610262565b600091505b509998505050505050505050565b604051632e34059960e01b81526004810188905260009081906001600160a01b038b1690632e3405999060240160006040518083038186803b1580156102b557600080fd5b505afa1580156102c9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102f19190810190610b82565b905060008560200135905060008260e00151828151811061032257634e487b7160e01b600052603260045260246000fd5b602002602001015190508888846060015181811061035057634e487b7160e01b600052603260045260246000fd5b905060200201356000141561036b57600093505050506103b0565b88888381811061038b57634e487b7160e01b600052603260045260246000fd5b602002919091013590506103a0883587610d7c565b6103aa9190610d5c565b93505050505b98975050505050505050565b60005b9998505050505050505050565b6000858888858181106103ef57634e487b7160e01b600052603260045260246000fd5b905060200201356104009190610d44565b61040a8784610d7c565b6104149190610d5c565b9b9a5050505050505050505050565b60008588888581811061044657634e487b7160e01b600052603260045260246000fd5b905060200201356104579190610d44565b8680610463858d610d44565b61046d9190610d44565b61040a9190610d7c565b60006104838383610d9b565b9392505050565b604051632e34059960e01b81526004810182905260009081906001600160a01b03851690632e3405999060240160006040518083038186803b1580156104cf57600080fd5b505afa1580156104e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261050b9190810190610b82565b6101c00151949350505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561055d57600080fd5b505afa158015610571573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105999190810190610b82565b905060008660200135905060008260e0015182815181106105ca57634e487b7160e01b600052603260045260246000fd5b60200260200101519050898984606001518181106105f857634e487b7160e01b600052603260045260246000fd5b9050602002013560001415610614575050853591506103bf9050565b84156106755787602001358360600151146106755760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b89898381811061069557634e487b7160e01b600052603260045260246000fd5b6020029190910135905088356106ab888e610d44565b6106b59190610d7c565b6106bf9190610d5c565b9d9c50505050505050505050505050565b80516106db81610dde565b919050565b60008083601f8401126106f1578182fd5b50813567ffffffffffffffff811115610708578182fd5b6020830191508360208260051b850101111561072357600080fd5b9250929050565b600082601f83011261073a578081fd5b8151602067ffffffffffffffff82111561075657610756610dc8565b8160051b610765828201610d13565b83815282810190868401838801850189101561077f578687fd5b8693505b858410156107a1578051835260019390930192918401918401610783565b50979650505050505050565b80516106db81610df6565b8051600381106106db57600080fd5b600082601f8301126107d7578081fd5b815167ffffffffffffffff8111156107f1576107f1610dc8565b6020610805601f8301601f19168201610d13565b8281528582848701011115610818578384fd5b835b8381101561083557858101830151828201840152820161081a565b8381111561084557848385840101525b5095945050505050565b600060608284031215610860578081fd5b50919050565b60008060408385031215610878578182fd5b823561088381610dde565b946020939093013593505050565b600080600080600080600080600060e08a8c0312156108ae578485fd5b89356108b981610dde565b985060208a0135975060408a0135965060608a013567ffffffffffffffff808211156108e3578687fd5b6108ef8d838e016106e0565b909850965060808c0135915080821115610907578586fd5b506109148c828d016106e0565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b600080600080600080600080610120898b031215610952578384fd5b883561095d81610dde565b97506020890135965060408901359550606089013567ffffffffffffffff811115610986578485fd5b6109928b828c016106e0565b90965094506109a690508a60808b0161084f565b925060e0890135915061010089013590509295985092959890939650565b60008060008060008060008060006101408a8c0312156109e2578485fd5b89356109ed81610dde565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610a16578586fd5b610a228c828d016106e0565b9097509550610a3690508b60808c0161084f565b935060e08a013592506101008a013591506101208a0135610a5681610df6565b809150509295985092959850929598565b60008060008060008060008060006101008a8c031215610a85578283fd5b8935610a9081610dde565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610ab9578384fd5b610ac58c828d016106e0565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610b0f578384fd5b8a35610b1a81610dde565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610b43578485fd5b610b4f8d828e016106e0565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610b93578081fd5b815167ffffffffffffffff80821115610baa578283fd5b908301906101e08286031215610bbe578283fd5b610bc6610ce9565b82518152602083015160208201526040830151604082015260608301516060820152610bf4608084016107b8565b6080820152610c0560a084016106d0565b60a0820152610c1660c084016106d0565b60c082015260e083015182811115610c2c578485fd5b610c388782860161072a565b60e0830152506101008084015183811115610c51578586fd5b610c5d888287016107c7565b828401525050610120915081830151828201526101409150610c808284016107ad565b91810191909152610160828101519082015261018080830151908201526101a090610cac8284016107ad565b918101919091526101c091820151918101919091529392505050565b60008060408385031215610cda578182fd5b50508035926020909101359150565b6040516101e0810167ffffffffffffffff81118282101715610d0d57610d0d610dc8565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d3c57610d3c610dc8565b604052919050565b60008219821115610d5757610d57610db2565b500190565b600082610d7757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610d9657610d96610db2565b500290565b600082821015610dad57610dad610db2565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610df357600080fd5b50565b8015158114610df357600080fdfea164736f6c6343000804000a";

type GroupPredictConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroupPredictConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GroupPredict__factory extends ContractFactory {
  constructor(...args: GroupPredictConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GroupPredict> {
    return super.deploy(overrides || {}) as Promise<GroupPredict>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GroupPredict {
    return super.attach(address) as GroupPredict;
  }
  override connect(signer: Signer): GroupPredict__factory {
    return super.connect(signer) as GroupPredict__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroupPredictInterface {
    return new utils.Interface(_abi) as GroupPredictInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GroupPredict {
    return new Contract(address, _abi, signerOrProvider) as GroupPredict;
  }
}
