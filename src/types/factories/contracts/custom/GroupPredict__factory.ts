/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GroupPredict,
  GroupPredictInterface,
} from "../../../contracts/custom/GroupPredict";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRewardSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "getAmountHasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "hostFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platFormfeeBefore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e96806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638d1d6ea6116100815780639f5c36f01161005b5780639f5c36f014610176578063ccb32ac514610189578063dcbfcc971461019c57600080fd5b80638d1d6ea614610124578063936c479d1461013757806394558f0a1461016357600080fd5b80634f4d2e1e116100b25780634f4d2e1e146100eb57806358dcf240146100fe578063836883161461011157600080fd5b806326232a2e146100ce5780632fb88c4e146100e4575b600080fd5b60645b6040519081526020015b60405180910390f35b60006100d1565b6100d16100f93660046108a1565b6101af565b6100d161010c366004610946565b610280565b6100d161011f366004610a77565b6103cc565b6100d1610132366004610b00565b6103dc565b610153610145366004610cd8565b600198975050505050505050565b60405190151581526020016100db565b6100d1610171366004610b00565b610433565b6100d1610184366004610d4d565b610487565b6100d1610197366004610876565b61049a565b6100d16101aa3660046109d4565b610528565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b1580156101f457600080fd5b505afa158015610208573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102309190810190610b92565b90508787826060015181811061025657634e487b7160e01b600052603260045260246000fd5b905060200201356000141561026d57829150610272565b600091505b509998505050505050505050565b604051632e34059960e01b81526004810188905260009081906001600160a01b038b1690632e3405999060240160006040518083038186803b1580156102c557600080fd5b505afa1580156102d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103019190810190610b92565b905060008560200135905060008260e00151828151811061033257634e487b7160e01b600052603260045260246000fd5b602002602001015190508888846060015181811061036057634e487b7160e01b600052603260045260246000fd5b905060200201356000141561037b57600093505050506103c0565b88888381811061039b57634e487b7160e01b600052603260045260246000fd5b602002919091013590506103b0883587610e01565b6103ba9190610de1565b93505050505b98975050505050505050565b60005b9998505050505050505050565b6000858888858181106103ff57634e487b7160e01b600052603260045260246000fd5b905060200201356104109190610dc9565b61041a8784610e01565b6104249190610de1565b9b9a5050505050505050505050565b60008588888581811061045657634e487b7160e01b600052603260045260246000fd5b905060200201356104679190610dc9565b8680610473858d610dc9565b61047d9190610dc9565b61041a9190610e01565b60006104938383610e20565b9392505050565b604051632e34059960e01b81526004810182905260009081906001600160a01b03851690632e3405999060240160006040518083038186803b1580156104df57600080fd5b505afa1580156104f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261051b9190810190610b92565b6101c00151949350505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561056d57600080fd5b505afa158015610581573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105a99190810190610b92565b905060008660200135905060008260e0015182815181106105da57634e487b7160e01b600052603260045260246000fd5b602002602001015190508989846060015181811061060857634e487b7160e01b600052603260045260246000fd5b9050602002013560001415610624575050853591506103cf9050565b84156106855787602001358360600151146106855760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b8989838181106106a557634e487b7160e01b600052603260045260246000fd5b6020029190910135905088356106bb888e610dc9565b6106c59190610e01565b6106cf9190610de1565b9d9c50505050505050505050505050565b80516106eb81610e63565b919050565b60008083601f840112610701578182fd5b50813567ffffffffffffffff811115610718578182fd5b6020830191508360208260051b850101111561073357600080fd5b9250929050565b600082601f83011261074a578081fd5b8151602067ffffffffffffffff82111561076657610766610e4d565b8160051b610775828201610d98565b83815282810190868401838801850189101561078f578687fd5b8693505b858410156107b1578051835260019390930192918401918401610793565b50979650505050505050565b80516106eb81610e7b565b8051600381106106eb57600080fd5b600082601f8301126107e7578081fd5b815167ffffffffffffffff81111561080157610801610e4d565b6020610815601f8301601f19168201610d98565b8281528582848701011115610828578384fd5b835b8381101561084557858101830151828201840152820161082a565b8381111561085557848385840101525b5095945050505050565b600060608284031215610870578081fd5b50919050565b60008060408385031215610888578182fd5b823561089381610e63565b946020939093013593505050565b600080600080600080600080600060e08a8c0312156108be578485fd5b89356108c981610e63565b985060208a0135975060408a0135965060608a013567ffffffffffffffff808211156108f3578687fd5b6108ff8d838e016106f0565b909850965060808c0135915080821115610917578586fd5b506109248c828d016106f0565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b600080600080600080600080610120898b031215610962578384fd5b883561096d81610e63565b97506020890135965060408901359550606089013567ffffffffffffffff811115610996578485fd5b6109a28b828c016106f0565b90965094506109b690508a60808b0161085f565b925060e0890135915061010089013590509295985092959890939650565b60008060008060008060008060006101408a8c0312156109f2578485fd5b89356109fd81610e63565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610a26578586fd5b610a328c828d016106f0565b9097509550610a4690508b60808c0161085f565b935060e08a013592506101008a013591506101208a0135610a6681610e7b565b809150509295985092959850929598565b60008060008060008060008060006101008a8c031215610a95578283fd5b8935610aa081610e63565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610ac9578384fd5b610ad58c828d016106f0565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610b1f578384fd5b8a35610b2a81610e63565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610b53578485fd5b610b5f8d828e016106f0565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610ba3578081fd5b815167ffffffffffffffff80821115610bba578283fd5b908301906101e08286031215610bce578283fd5b610bd6610d6e565b82518152602083015160208201526040830151604082015260608301516060820152610c04608084016107c8565b6080820152610c1560a084016106e0565b60a0820152610c2660c084016106e0565b60c082015260e083015182811115610c3c578485fd5b610c488782860161073a565b60e0830152506101008084015183811115610c61578586fd5b610c6d888287016107d7565b828401525050610120915081830151828201526101409150610c908284016107bd565b91810191909152610160828101519082015261018080830151908201526101a090610cbc8284016107bd565b918101919091526101c091820151918101919091529392505050565b60008060008060008060008060e0898b031215610cf3578182fd5b88359750602089013567ffffffffffffffff811115610d10578283fd5b610d1c8b828c016106f0565b999c909b509899604081013599606082013599506080820135985060a0820135975060c09091013595509350505050565b60008060408385031215610d5f578182fd5b50508035926020909101359150565b6040516101e0810167ffffffffffffffff81118282101715610d9257610d92610e4d565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610dc157610dc1610e4d565b604052919050565b60008219821115610ddc57610ddc610e37565b500190565b600082610dfc57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e1b57610e1b610e37565b500290565b600082821015610e3257610e32610e37565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e7857600080fd5b50565b8015158114610e7857600080fdfea164736f6c6343000804000a";

type GroupPredictConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroupPredictConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GroupPredict__factory extends ContractFactory {
  constructor(...args: GroupPredictConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GroupPredict> {
    return super.deploy(overrides || {}) as Promise<GroupPredict>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GroupPredict {
    return super.attach(address) as GroupPredict;
  }
  override connect(signer: Signer): GroupPredict__factory {
    return super.connect(signer) as GroupPredict__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroupPredictInterface {
    return new utils.Interface(_abi) as GroupPredictInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GroupPredict {
    return new Contract(address, _abi, signerOrProvider) as GroupPredict;
  }
}
