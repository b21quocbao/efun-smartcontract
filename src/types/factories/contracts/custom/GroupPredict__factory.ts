/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GroupPredict,
  GroupPredictInterface,
} from "../../../contracts/custom/GroupPredict";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRewardSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610be8806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063812acab11161005b578063812acab1146100ce57806383688316146100fc5780638d1d6ea61461011957806394558f0a1461012c57600080fd5b8063061bf2dc146100825780634f4d2e1e146100a8578063693d113b146100bb575b600080fd5b610095610090366004610821565b61013f565b6040519081526020015b60405180910390f35b6100956100b63660046106d9565b6102bc565b6100956100c936600461077e565b6103e0565b6100ec6100dc366004610967565b60019a9950505050505050505050565b604051901515815260200161009f565b61009561010a3660046108de565b60009998505050505050505050565b610095610127366004610967565b6104b2565b61009561013a366004610967565b6104fa565b604051632e34059960e01b8152600481018b905260009081906001600160a01b038e1690632e3405999060240160006040518083038186803b15801561018457600080fd5b505afa158015610198573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101c091908101906109f9565b9050898982606001518181106101e657634e487b7160e01b600052603260045260246000fd5b90506020020135600014156101fe57505085356102ad565b821561025f57876020013581606001511461025f5760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b89898681811061027f57634e487b7160e01b600052603260045260246000fd5b602002919091013590508835610295868e610b40565b61029f9190610b78565b6102a99190610b58565b9150505b9b9a5050505050505050505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561030157600080fd5b505afa158015610315573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261033d91908101906109f9565b905060004282604001516202a3006103559190610b40565b11158015610387575060018260800151600181111561038457634e487b7160e01b600052602160045260246000fd5b14155b9050888883606001518181106103ad57634e487b7160e01b600052603260045260246000fd5b90506020020135600014806103bf5750805b156103cc578392506103d1565b600092505b50509998505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561042557600080fd5b505afa158015610439573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046191908101906109f9565b905088888581811061048357634e487b7160e01b600052603260045260246000fd5b60200291909101359050610498883585610b78565b6104a29190610b58565b9c9b505050505050505050505050565b6000858888858181106104d557634e487b7160e01b600052603260045260246000fd5b905060200201356104e69190610b40565b6104f08784610b78565b6102ad9190610b58565b60008588888581811061051d57634e487b7160e01b600052603260045260246000fd5b9050602002013561052e9190610b40565b868061053a858d610b40565b6105449190610b40565b6104f09190610b78565b805161055981610bc3565b919050565b60008083601f84011261056f578182fd5b50813567ffffffffffffffff811115610586578182fd5b6020830191508360208260051b85010111156105a157600080fd5b9250929050565b600082601f8301126105b8578081fd5b8151602067ffffffffffffffff8211156105d4576105d4610bad565b8160051b6105e3828201610b0f565b8381528281019086840183880185018910156105fd578687fd5b8693505b8584101561061f578051835260019390930192918401918401610601565b50979650505050505050565b80516002811061055957600080fd5b600082601f83011261064a578081fd5b815167ffffffffffffffff81111561066457610664610bad565b6020610678601f8301601f19168201610b0f565b828152858284870101111561068b578384fd5b835b838110156106a857858101830151828201840152820161068d565b838111156106b857848385840101525b5095945050505050565b6000606082840312156106d3578081fd5b50919050565b600080600080600080600080600060e08a8c0312156106f6578485fd5b893561070181610bc3565b985060208a0135975060408a0135965060608a013567ffffffffffffffff8082111561072b578687fd5b6107378d838e0161055e565b909850965060808c013591508082111561074f578586fd5b5061075c8c828d0161055e565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b6000806000806000806000806000806101608b8d03121561079d578081fd5b8a356107a881610bc3565b995060208b0135985060408b0135975060608b013567ffffffffffffffff8111156107d1578182fd5b6107dd8d828e0161055e565b90985096506107f190508c60808d016106c2565b945060e08b013593506101008b013592506101208b013591506101408b013590509295989b9194979a5092959850565b60008060008060008060008060008060006101808c8e031215610842578081fd5b8b3561084d81610bc3565b9a5060208c0135995060408c0135985060608c013567ffffffffffffffff811115610876578182fd5b6108828e828f0161055e565b909950975061089690508d60808e016106c2565b955060e08c013594506101008c013593506101208c013592506101408c013591506101608c013580151581146108ca578182fd5b809150509295989b509295989b9093969950565b60008060008060008060008060006101008a8c0312156108fc578283fd5b893561090781610bc3565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610930578384fd5b61093c8c828d0161055e565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610986578384fd5b8a3561099181610bc3565b995060208b0135985060408b0135975060608b013567ffffffffffffffff8111156109ba578485fd5b6109c68d828e0161055e565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610a0a578081fd5b815167ffffffffffffffff80821115610a21578283fd5b908301906101208286031215610a35578283fd5b610a3d610ae5565b82518152602083015160208201526040830151604082015260608301516060820152610a6b6080840161062b565b6080820152610a7c60a0840161054e565b60a0820152610a8d60c0840161054e565b60c082015260e083015182811115610aa3578485fd5b610aaf878286016105a8565b60e0830152506101008084015183811115610ac8578586fd5b610ad48882870161063a565b918301919091525095945050505050565b604051610120810167ffffffffffffffff81118282101715610b0957610b09610bad565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b3857610b38610bad565b604052919050565b60008219821115610b5357610b53610b97565b500190565b600082610b7357634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610b9257610b92610b97565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610bd857600080fd5b5056fea164736f6c6343000804000a";

type GroupPredictConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroupPredictConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GroupPredict__factory extends ContractFactory {
  constructor(...args: GroupPredictConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GroupPredict> {
    return super.deploy(overrides || {}) as Promise<GroupPredict>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GroupPredict {
    return super.attach(address) as GroupPredict;
  }
  override connect(signer: Signer): GroupPredict__factory {
    return super.connect(signer) as GroupPredict__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroupPredictInterface {
    return new utils.Interface(_abi) as GroupPredictInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GroupPredict {
    return new Contract(address, _abi, signerOrProvider) as GroupPredict;
  }
}
