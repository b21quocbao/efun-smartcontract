/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GroupPredict,
  GroupPredictInterface,
} from "../../../contracts/custom/GroupPredict";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRewardSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "hostFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d98806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063836883161161007657806394558f0a1161005b57806394558f0a14610138578063ccb32ac51461014b578063dcbfcc971461015e57600080fd5b806383688316146101125780638d1d6ea61461012557600080fd5b806326232a2e146100a85780634f4d2e1e146100be57806358dcf240146100d1578063812acab1146100e4575b600080fd5b60645b6040519081526020015b60405180910390f35b6100ab6100cc366004610850565b610171565b6100ab6100df3660046108f5565b610242565b6101026100f2366004610aaf565b60019a9950505050505050505050565b60405190151581526020016100b5565b6100ab610120366004610a26565b61038e565b6100ab610133366004610aaf565b61039e565b6100ab610146366004610aaf565b6103f5565b6100ab610159366004610825565b610449565b6100ab61016c366004610983565b6104d7565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b1580156101b657600080fd5b505afa1580156101ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101f29190810190610b41565b90508787826060015181811061021857634e487b7160e01b600052603260045260246000fd5b905060200201356000141561022f57829150610234565b600091505b509998505050505050505050565b604051632e34059960e01b81526004810188905260009081906001600160a01b038b1690632e3405999060240160006040518083038186803b15801561028757600080fd5b505afa15801561029b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c39190810190610b41565b905060008560200135905060008260e0015182815181106102f457634e487b7160e01b600052603260045260246000fd5b602002602001015190508888846060015181811061032257634e487b7160e01b600052603260045260246000fd5b905060200201356000141561033d5760009350505050610382565b88888381811061035d57634e487b7160e01b600052603260045260246000fd5b60200291909101359050610372883587610d1a565b61037c9190610cfa565b93505050505b98975050505050505050565b60005b9998505050505050505050565b6000858888858181106103c157634e487b7160e01b600052603260045260246000fd5b905060200201356103d29190610ce2565b6103dc8784610d1a565b6103e69190610cfa565b9b9a5050505050505050505050565b60008588888581811061041857634e487b7160e01b600052603260045260246000fd5b905060200201356104299190610ce2565b8680610435858d610ce2565b61043f9190610ce2565b6103dc9190610d1a565b604051632e34059960e01b81526004810182905260009081906001600160a01b03851690632e3405999060240160006040518083038186803b15801561048e57600080fd5b505afa1580156104a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104ca9190810190610b41565b6101c00151949350505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561051c57600080fd5b505afa158015610530573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105589190810190610b41565b905060008660200135905060008260e00151828151811061058957634e487b7160e01b600052603260045260246000fd5b60200260200101519050898984606001518181106105b757634e487b7160e01b600052603260045260246000fd5b90506020020135600014156105d3575050853591506103919050565b84156106345787602001358360600151146106345760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b89898381811061065457634e487b7160e01b600052603260045260246000fd5b60200291909101359050883561066a888e610ce2565b6106749190610d1a565b61067e9190610cfa565b9d9c50505050505050505050505050565b805161069a81610d65565b919050565b60008083601f8401126106b0578182fd5b50813567ffffffffffffffff8111156106c7578182fd5b6020830191508360208260051b85010111156106e257600080fd5b9250929050565b600082601f8301126106f9578081fd5b8151602067ffffffffffffffff82111561071557610715610d4f565b8160051b610724828201610cb1565b83815282810190868401838801850189101561073e578687fd5b8693505b85841015610760578051835260019390930192918401918401610742565b50979650505050505050565b805161069a81610d7d565b80516002811061069a57600080fd5b600082601f830112610796578081fd5b815167ffffffffffffffff8111156107b0576107b0610d4f565b60206107c4601f8301601f19168201610cb1565b82815285828487010111156107d7578384fd5b835b838110156107f45785810183015182820184015282016107d9565b8381111561080457848385840101525b5095945050505050565b60006060828403121561081f578081fd5b50919050565b60008060408385031215610837578182fd5b823561084281610d65565b946020939093013593505050565b600080600080600080600080600060e08a8c03121561086d578485fd5b893561087881610d65565b985060208a0135975060408a0135965060608a013567ffffffffffffffff808211156108a2578687fd5b6108ae8d838e0161069f565b909850965060808c01359150808211156108c6578586fd5b506108d38c828d0161069f565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b600080600080600080600080610120898b031215610911578384fd5b883561091c81610d65565b97506020890135965060408901359550606089013567ffffffffffffffff811115610945578485fd5b6109518b828c0161069f565b909650945061096590508a60808b0161080e565b925060e0890135915061010089013590509295985092959890939650565b60008060008060008060008060006101408a8c0312156109a1578485fd5b89356109ac81610d65565b985060208a0135975060408a0135965060608a013567ffffffffffffffff8111156109d5578586fd5b6109e18c828d0161069f565b90975095506109f590508b60808c0161080e565b935060e08a013592506101008a013591506101208a0135610a1581610d7d565b809150509295985092959850929598565b60008060008060008060008060006101008a8c031215610a44578283fd5b8935610a4f81610d65565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610a78578384fd5b610a848c828d0161069f565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610ace578384fd5b8a35610ad981610d65565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610b02578485fd5b610b0e8d828e0161069f565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610b52578081fd5b815167ffffffffffffffff80821115610b69578283fd5b908301906101e08286031215610b7d578283fd5b610b85610c87565b82518152602083015160208201526040830151604082015260608301516060820152610bb360808401610777565b6080820152610bc460a0840161068f565b60a0820152610bd560c0840161068f565b60c082015260e083015182811115610beb578485fd5b610bf7878286016106e9565b60e0830152506101008084015183811115610c10578586fd5b610c1c88828701610786565b828401525050610120915081830151828201526101409150610c3f82840161076c565b91810191909152610160828101519082015261018080830151908201526101a090610c6b82840161076c565b918101919091526101c091820151918101919091529392505050565b6040516101e0810167ffffffffffffffff81118282101715610cab57610cab610d4f565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cda57610cda610d4f565b604052919050565b60008219821115610cf557610cf5610d39565b500190565b600082610d1557634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610d3457610d34610d39565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d7a57600080fd5b50565b8015158114610d7a57600080fdfea164736f6c6343000804000a";

type GroupPredictConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroupPredictConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GroupPredict__factory extends ContractFactory {
  constructor(...args: GroupPredictConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GroupPredict> {
    return super.deploy(overrides || {}) as Promise<GroupPredict>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GroupPredict {
    return super.attach(address) as GroupPredict;
  }
  override connect(signer: Signer): GroupPredict__factory {
    return super.connect(signer) as GroupPredict__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroupPredictInterface {
    return new utils.Interface(_abi) as GroupPredictInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GroupPredict {
    return new Contract(address, _abi, signerOrProvider) as GroupPredict;
  }
}
