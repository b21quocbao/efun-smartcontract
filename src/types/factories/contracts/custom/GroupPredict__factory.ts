/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GroupPredict,
  GroupPredictInterface,
} from "../../../contracts/custom/GroupPredict";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRewardSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "getAmountHasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "hostFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platFormfeeBefore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ee3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638d1d6ea6116100815780639f5c36f01161005b5780639f5c36f014610176578063ccb32ac514610189578063dcbfcc971461019c57600080fd5b80638d1d6ea614610124578063936c479d1461013757806394558f0a1461016357600080fd5b80634f4d2e1e116100b25780634f4d2e1e146100eb57806358dcf240146100fe578063836883161461011157600080fd5b806326232a2e146100ce5780632fb88c4e146100e4575b600080fd5b60645b6040519081526020015b60405180910390f35b60006100d1565b6100d16100f93660046108ee565b6101af565b6100d161010c366004610993565b610280565b6100d161011f366004610ac4565b610419565b6100d1610132366004610b4d565b610429565b610153610145366004610d25565b600198975050505050505050565b60405190151581526020016100db565b6100d1610171366004610b4d565b610480565b6100d1610184366004610d9a565b6104d4565b6100d16101973660046108c3565b6104e7565b6100d16101aa366004610a21565b610575565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b1580156101f457600080fd5b505afa158015610208573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102309190810190610bdf565b90508787826060015181811061025657634e487b7160e01b600052603260045260246000fd5b905060200201356000141561026d57829150610272565b600091505b509998505050505050505050565b604051632e34059960e01b81526004810188905260009081906001600160a01b038b1690632e3405999060240160006040518083038186803b1580156102c557600080fd5b505afa1580156102d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103019190810190610bdf565b905060008560200135905060008260e00151828151811061033257634e487b7160e01b600052603260045260246000fd5b6020026020010151905060028081111561035c57634e487b7160e01b600052602160045260246000fd5b8360800151600281111561038057634e487b7160e01b600052602160045260246000fd5b1480156103b75750888884606001518181106103ac57634e487b7160e01b600052603260045260246000fd5b905060200201356000145b156103c8576000935050505061040d565b8888838181106103e857634e487b7160e01b600052603260045260246000fd5b602002919091013590506103fd883587610e4e565b6104079190610e2e565b93505050505b98975050505050505050565b60005b9998505050505050505050565b60008588888581811061044c57634e487b7160e01b600052603260045260246000fd5b9050602002013561045d9190610e16565b6104678784610e4e565b6104719190610e2e565b9b9a5050505050505050505050565b6000858888858181106104a357634e487b7160e01b600052603260045260246000fd5b905060200201356104b49190610e16565b86806104c0858d610e16565b6104ca9190610e16565b6104679190610e4e565b60006104e08383610e6d565b9392505050565b604051632e34059960e01b81526004810182905260009081906001600160a01b03851690632e3405999060240160006040518083038186803b15801561052c57600080fd5b505afa158015610540573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105689190810190610bdf565b6101c00151949350505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b1580156105ba57600080fd5b505afa1580156105ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105f69190810190610bdf565b905060008660200135905060008260e00151828151811061062757634e487b7160e01b600052603260045260246000fd5b6020026020010151905084156106d2578989846060015181811061065b57634e487b7160e01b600052603260045260246000fd5b90506020020135600014156106775750508535915061041c9050565b87602001358360600151146106d25760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b8989838181106106f257634e487b7160e01b600052603260045260246000fd5b602002919091013590508835610708888e610e16565b6107129190610e4e565b61071c9190610e2e565b9d9c50505050505050505050505050565b805161073881610eb0565b919050565b60008083601f84011261074e578182fd5b50813567ffffffffffffffff811115610765578182fd5b6020830191508360208260051b850101111561078057600080fd5b9250929050565b600082601f830112610797578081fd5b8151602067ffffffffffffffff8211156107b3576107b3610e9a565b8160051b6107c2828201610de5565b8381528281019086840183880185018910156107dc578687fd5b8693505b858410156107fe5780518352600193909301929184019184016107e0565b50979650505050505050565b805161073881610ec8565b80516003811061073857600080fd5b600082601f830112610834578081fd5b815167ffffffffffffffff81111561084e5761084e610e9a565b6020610862601f8301601f19168201610de5565b8281528582848701011115610875578384fd5b835b83811015610892578581018301518282018401528201610877565b838111156108a257848385840101525b5095945050505050565b6000606082840312156108bd578081fd5b50919050565b600080604083850312156108d5578182fd5b82356108e081610eb0565b946020939093013593505050565b600080600080600080600080600060e08a8c03121561090b578485fd5b893561091681610eb0565b985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115610940578687fd5b61094c8d838e0161073d565b909850965060808c0135915080821115610964578586fd5b506109718c828d0161073d565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b600080600080600080600080610120898b0312156109af578384fd5b88356109ba81610eb0565b97506020890135965060408901359550606089013567ffffffffffffffff8111156109e3578485fd5b6109ef8b828c0161073d565b9096509450610a0390508a60808b016108ac565b925060e0890135915061010089013590509295985092959890939650565b60008060008060008060008060006101408a8c031215610a3f578485fd5b8935610a4a81610eb0565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610a73578586fd5b610a7f8c828d0161073d565b9097509550610a9390508b60808c016108ac565b935060e08a013592506101008a013591506101208a0135610ab381610ec8565b809150509295985092959850929598565b60008060008060008060008060006101008a8c031215610ae2578283fd5b8935610aed81610eb0565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610b16578384fd5b610b228c828d0161073d565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610b6c578384fd5b8a35610b7781610eb0565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610ba0578485fd5b610bac8d828e0161073d565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610bf0578081fd5b815167ffffffffffffffff80821115610c07578283fd5b908301906101e08286031215610c1b578283fd5b610c23610dbb565b82518152602083015160208201526040830151604082015260608301516060820152610c5160808401610815565b6080820152610c6260a0840161072d565b60a0820152610c7360c0840161072d565b60c082015260e083015182811115610c89578485fd5b610c9587828601610787565b60e0830152506101008084015183811115610cae578586fd5b610cba88828701610824565b828401525050610120915081830151828201526101409150610cdd82840161080a565b91810191909152610160828101519082015261018080830151908201526101a090610d0982840161080a565b918101919091526101c091820151918101919091529392505050565b60008060008060008060008060e0898b031215610d40578182fd5b88359750602089013567ffffffffffffffff811115610d5d578283fd5b610d698b828c0161073d565b999c909b509899604081013599606082013599506080820135985060a0820135975060c09091013595509350505050565b60008060408385031215610dac578182fd5b50508035926020909101359150565b6040516101e0810167ffffffffffffffff81118282101715610ddf57610ddf610e9a565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e0e57610e0e610e9a565b604052919050565b60008219821115610e2957610e29610e84565b500190565b600082610e4957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e6857610e68610e84565b500290565b600082821015610e7f57610e7f610e84565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ec557600080fd5b50565b8015158114610ec557600080fdfea164736f6c6343000804000a";

type GroupPredictConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroupPredictConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GroupPredict__factory extends ContractFactory {
  constructor(...args: GroupPredictConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GroupPredict> {
    return super.deploy(overrides || {}) as Promise<GroupPredict>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GroupPredict {
    return super.attach(address) as GroupPredict;
  }
  override connect(signer: Signer): GroupPredict__factory {
    return super.connect(signer) as GroupPredict__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroupPredictInterface {
    return new utils.Interface(_abi) as GroupPredictInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GroupPredict {
    return new Contract(address, _abi, signerOrProvider) as GroupPredict;
  }
}
