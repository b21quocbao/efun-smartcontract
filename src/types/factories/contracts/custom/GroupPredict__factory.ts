/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GroupPredict,
  GroupPredictInterface,
} from "../../../contracts/custom/GroupPredict";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRewardSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bb9806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063812acab11161005b578063812acab1146100ce57806383688316146100fc5780638d1d6ea61461011957806394558f0a1461012c57600080fd5b8063061bf2dc146100825780634f4d2e1e146100a8578063693d113b146100bb575b600080fd5b6100956100903660046107f2565b61013f565b6040519081526020015b60405180910390f35b6100956100b63660046106aa565b61027e565b6100956100c936600461074f565b6103a2565b6100ec6100dc366004610938565b60019a9950505050505050505050565b604051901515815260200161009f565b61009561010a3660046108af565b60009998505050505050505050565b610095610127366004610938565b610474565b61009561013a366004610938565b6104cb565b604051632e34059960e01b8152600481018b905260009081906001600160a01b038e1690632e3405999060240160006040518083038186803b15801561018457600080fd5b505afa158015610198573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101c091908101906109ca565b905082156102235787602001358160600151146102235760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b89898681811061024357634e487b7160e01b600052603260045260246000fd5b602002919091013590508835610259868e610b11565b6102639190610b49565b61026d9190610b29565b9d9c50505050505050505050505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b1580156102c357600080fd5b505afa1580156102d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102ff91908101906109ca565b905060004282604001516202a3006103179190610b11565b11158015610349575060018260800151600181111561034657634e487b7160e01b600052602160045260246000fd5b14155b90508888836060015181811061036f57634e487b7160e01b600052603260045260246000fd5b90506020020135600014806103815750805b1561038e57839250610393565b600092505b50509998505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b1580156103e757600080fd5b505afa1580156103fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261042391908101906109ca565b905088888581811061044557634e487b7160e01b600052603260045260246000fd5b6020029190910135905061045a883585610b49565b6104649190610b29565b9c9b505050505050505050505050565b60008588888581811061049757634e487b7160e01b600052603260045260246000fd5b905060200201356104a89190610b11565b6104b28784610b49565b6104bc9190610b29565b9b9a5050505050505050505050565b6000858888858181106104ee57634e487b7160e01b600052603260045260246000fd5b905060200201356104ff9190610b11565b868061050b858d610b11565b6105159190610b11565b6104b29190610b49565b805161052a81610b94565b919050565b60008083601f840112610540578182fd5b50813567ffffffffffffffff811115610557578182fd5b6020830191508360208260051b850101111561057257600080fd5b9250929050565b600082601f830112610589578081fd5b8151602067ffffffffffffffff8211156105a5576105a5610b7e565b8160051b6105b4828201610ae0565b8381528281019086840183880185018910156105ce578687fd5b8693505b858410156105f05780518352600193909301929184019184016105d2565b50979650505050505050565b80516002811061052a57600080fd5b600082601f83011261061b578081fd5b815167ffffffffffffffff81111561063557610635610b7e565b6020610649601f8301601f19168201610ae0565b828152858284870101111561065c578384fd5b835b8381101561067957858101830151828201840152820161065e565b8381111561068957848385840101525b5095945050505050565b6000606082840312156106a4578081fd5b50919050565b600080600080600080600080600060e08a8c0312156106c7578485fd5b89356106d281610b94565b985060208a0135975060408a0135965060608a013567ffffffffffffffff808211156106fc578687fd5b6107088d838e0161052f565b909850965060808c0135915080821115610720578586fd5b5061072d8c828d0161052f565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b6000806000806000806000806000806101608b8d03121561076e578081fd5b8a3561077981610b94565b995060208b0135985060408b0135975060608b013567ffffffffffffffff8111156107a2578182fd5b6107ae8d828e0161052f565b90985096506107c290508c60808d01610693565b945060e08b013593506101008b013592506101208b013591506101408b013590509295989b9194979a5092959850565b60008060008060008060008060008060006101808c8e031215610813578081fd5b8b3561081e81610b94565b9a5060208c0135995060408c0135985060608c013567ffffffffffffffff811115610847578182fd5b6108538e828f0161052f565b909950975061086790508d60808e01610693565b955060e08c013594506101008c013593506101208c013592506101408c013591506101608c0135801515811461089b578182fd5b809150509295989b509295989b9093969950565b60008060008060008060008060006101008a8c0312156108cd578283fd5b89356108d881610b94565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610901578384fd5b61090d8c828d0161052f565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610957578384fd5b8a3561096281610b94565b995060208b0135985060408b0135975060608b013567ffffffffffffffff81111561098b578485fd5b6109978d828e0161052f565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b6000602082840312156109db578081fd5b815167ffffffffffffffff808211156109f2578283fd5b908301906101208286031215610a06578283fd5b610a0e610ab6565b82518152602083015160208201526040830151604082015260608301516060820152610a3c608084016105fc565b6080820152610a4d60a0840161051f565b60a0820152610a5e60c0840161051f565b60c082015260e083015182811115610a74578485fd5b610a8087828601610579565b60e0830152506101008084015183811115610a99578586fd5b610aa58882870161060b565b918301919091525095945050505050565b604051610120810167ffffffffffffffff81118282101715610ada57610ada610b7e565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b0957610b09610b7e565b604052919050565b60008219821115610b2457610b24610b68565b500190565b600082610b4457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610b6357610b63610b68565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ba957600080fd5b5056fea164736f6c6343000804000a";

type GroupPredictConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroupPredictConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GroupPredict__factory extends ContractFactory {
  constructor(...args: GroupPredictConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GroupPredict> {
    return super.deploy(overrides || {}) as Promise<GroupPredict>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GroupPredict {
    return super.attach(address) as GroupPredict;
  }
  override connect(signer: Signer): GroupPredict__factory {
    return super.connect(signer) as GroupPredict__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroupPredictInterface {
    return new utils.Interface(_abi) as GroupPredictInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GroupPredict {
    return new Contract(address, _abi, signerOrProvider) as GroupPredict;
  }
}
