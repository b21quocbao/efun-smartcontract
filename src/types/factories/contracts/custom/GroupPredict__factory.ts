/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GroupPredict,
  GroupPredictInterface,
} from "../../../contracts/custom/GroupPredict";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRewardSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c96806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063836883161161005b57806383688316146100e95780638d1d6ea6146100fc57806394558f0a1461010f578063dcbfcc971461012257600080fd5b80634f4d2e1e1461008257806358dcf240146100a8578063812acab1146100bb575b600080fd5b61009561009036600461075b565b610135565b6040519081526020015b60405180910390f35b6100956100b6366004610800565b610206565b6100d96100c93660046109ba565b60019a9950505050505050505050565b604051901515815260200161009f565b6100956100f7366004610931565b610352565b61009561010a3660046109ba565b610362565b61009561011d3660046109ba565b6103b9565b61009561013036600461088e565b61040d565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561017a57600080fd5b505afa15801561018e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101b69190810190610a4c565b9050878782606001518181106101dc57634e487b7160e01b600052603260045260246000fd5b90506020020135600014156101f3578291506101f8565b600091505b509998505050505050505050565b604051632e34059960e01b81526004810188905260009081906001600160a01b038b1690632e3405999060240160006040518083038186803b15801561024b57600080fd5b505afa15801561025f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102879190810190610a4c565b905060008560200135905060008260e0015182815181106102b857634e487b7160e01b600052603260045260246000fd5b60200260200101519050888884606001518181106102e657634e487b7160e01b600052603260045260246000fd5b90506020020135600014156103015760009350505050610346565b88888381811061032157634e487b7160e01b600052603260045260246000fd5b60200291909101359050610336883587610c18565b6103409190610bf8565b93505050505b98975050505050505050565b60005b9998505050505050505050565b60008588888581811061038557634e487b7160e01b600052603260045260246000fd5b905060200201356103969190610be0565b6103a08784610c18565b6103aa9190610bf8565b9b9a5050505050505050505050565b6000858888858181106103dc57634e487b7160e01b600052603260045260246000fd5b905060200201356103ed9190610be0565b86806103f9858d610be0565b6104039190610be0565b6103a09190610c18565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561045257600080fd5b505afa158015610466573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261048e9190810190610a4c565b905060008660200135905060008260e0015182815181106104bf57634e487b7160e01b600052603260045260246000fd5b60200260200101519050898984606001518181106104ed57634e487b7160e01b600052603260045260246000fd5b9050602002013560001415610509575050853591506103559050565b841561056a57876020013583606001511461056a5760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b89898381811061058a57634e487b7160e01b600052603260045260246000fd5b6020029190910135905088356105a0888e610be0565b6105aa9190610c18565b6105b49190610bf8565b9d9c50505050505050505050505050565b80516105d081610c63565b919050565b60008083601f8401126105e6578182fd5b50813567ffffffffffffffff8111156105fd578182fd5b6020830191508360208260051b850101111561061857600080fd5b9250929050565b600082601f83011261062f578081fd5b8151602067ffffffffffffffff82111561064b5761064b610c4d565b8160051b61065a828201610baf565b838152828101908684018388018501891015610674578687fd5b8693505b85841015610696578051835260019390930192918401918401610678565b50979650505050505050565b80516105d081610c7b565b8051600281106105d057600080fd5b600082601f8301126106cc578081fd5b815167ffffffffffffffff8111156106e6576106e6610c4d565b60206106fa601f8301601f19168201610baf565b828152858284870101111561070d578384fd5b835b8381101561072a57858101830151828201840152820161070f565b8381111561073a57848385840101525b5095945050505050565b600060608284031215610755578081fd5b50919050565b600080600080600080600080600060e08a8c031215610778578485fd5b893561078381610c63565b985060208a0135975060408a0135965060608a013567ffffffffffffffff808211156107ad578687fd5b6107b98d838e016105d5565b909850965060808c01359150808211156107d1578586fd5b506107de8c828d016105d5565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b600080600080600080600080610120898b03121561081c578384fd5b883561082781610c63565b97506020890135965060408901359550606089013567ffffffffffffffff811115610850578485fd5b61085c8b828c016105d5565b909650945061087090508a60808b01610744565b925060e0890135915061010089013590509295985092959890939650565b60008060008060008060008060006101408a8c0312156108ac578485fd5b89356108b781610c63565b985060208a0135975060408a0135965060608a013567ffffffffffffffff8111156108e0578586fd5b6108ec8c828d016105d5565b909750955061090090508b60808c01610744565b935060e08a013592506101008a013591506101208a013561092081610c7b565b809150509295985092959850929598565b60008060008060008060008060006101008a8c03121561094f578283fd5b893561095a81610c63565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610983578384fd5b61098f8c828d016105d5565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d0312156109d9578384fd5b8a356109e481610c63565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610a0d578485fd5b610a198d828e016105d5565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610a5d578081fd5b815167ffffffffffffffff80821115610a74578283fd5b908301906101c08286031215610a88578283fd5b610a90610b85565b82518152602083015160208201526040830151604082015260608301516060820152610abe608084016106ad565b6080820152610acf60a084016105c5565b60a0820152610ae060c084016105c5565b60c082015260e083015182811115610af6578485fd5b610b028782860161061f565b60e0830152506101008084015183811115610b1b578586fd5b610b27888287016106bc565b828401525050610120915081830151828201526101409150610b4a8284016106a2565b91810191909152610160828101519082015261018080830151908201526101a090610b768284016106a2565b91810191909152949350505050565b6040516101c0810167ffffffffffffffff81118282101715610ba957610ba9610c4d565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610bd857610bd8610c4d565b604052919050565b60008219821115610bf357610bf3610c37565b500190565b600082610c1357634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610c3257610c32610c37565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c7857600080fd5b50565b8015158114610c7857600080fdfea164736f6c6343000804000a";

type GroupPredictConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroupPredictConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GroupPredict__factory extends ContractFactory {
  constructor(...args: GroupPredictConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GroupPredict> {
    return super.deploy(overrides || {}) as Promise<GroupPredict>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GroupPredict {
    return super.attach(address) as GroupPredict;
  }
  override connect(signer: Signer): GroupPredict__factory {
    return super.connect(signer) as GroupPredict__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroupPredictInterface {
    return new utils.Interface(_abi) as GroupPredictInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GroupPredict {
    return new Contract(address, _abi, signerOrProvider) as GroupPredict;
  }
}
