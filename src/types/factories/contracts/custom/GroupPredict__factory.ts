/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GroupPredict,
  GroupPredictInterface,
} from "../../../contracts/custom/GroupPredict";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictOptionStats",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numPredict",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "predictOptions",
            type: "string",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sponsorReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610720806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063da5a234114610030575b600080fd5b61004361003e3660046103ab565b61005c565b6040805192835260208301919091520160405180910390f35b60008060008873ffffffffffffffffffffffffffffffffffffffff16632e340599896040518263ffffffff1660e01b815260040161009c91815260200190565b60006040518083038186803b1580156100b457600080fd5b505afa1580156100c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526100f09190810190610424565b6080810151909150610143816101096040890189610592565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506101da92505050565b6101935760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b8661019f87358a61067d565b6101a9919061065d565b93508686600001358361012001516101c1919061067d565b6101cb919061065d565b92505050965096945050505050565b6000816040516020016101ed9190610576565b60405160208183030381529060405280519060200120836040516020016102149190610576565b6040516020818303038152906040528051906020012014905092915050565b805161023e816106ee565b919050565b600082601f830112610253578081fd5b8151602061026861026383610639565b610608565b80838252828201915082860187848660051b8901011115610287578586fd5b855b858110156102c857815167ffffffffffffffff8111156102a7578788fd5b6102b58a87838c0101610341565b8552509284019290840190600101610289565b5090979650505050505050565b600082601f8301126102e5578081fd5b815160206102f561026383610639565b80838252828201915082860187848660051b8901011115610314578586fd5b855b858110156102c857815184529284019290840190600101610316565b80516002811061023e57600080fd5b600082601f830112610351578081fd5b815167ffffffffffffffff81111561036b5761036b6106d8565b61037e601f8201601f1916602001610608565b818152846020838601011115610392578283fd5b6103a38260208301602087016106a8565b949350505050565b60008060008060008060c087890312156103c3578182fd5b86356103ce816106ee565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff8111156103fe578283fd5b87016080818a03121561040f578283fd5b8092505060a087013590509295509295509295565b600060208284031215610435578081fd5b815167ffffffffffffffff8082111561044c578283fd5b908301906101a08286031215610460578283fd5b6104686105de565b8251815260208301516020820152604083015160408201526060830151606082015260808301518281111561049b578485fd5b6104a787828601610341565b6080830152506104b960a08401610332565b60a08201526104ca60c08401610233565b60c082015260e0830151828111156104e0578485fd5b6104ec87828601610341565b60e083015250610100610500818501610233565b90820152610120838101519082015261014061051d818501610233565b908201526101608381015183811115610534578586fd5b61054088828701610243565b8284015250506101808084015183811115610559578586fd5b610565888287016102d5565b918301919091525095945050505050565b600082516105888184602087016106a8565b9190910192915050565b6000808335601e198436030181126105a8578283fd5b83018035915067ffffffffffffffff8211156105c2578283fd5b6020019150368190038213156105d757600080fd5b9250929050565b6040516101a0810167ffffffffffffffff81118282101715610602576106026106d8565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610631576106316106d8565b604052919050565b600067ffffffffffffffff821115610653576106536106d8565b5060051b60200190565b60008261067857634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156106a357634e487b7160e01b81526011600452602481fd5b500290565b60005b838110156106c35781810151838201526020016106ab565b838111156106d2576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461071057600080fd5b5056fea164736f6c6343000804000a";

type GroupPredictConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroupPredictConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GroupPredict__factory extends ContractFactory {
  constructor(...args: GroupPredictConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GroupPredict> {
    return super.deploy(overrides || {}) as Promise<GroupPredict>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GroupPredict {
    return super.attach(address) as GroupPredict;
  }
  override connect(signer: Signer): GroupPredict__factory {
    return super.connect(signer) as GroupPredict__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroupPredictInterface {
    return new utils.Interface(_abi) as GroupPredictInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GroupPredict {
    return new Contract(address, _abi, signerOrProvider) as GroupPredict;
  }
}
