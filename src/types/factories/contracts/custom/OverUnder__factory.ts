/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OverUnder,
  OverUnderInterface,
} from "../../../contracts/custom/OverUnder";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "hostFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ea1806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063836883161161005b57806383688316146100ce57806394558f0a146100e1578063ccb32ac5146100f4578063dcbfcc971461010a57600080fd5b806326232a2e146100825780634f4d2e1e14610098578063812acab1146100ab575b600080fd5b60325b6040519081526020015b60405180910390f35b6100856100a636600461098e565b61011d565b6100be6100b9366004610b68565b6102c4565b604051901515815260200161008f565b6100856100dc366004610adf565b610437565b6100856100ef366004610b68565b6105c1565b610085610102366004610963565b600092915050565b610085610118366004610a33565b610669565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561016257600080fd5b505afa158015610176573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261019e9190810190610bfa565b905082915060005b878110156102b55760006101bb600283610e18565b1580156101cc575082606001518210155b905060006101db600284610e18565b60011480156101ee575083606001518311155b90508a8a8481811061021057634e487b7160e01b600052603260045260246000fd5b90506020020135856102229190610d9b565b9450818061022d5750805b156102a2578689898581811061025357634e487b7160e01b600052603260045260246000fd5b905060200201358c8c8681811061027a57634e487b7160e01b600052603260045260246000fd5b9050602002013561028b9190610dc7565b6102959190610db3565b61029f9086610de6565b94505b5050806102ae90610dfd565b90506101a6565b50509998505050505050505050565b6000806102d2600284610e18565b61033f5788886102e3856001610d9b565b81811061030057634e487b7160e01b600052603260045260246000fd5b9050602002013589898581811061032757634e487b7160e01b600052603260045260246000fd5b905060200201356103389190610d9b565b90506103a4565b888861034c600186610de6565b81811061036957634e487b7160e01b600052603260045260246000fd5b9050602002013589898581811061039057634e487b7160e01b600052603260045260246000fd5b905060200201356103a19190610d9b565b90505b6000886103b2876002610dc7565b6103bc9190610db3565b9050600085826103cc8b86610d9b565b6103d69190610d9b565b6103e09190610dc7565b90506000888a8d8d8981811061040657634e487b7160e01b600052603260045260246000fd5b905060200201356104179190610d9b565b6104219190610dc7565b909110159e9d5050505050505050505050505050565b600080610445600284610e18565b6104b2578787610456856001610d9b565b81811061047357634e487b7160e01b600052603260045260246000fd5b9050602002013588888581811061049a57634e487b7160e01b600052603260045260246000fd5b905060200201356104ab9190610d9b565b9050610517565b87876104bf600186610de6565b8181106104dc57634e487b7160e01b600052603260045260246000fd5b9050602002013588888581811061050357634e487b7160e01b600052603260045260246000fd5b905060200201356105149190610d9b565b90505b600087610525876002610dc7565b61052f9190610db3565b9050600061053d8284610d9b565b9050600086898c8c8981811061056357634e487b7160e01b600052603260045260246000fd5b905060200201356105749190610dc7565b61057e9190610db3565b9050600061058c888b610de6565b9050808861059a8486610de6565b6105a49190610dc7565b6105ae9190610db3565b9f9e505050505050505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561060657600080fd5b505afa15801561061a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106429190810190610bfa565b90508461064f8789610dc7565b6106599190610db3565b9c9b505050505050505050505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b1580156106ae57600080fd5b505afa1580156106c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ea9190810190610bfa565b905060008660200135905060008260e00151828151811061071b57634e487b7160e01b600052603260045260246000fd5b602002602001015190506000600289602001356107389190610e18565b15801561074d57508360600151896020013510155b90506000610760600260208c0135610e18565b6001148015610777575084606001518a6020013511155b905086156107d85781806107885750805b6107d85760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b886105a4848c35610dc7565b80516107ef81610e6e565b919050565b60008083601f840112610805578182fd5b50813567ffffffffffffffff81111561081c578182fd5b6020830191508360208260051b850101111561083757600080fd5b9250929050565b600082601f83011261084e578081fd5b8151602067ffffffffffffffff82111561086a5761086a610e58565b8160051b610879828201610d6a565b838152828101908684018388018501891015610893578687fd5b8693505b858410156108b5578051835260019390930192918401918401610897565b50979650505050505050565b80516107ef81610e86565b8051600381106107ef57600080fd5b600082601f8301126108eb578081fd5b815167ffffffffffffffff81111561090557610905610e58565b6020610919601f8301601f19168201610d6a565b828152858284870101111561092c578384fd5b835b8381101561094957858101830151828201840152820161092e565b8381111561095957848385840101525b5095945050505050565b60008060408385031215610975578182fd5b823561098081610e6e565b946020939093013593505050565b600080600080600080600080600060e08a8c0312156109ab578485fd5b89356109b681610e6e565b985060208a0135975060408a0135965060608a013567ffffffffffffffff808211156109e0578687fd5b6109ec8d838e016107f4565b909850965060808c0135915080821115610a04578586fd5b50610a118c828d016107f4565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b6000806000806000806000806000898b03610140811215610a52578586fd5b8a35610a5d81610e6e565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610a86578687fd5b610a928d828e016107f4565b9098509650506060607f1982011215610aa9578485fd5b5060808a01935060e08a013592506101008a013591506101208a0135610ace81610e86565b809150509295985092959850929598565b60008060008060008060008060006101008a8c031215610afd578485fd5b8935610b0881610e6e565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610b31578586fd5b610b3d8c828d016107f4565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610b87578384fd5b8a35610b9281610e6e565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610bbb578485fd5b610bc78d828e016107f4565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610c0b578081fd5b815167ffffffffffffffff80821115610c22578283fd5b908301906101e08286031215610c36578283fd5b610c3e610d40565b82518152602083015160208201526040830151604082015260608301516060820152610c6c608084016108cc565b6080820152610c7d60a084016107e4565b60a0820152610c8e60c084016107e4565b60c082015260e083015182811115610ca4578485fd5b610cb08782860161083e565b60e0830152506101008084015183811115610cc9578586fd5b610cd5888287016108db565b828401525050610120915081830151828201526101409150610cf88284016108c1565b91810191909152610160828101519082015261018080830151908201526101a090610d248284016108c1565b918101919091526101c091820151918101919091529392505050565b6040516101e0810167ffffffffffffffff81118282101715610d6457610d64610e58565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d9357610d93610e58565b604052919050565b60008219821115610dae57610dae610e2c565b500190565b600082610dc257610dc2610e42565b500490565b6000816000190483118215151615610de157610de1610e2c565b500290565b600082821015610df857610df8610e2c565b500390565b6000600019821415610e1157610e11610e2c565b5060010190565b600082610e2757610e27610e42565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e8357600080fd5b50565b8015158114610e8357600080fdfea164736f6c6343000804000a";

type OverUnderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OverUnderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OverUnder__factory extends ContractFactory {
  constructor(...args: OverUnderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OverUnder> {
    return super.deploy(overrides || {}) as Promise<OverUnder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OverUnder {
    return super.attach(address) as OverUnder;
  }
  override connect(signer: Signer): OverUnder__factory {
    return super.connect(signer) as OverUnder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OverUnderInterface {
    return new utils.Interface(_abi) as OverUnderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OverUnder {
    return new Contract(address, _abi, signerOrProvider) as OverUnder;
  }
}
