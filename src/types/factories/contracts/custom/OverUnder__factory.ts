/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OverUnder,
  OverUnderInterface,
} from "../../../contracts/custom/OverUnder";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610dac806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063812acab111610050578063812acab1146100a557806383688316146100c857806394558f0a146100db57600080fd5b80634f4d2e1e1461006c5780636341acbc14610092575b600080fd5b61007f61007a366004610904565b6100ee565b6040519081526020015b60405180910390f35b61007f6100a03660046109a9565b610295565b6100b86100b3366004610adb565b6103eb565b6040519015158152602001610089565b61007f6100d6366004610a52565b61055e565b61007f6100e9366004610adb565b6106e8565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561013357600080fd5b505afa158015610147573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261016f9190810190610b6d565b905082915060005b8781101561028657600061018c600283610d31565b15801561019d575082606001518210155b905060006101ac600284610d31565b60011480156101bf575083606001518311155b90508a8a848181106101e157634e487b7160e01b600052603260045260246000fd5b90506020020135856101f39190610cb4565b945081806101fe5750805b15610273578689898581811061022457634e487b7160e01b600052603260045260246000fd5b905060200201358c8c8681811061024b57634e487b7160e01b600052603260045260246000fd5b9050602002013561025c9190610ce0565b6102669190610ccc565b6102709086610cff565b94505b50508061027f90610d16565b9050610177565b50509998505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b1580156102da57600080fd5b505afa1580156102ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103169190810190610b6d565b90506000610329600260208a0135610d31565b15801561033e57508160600151886020013510155b90506000610351600260208b0135610d31565b600114801561036857508260600151896020013511155b905081806103735750805b6103c35760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b866103cf898b35610ce0565b6103d99190610ccc565b9e9d5050505050505050505050505050565b6000806103f9600284610d31565b61046657888861040a856001610cb4565b81811061042757634e487b7160e01b600052603260045260246000fd5b9050602002013589898581811061044e57634e487b7160e01b600052603260045260246000fd5b9050602002013561045f9190610cb4565b90506104cb565b8888610473600186610cff565b81811061049057634e487b7160e01b600052603260045260246000fd5b905060200201358989858181106104b757634e487b7160e01b600052603260045260246000fd5b905060200201356104c89190610cb4565b90505b6000886104d9876002610ce0565b6104e39190610ccc565b9050600085826104f38b86610cb4565b6104fd9190610cb4565b6105079190610ce0565b90506000888a8d8d8981811061052d57634e487b7160e01b600052603260045260246000fd5b9050602002013561053e9190610cb4565b6105489190610ce0565b909110159e9d5050505050505050505050505050565b60008061056c600284610d31565b6105d957878761057d856001610cb4565b81811061059a57634e487b7160e01b600052603260045260246000fd5b905060200201358888858181106105c157634e487b7160e01b600052603260045260246000fd5b905060200201356105d29190610cb4565b905061063e565b87876105e6600186610cff565b81811061060357634e487b7160e01b600052603260045260246000fd5b9050602002013588888581811061062a57634e487b7160e01b600052603260045260246000fd5b9050602002013561063b9190610cb4565b90505b60008761064c876002610ce0565b6106569190610ccc565b90506000856106658385610cb4565b61066f9190610ce0565b90506000888b8b8881811061069457634e487b7160e01b600052603260045260246000fd5b905060200201356106a59190610ce0565b905060006106b3888b610cff565b905087816106c18486610cff565b6106cb9190610ccc565b6106d59190610ce0565b9f9e505050505050505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561072d57600080fd5b505afa158015610741573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107699190810190610b6d565b9050846107768789610ce0565b6107809190610ccc565b9c9b505050505050505050505050565b805161079b81610d87565b919050565b60008083601f8401126107b1578182fd5b50813567ffffffffffffffff8111156107c8578182fd5b6020830191508360208260051b85010111156107e357600080fd5b9250929050565b600082601f8301126107fa578081fd5b8151602067ffffffffffffffff82111561081657610816610d71565b8160051b610825828201610c83565b83815282810190868401838801850189101561083f578687fd5b8693505b85841015610861578051835260019390930192918401918401610843565b50979650505050505050565b80516002811061079b57600080fd5b600082601f83011261088c578081fd5b815167ffffffffffffffff8111156108a6576108a6610d71565b60206108ba601f8301601f19168201610c83565b82815285828487010111156108cd578384fd5b835b838110156108ea5785810183015182820184015282016108cf565b838111156108fa57848385840101525b5095945050505050565b600080600080600080600080600060e08a8c031215610921578485fd5b893561092c81610d87565b985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115610956578687fd5b6109628d838e016107a0565b909850965060808c013591508082111561097a578586fd5b506109878c828d016107a0565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b6000806000806000806000806000808a8c036101608112156109c9578182fd5b8b356109d481610d87565b9a5060208c0135995060408c0135985060608c013567ffffffffffffffff8111156109fd578283fd5b610a098e828f016107a0565b9099509750506060607f1982011215610a20578182fd5b50989b979a509598949750929560808501955060e0850135946101008101359450610120810135935061014001359150565b60008060008060008060008060006101008a8c031215610a70578485fd5b8935610a7b81610d87565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610aa4578586fd5b610ab08c828d016107a0565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610afa578384fd5b8a35610b0581610d87565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610b2e578485fd5b610b3a8d828e016107a0565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610b7e578081fd5b815167ffffffffffffffff80821115610b95578283fd5b908301906101208286031215610ba9578283fd5b610bb1610c59565b82518152602083015160208201526040830151604082015260608301516060820152610bdf6080840161086d565b6080820152610bf060a08401610790565b60a0820152610c0160c08401610790565b60c082015260e083015182811115610c17578485fd5b610c23878286016107ea565b60e0830152506101008084015183811115610c3c578586fd5b610c488882870161087c565b918301919091525095945050505050565b604051610120810167ffffffffffffffff81118282101715610c7d57610c7d610d71565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cac57610cac610d71565b604052919050565b60008219821115610cc757610cc7610d45565b500190565b600082610cdb57610cdb610d5b565b500490565b6000816000190483118215151615610cfa57610cfa610d45565b500290565b600082821015610d1157610d11610d45565b500390565b6000600019821415610d2a57610d2a610d45565b5060010190565b600082610d4057610d40610d5b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d9c57600080fd5b5056fea164736f6c6343000804000a";

type OverUnderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OverUnderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OverUnder__factory extends ContractFactory {
  constructor(...args: OverUnderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OverUnder> {
    return super.deploy(overrides || {}) as Promise<OverUnder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OverUnder {
    return super.attach(address) as OverUnder;
  }
  override connect(signer: Signer): OverUnder__factory {
    return super.connect(signer) as OverUnder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OverUnderInterface {
    return new utils.Interface(_abi) as OverUnderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OverUnder {
    return new Contract(address, _abi, signerOrProvider) as OverUnder;
  }
}
