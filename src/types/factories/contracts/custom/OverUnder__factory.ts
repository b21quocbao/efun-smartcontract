/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OverUnder,
  OverUnderInterface,
} from "../../../contracts/custom/OverUnder";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610dbc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063812acab111610050578063812acab1146100a557806383688316146100c857806394558f0a146100db57600080fd5b8063061bf2dc1461006c5780634f4d2e1e14610092575b600080fd5b61007f61007a3660046109a3565b6100ee565b6040519081526020015b60405180910390f35b61007f6100a03660046108fe565b61024b565b6100b86100b3366004610aeb565b6103f2565b6040519015158152602001610089565b61007f6100d6366004610a62565b610565565b61007f6100e9366004610aeb565b6106d2565b604051632e34059960e01b8152600481018b905260009081906001600160a01b038e1690632e3405999060240160006040518083038186803b15801561013357600080fd5b505afa158015610147573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261016f9190810190610b7d565b90506000610182600260208b0135610d41565b15801561019757508160600151896020013510155b905060006101aa600260208c0135610d41565b60011480156101c1575082606001518a6020013511155b905084156102225781806101d25750805b6102225760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b8761022e8a8c35610cf0565b6102389190610cdc565b9f9e505050505050505050505050505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561029057600080fd5b505afa1580156102a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102cc9190810190610b7d565b905082915060005b878110156103e35760006102e9600283610d41565b1580156102fa575082606001518210155b90506000610309600284610d41565b600114801561031c575083606001518311155b90508a8a8481811061033e57634e487b7160e01b600052603260045260246000fd5b90506020020135856103509190610cc4565b9450818061035b5750805b156103d0578689898581811061038157634e487b7160e01b600052603260045260246000fd5b905060200201358c8c868181106103a857634e487b7160e01b600052603260045260246000fd5b905060200201356103b99190610cf0565b6103c39190610cdc565b6103cd9086610d0f565b94505b5050806103dc90610d26565b90506102d4565b50509998505050505050505050565b600080610400600284610d41565b61046d578888610411856001610cc4565b81811061042e57634e487b7160e01b600052603260045260246000fd5b9050602002013589898581811061045557634e487b7160e01b600052603260045260246000fd5b905060200201356104669190610cc4565b90506104d2565b888861047a600186610d0f565b81811061049757634e487b7160e01b600052603260045260246000fd5b905060200201358989858181106104be57634e487b7160e01b600052603260045260246000fd5b905060200201356104cf9190610cc4565b90505b6000886104e0876002610cf0565b6104ea9190610cdc565b9050600085826104fa8b86610cc4565b6105049190610cc4565b61050e9190610cf0565b90506000888a8d8d8981811061053457634e487b7160e01b600052603260045260246000fd5b905060200201356105459190610cc4565b61054f9190610cf0565b909110159e9d5050505050505050505050505050565b600080610573600284610d41565b6105e0578787610584856001610cc4565b8181106105a157634e487b7160e01b600052603260045260246000fd5b905060200201358888858181106105c857634e487b7160e01b600052603260045260246000fd5b905060200201356105d99190610cc4565b9050610645565b87876105ed600186610d0f565b81811061060a57634e487b7160e01b600052603260045260246000fd5b9050602002013588888581811061063157634e487b7160e01b600052603260045260246000fd5b905060200201356106429190610cc4565b90505b600087610653876002610cf0565b61065d9190610cdc565b9050600061066b8284610cc4565b9050600086898c8c8981811061069157634e487b7160e01b600052603260045260246000fd5b905060200201356106a29190610cf0565b6106ac9190610cdc565b905060006106ba888b610d0f565b905080886106c88486610d0f565b61022e9190610cf0565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561071757600080fd5b505afa15801561072b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107539190810190610b7d565b9050846107608789610cf0565b61076a9190610cdc565b9c9b505050505050505050505050565b805161078581610d97565b919050565b60008083601f84011261079b578182fd5b50813567ffffffffffffffff8111156107b2578182fd5b6020830191508360208260051b85010111156107cd57600080fd5b9250929050565b600082601f8301126107e4578081fd5b8151602067ffffffffffffffff82111561080057610800610d81565b8160051b61080f828201610c93565b838152828101908684018388018501891015610829578687fd5b8693505b8584101561084b57805183526001939093019291840191840161082d565b50979650505050505050565b8035801515811461078557600080fd5b80516002811061078557600080fd5b600082601f830112610886578081fd5b815167ffffffffffffffff8111156108a0576108a0610d81565b60206108b4601f8301601f19168201610c93565b82815285828487010111156108c7578384fd5b835b838110156108e45785810183015182820184015282016108c9565b838111156108f457848385840101525b5095945050505050565b600080600080600080600080600060e08a8c03121561091b578485fd5b893561092681610d97565b985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115610950578687fd5b61095c8d838e0161078a565b909850965060808c0135915080821115610974578586fd5b506109818c828d0161078a565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b60008060008060008060008060008060006101808c8e0312156109c4578182fd5b6109ce8c35610d97565b8b359a5060208c0135995060408c0135985060608c013567ffffffffffffffff8111156109f9578283fd5b610a058e828f0161078a565b90995097505060608c8e03607f19011215610a1e578182fd5b60808c01955060e08c013594506101008c013593506101208c013592506101408c01359150610a506101608d01610857565b90509295989b509295989b9093969950565b60008060008060008060008060006101008a8c031215610a80578485fd5b8935610a8b81610d97565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610ab4578586fd5b610ac08c828d0161078a565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610b0a578384fd5b8a35610b1581610d97565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610b3e578485fd5b610b4a8d828e0161078a565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610b8e578081fd5b815167ffffffffffffffff80821115610ba5578283fd5b908301906101208286031215610bb9578283fd5b610bc1610c69565b82518152602083015160208201526040830151604082015260608301516060820152610bef60808401610867565b6080820152610c0060a0840161077a565b60a0820152610c1160c0840161077a565b60c082015260e083015182811115610c27578485fd5b610c33878286016107d4565b60e0830152506101008084015183811115610c4c578586fd5b610c5888828701610876565b918301919091525095945050505050565b604051610120810167ffffffffffffffff81118282101715610c8d57610c8d610d81565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cbc57610cbc610d81565b604052919050565b60008219821115610cd757610cd7610d55565b500190565b600082610ceb57610ceb610d6b565b500490565b6000816000190483118215151615610d0a57610d0a610d55565b500290565b600082821015610d2157610d21610d55565b500390565b6000600019821415610d3a57610d3a610d55565b5060010190565b600082610d5057610d50610d6b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610dac57600080fd5b5056fea164736f6c6343000804000a";

type OverUnderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OverUnderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OverUnder__factory extends ContractFactory {
  constructor(...args: OverUnderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OverUnder> {
    return super.deploy(overrides || {}) as Promise<OverUnder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OverUnder {
    return super.attach(address) as OverUnder;
  }
  override connect(signer: Signer): OverUnder__factory {
    return super.connect(signer) as OverUnder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OverUnderInterface {
    return new utils.Interface(_abi) as OverUnderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OverUnder {
    return new Contract(address, _abi, signerOrProvider) as OverUnder;
  }
}
