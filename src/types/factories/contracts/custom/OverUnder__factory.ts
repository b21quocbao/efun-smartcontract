/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OverUnder,
  OverUnderInterface,
} from "../../../contracts/custom/OverUnder";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610dc6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063812acab111610050578063812acab1146100a557806383688316146100c857806394558f0a146100db57600080fd5b8063061bf2dc1461006c5780634f4d2e1e14610092575b600080fd5b61007f61007a3660046109ad565b6100ee565b6040519081526020015b60405180910390f35b61007f6100a0366004610908565b61024b565b6100b86100b3366004610af5565b6103f2565b6040519015158152602001610089565b61007f6100d6366004610a6c565b610565565b61007f6100e9366004610af5565b6106dc565b604051632e34059960e01b8152600481018b905260009081906001600160a01b038e1690632e3405999060240160006040518083038186803b15801561013357600080fd5b505afa158015610147573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261016f9190810190610b87565b90506000610182600260208b0135610d4b565b15801561019757508160600151896020013510155b905060006101aa600260208c0135610d4b565b60011480156101c1575082606001518a6020013511155b905084156102225781806101d25750805b6102225760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b8761022e8a8c35610cfa565b6102389190610ce6565b9f9e505050505050505050505050505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561029057600080fd5b505afa1580156102a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102cc9190810190610b87565b905082915060005b878110156103e35760006102e9600283610d4b565b1580156102fa575082606001518210155b90506000610309600284610d4b565b600114801561031c575083606001518311155b90508a8a8481811061033e57634e487b7160e01b600052603260045260246000fd5b90506020020135856103509190610cce565b9450818061035b5750805b156103d0578689898581811061038157634e487b7160e01b600052603260045260246000fd5b905060200201358c8c868181106103a857634e487b7160e01b600052603260045260246000fd5b905060200201356103b99190610cfa565b6103c39190610ce6565b6103cd9086610d19565b94505b5050806103dc90610d30565b90506102d4565b50509998505050505050505050565b600080610400600284610d4b565b61046d578888610411856001610cce565b81811061042e57634e487b7160e01b600052603260045260246000fd5b9050602002013589898581811061045557634e487b7160e01b600052603260045260246000fd5b905060200201356104669190610cce565b90506104d2565b888861047a600186610d19565b81811061049757634e487b7160e01b600052603260045260246000fd5b905060200201358989858181106104be57634e487b7160e01b600052603260045260246000fd5b905060200201356104cf9190610cce565b90505b6000886104e0876002610cfa565b6104ea9190610ce6565b9050600085826104fa8b86610cce565b6105049190610cce565b61050e9190610cfa565b90506000888a8d8d8981811061053457634e487b7160e01b600052603260045260246000fd5b905060200201356105459190610cce565b61054f9190610cfa565b909110159e9d5050505050505050505050505050565b600080610573600284610d4b565b6105e0578787610584856001610cce565b8181106105a157634e487b7160e01b600052603260045260246000fd5b905060200201358888858181106105c857634e487b7160e01b600052603260045260246000fd5b905060200201356105d99190610cce565b9050610645565b87876105ed600186610d19565b81811061060a57634e487b7160e01b600052603260045260246000fd5b9050602002013588888581811061063157634e487b7160e01b600052603260045260246000fd5b905060200201356106429190610cce565b90505b600087610653876002610cfa565b61065d9190610ce6565b905060008561066c8385610cce565b6106769190610cfa565b90506000888b8b8881811061069b57634e487b7160e01b600052603260045260246000fd5b905060200201356106ac9190610cfa565b905060006106ba888b610d19565b905087816106c88486610d19565b6106d29190610ce6565b6102389190610cfa565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561072157600080fd5b505afa158015610735573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261075d9190810190610b87565b90508461076a8789610cfa565b6107749190610ce6565b9c9b505050505050505050505050565b805161078f81610da1565b919050565b60008083601f8401126107a5578182fd5b50813567ffffffffffffffff8111156107bc578182fd5b6020830191508360208260051b85010111156107d757600080fd5b9250929050565b600082601f8301126107ee578081fd5b8151602067ffffffffffffffff82111561080a5761080a610d8b565b8160051b610819828201610c9d565b838152828101908684018388018501891015610833578687fd5b8693505b85841015610855578051835260019390930192918401918401610837565b50979650505050505050565b8035801515811461078f57600080fd5b80516002811061078f57600080fd5b600082601f830112610890578081fd5b815167ffffffffffffffff8111156108aa576108aa610d8b565b60206108be601f8301601f19168201610c9d565b82815285828487010111156108d1578384fd5b835b838110156108ee5785810183015182820184015282016108d3565b838111156108fe57848385840101525b5095945050505050565b600080600080600080600080600060e08a8c031215610925578485fd5b893561093081610da1565b985060208a0135975060408a0135965060608a013567ffffffffffffffff8082111561095a578687fd5b6109668d838e01610794565b909850965060808c013591508082111561097e578586fd5b5061098b8c828d01610794565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b60008060008060008060008060008060006101808c8e0312156109ce578182fd5b6109d88c35610da1565b8b359a5060208c0135995060408c0135985060608c013567ffffffffffffffff811115610a03578283fd5b610a0f8e828f01610794565b90995097505060608c8e03607f19011215610a28578182fd5b60808c01955060e08c013594506101008c013593506101208c013592506101408c01359150610a5a6101608d01610861565b90509295989b509295989b9093969950565b60008060008060008060008060006101008a8c031215610a8a578485fd5b8935610a9581610da1565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610abe578586fd5b610aca8c828d01610794565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610b14578384fd5b8a35610b1f81610da1565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610b48578485fd5b610b548d828e01610794565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610b98578081fd5b815167ffffffffffffffff80821115610baf578283fd5b908301906101208286031215610bc3578283fd5b610bcb610c73565b82518152602083015160208201526040830151604082015260608301516060820152610bf960808401610871565b6080820152610c0a60a08401610784565b60a0820152610c1b60c08401610784565b60c082015260e083015182811115610c31578485fd5b610c3d878286016107de565b60e0830152506101008084015183811115610c56578586fd5b610c6288828701610880565b918301919091525095945050505050565b604051610120810167ffffffffffffffff81118282101715610c9757610c97610d8b565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cc657610cc6610d8b565b604052919050565b60008219821115610ce157610ce1610d5f565b500190565b600082610cf557610cf5610d75565b500490565b6000816000190483118215151615610d1457610d14610d5f565b500290565b600082821015610d2b57610d2b610d5f565b500390565b6000600019821415610d4457610d44610d5f565b5060010190565b600082610d5a57610d5a610d75565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610db657600080fd5b5056fea164736f6c6343000804000a";

type OverUnderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OverUnderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OverUnder__factory extends ContractFactory {
  constructor(...args: OverUnderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OverUnder> {
    return super.deploy(overrides || {}) as Promise<OverUnder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OverUnder {
    return super.attach(address) as OverUnder;
  }
  override connect(signer: Signer): OverUnder__factory {
    return super.connect(signer) as OverUnder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OverUnderInterface {
    return new utils.Interface(_abi) as OverUnderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OverUnder {
    return new Contract(address, _abi, signerOrProvider) as OverUnder;
  }
}
