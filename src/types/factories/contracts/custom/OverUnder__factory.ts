/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OverUnder,
  OverUnderInterface,
} from "../../../contracts/custom/OverUnder";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "getAmountHasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "hostFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platFormfeeBefore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f01806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806383688316116100765780639f5c36f01161005b5780639f5c36f014610121578063ccb32ac514610133578063dcbfcc971461014957600080fd5b806383688316146100fb57806394558f0a1461010e57600080fd5b806326232a2e146100a85780632fb88c4e146100be5780634f4d2e1e146100c5578063812acab1146100d8575b600080fd5b60005b6040519081526020015b60405180910390f35b60326100ab565b6100ab6100d33660046109cd565b61015c565b6100eb6100e6366004610ba7565b610303565b60405190151581526020016100b5565b6100ab610109366004610b1e565b610476565b6100ab61011c366004610ba7565b610600565b6100ab61012f366004610d7f565b5090565b6100ab6101413660046109a2565b600092915050565b6100ab610157366004610a72565b6106a8565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b1580156101a157600080fd5b505afa1580156101b5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101dd9190810190610c39565b905082915060005b878110156102f45760006101fa600283610e78565b15801561020b575082606001518210155b9050600061021a600284610e78565b600114801561022d575083606001518311155b90508a8a8481811061024f57634e487b7160e01b600052603260045260246000fd5b90506020020135856102619190610dfb565b9450818061026c5750805b156102e1578689898581811061029257634e487b7160e01b600052603260045260246000fd5b905060200201358c8c868181106102b957634e487b7160e01b600052603260045260246000fd5b905060200201356102ca9190610e27565b6102d49190610e13565b6102de9086610e46565b94505b5050806102ed90610e5d565b90506101e5565b50509998505050505050505050565b600080610311600284610e78565b61037e578888610322856001610dfb565b81811061033f57634e487b7160e01b600052603260045260246000fd5b9050602002013589898581811061036657634e487b7160e01b600052603260045260246000fd5b905060200201356103779190610dfb565b90506103e3565b888861038b600186610e46565b8181106103a857634e487b7160e01b600052603260045260246000fd5b905060200201358989858181106103cf57634e487b7160e01b600052603260045260246000fd5b905060200201356103e09190610dfb565b90505b6000886103f1876002610e27565b6103fb9190610e13565b90506000858261040b8b86610dfb565b6104159190610dfb565b61041f9190610e27565b90506000888a8d8d8981811061044557634e487b7160e01b600052603260045260246000fd5b905060200201356104569190610dfb565b6104609190610e27565b909110159e9d5050505050505050505050505050565b600080610484600284610e78565b6104f1578787610495856001610dfb565b8181106104b257634e487b7160e01b600052603260045260246000fd5b905060200201358888858181106104d957634e487b7160e01b600052603260045260246000fd5b905060200201356104ea9190610dfb565b9050610556565b87876104fe600186610e46565b81811061051b57634e487b7160e01b600052603260045260246000fd5b9050602002013588888581811061054257634e487b7160e01b600052603260045260246000fd5b905060200201356105539190610dfb565b90505b600087610564876002610e27565b61056e9190610e13565b9050600061057c8284610dfb565b9050600086898c8c898181106105a257634e487b7160e01b600052603260045260246000fd5b905060200201356105b39190610e27565b6105bd9190610e13565b905060006105cb888b610e46565b905080886105d98486610e46565b6105e39190610e27565b6105ed9190610e13565b9f9e505050505050505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561064557600080fd5b505afa158015610659573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106819190810190610c39565b90508461068e8789610e27565b6106989190610e13565b9c9b505050505050505050505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b1580156106ed57600080fd5b505afa158015610701573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107299190810190610c39565b905060008660200135905060008260e00151828151811061075a57634e487b7160e01b600052603260045260246000fd5b602002602001015190506000600289602001356107779190610e78565b15801561078c57508360600151896020013510155b9050600061079f600260208c0135610e78565b60011480156107b6575084606001518a6020013511155b905086156108175781806107c75750805b6108175760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b886105e3848c35610e27565b805161082e81610ece565b919050565b60008083601f840112610844578182fd5b50813567ffffffffffffffff81111561085b578182fd5b6020830191508360208260051b850101111561087657600080fd5b9250929050565b600082601f83011261088d578081fd5b8151602067ffffffffffffffff8211156108a9576108a9610eb8565b8160051b6108b8828201610dca565b8381528281019086840183880185018910156108d2578687fd5b8693505b858410156108f45780518352600193909301929184019184016108d6565b50979650505050505050565b805161082e81610ee6565b80516003811061082e57600080fd5b600082601f83011261092a578081fd5b815167ffffffffffffffff81111561094457610944610eb8565b6020610958601f8301601f19168201610dca565b828152858284870101111561096b578384fd5b835b8381101561098857858101830151828201840152820161096d565b8381111561099857848385840101525b5095945050505050565b600080604083850312156109b4578182fd5b82356109bf81610ece565b946020939093013593505050565b600080600080600080600080600060e08a8c0312156109ea578485fd5b89356109f581610ece565b985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115610a1f578687fd5b610a2b8d838e01610833565b909850965060808c0135915080821115610a43578586fd5b50610a508c828d01610833565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b6000806000806000806000806000898b03610140811215610a91578586fd5b8a35610a9c81610ece565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610ac5578687fd5b610ad18d828e01610833565b9098509650506060607f1982011215610ae8578485fd5b5060808a01935060e08a013592506101008a013591506101208a0135610b0d81610ee6565b809150509295985092959850929598565b60008060008060008060008060006101008a8c031215610b3c578485fd5b8935610b4781610ece565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610b70578586fd5b610b7c8c828d01610833565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610bc6578384fd5b8a35610bd181610ece565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610bfa578485fd5b610c068d828e01610833565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610c4a578081fd5b815167ffffffffffffffff80821115610c61578283fd5b908301906101e08286031215610c75578283fd5b610c7d610da0565b82518152602083015160208201526040830151604082015260608301516060820152610cab6080840161090b565b6080820152610cbc60a08401610823565b60a0820152610ccd60c08401610823565b60c082015260e083015182811115610ce3578485fd5b610cef8782860161087d565b60e0830152506101008084015183811115610d08578586fd5b610d148882870161091a565b828401525050610120915081830151828201526101409150610d37828401610900565b91810191909152610160828101519082015261018080830151908201526101a090610d63828401610900565b918101919091526101c091820151918101919091529392505050565b60008060408385031215610d91578182fd5b50508035926020909101359150565b6040516101e0810167ffffffffffffffff81118282101715610dc457610dc4610eb8565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610df357610df3610eb8565b604052919050565b60008219821115610e0e57610e0e610e8c565b500190565b600082610e2257610e22610ea2565b500490565b6000816000190483118215151615610e4157610e41610e8c565b500290565b600082821015610e5857610e58610e8c565b500390565b6000600019821415610e7157610e71610e8c565b5060010190565b600082610e8757610e87610ea2565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ee357600080fd5b50565b8015158114610ee357600080fdfea164736f6c6343000804000a";

type OverUnderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OverUnderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OverUnder__factory extends ContractFactory {
  constructor(...args: OverUnderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OverUnder> {
    return super.deploy(overrides || {}) as Promise<OverUnder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OverUnder {
    return super.attach(address) as OverUnder;
  }
  override connect(signer: Signer): OverUnder__factory {
    return super.connect(signer) as OverUnder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OverUnderInterface {
    return new utils.Interface(_abi) as OverUnderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OverUnder {
    return new Contract(address, _abi, signerOrProvider) as OverUnder;
  }
}
