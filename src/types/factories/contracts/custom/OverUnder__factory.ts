/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OverUnder,
  OverUnderInterface,
} from "../../../contracts/custom/OverUnder";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "getAmountHasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "hostFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platFormfeeBefore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f74806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063936c479d116100765780639f5c36f01161005b5780639f5c36f014610121578063ccb32ac514610133578063dcbfcc971461014957600080fd5b8063936c479d146100eb57806394558f0a1461010e57600080fd5b806326232a2e146100a85780632fb88c4e146100be5780634f4d2e1e146100c557806383688316146100d8575b600080fd5b60005b6040519081526020015b60405180910390f35b60326100ab565b6100ab6100d33660046109cb565b61015c565b6100ab6100e6366004610b1c565b610303565b6100fe6100f9366004610d7d565b61048d565b60405190151581526020016100b5565b6100ab61011c366004610ba5565b6105fe565b6100ab61012f366004610df2565b5090565b6100ab6101413660046109a0565b600092915050565b6100ab610157366004610a70565b6106a6565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b1580156101a157600080fd5b505afa1580156101b5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101dd9190810190610c37565b905082915060005b878110156102f45760006101fa600283610eeb565b15801561020b575082606001518210155b9050600061021a600284610eeb565b600114801561022d575083606001518311155b90508a8a8481811061024f57634e487b7160e01b600052603260045260246000fd5b90506020020135856102619190610e6e565b9450818061026c5750805b156102e1578689898581811061029257634e487b7160e01b600052603260045260246000fd5b905060200201358c8c868181106102b957634e487b7160e01b600052603260045260246000fd5b905060200201356102ca9190610e9a565b6102d49190610e86565b6102de9086610eb9565b94505b5050806102ed90610ed0565b90506101e5565b50509998505050505050505050565b600080610311600284610eeb565b61037e578787610322856001610e6e565b81811061033f57634e487b7160e01b600052603260045260246000fd5b9050602002013588888581811061036657634e487b7160e01b600052603260045260246000fd5b905060200201356103779190610e6e565b90506103e3565b878761038b600186610eb9565b8181106103a857634e487b7160e01b600052603260045260246000fd5b905060200201358888858181106103cf57634e487b7160e01b600052603260045260246000fd5b905060200201356103e09190610e6e565b90505b6000876103f1876002610e9a565b6103fb9190610e86565b905060006104098284610e6e565b9050600086898c8c8981811061042f57634e487b7160e01b600052603260045260246000fd5b905060200201356104409190610e9a565b61044a9190610e86565b90506000610458888b610eb9565b905080886104668486610eb9565b6104709190610e9a565b61047a9190610e86565b9f9e505050505050505050505050505050565b60008061049b600284610eeb565b6105085788886104ac856001610e6e565b8181106104c957634e487b7160e01b600052603260045260246000fd5b905060200201358989858181106104f057634e487b7160e01b600052603260045260246000fd5b905060200201356105019190610e6e565b905061056d565b8888610515600186610eb9565b81811061053257634e487b7160e01b600052603260045260246000fd5b9050602002013589898581811061055957634e487b7160e01b600052603260045260246000fd5b9050602002013561056a9190610e6e565b90505b60008861057b876002610e9a565b6105859190610e86565b9050600085826105958b86610e6e565b61059f9190610e6e565b6105a99190610e9a565b90506000888a8d8d898181106105cf57634e487b7160e01b600052603260045260246000fd5b905060200201356105e09190610e6e565b6105ea9190610e9a565b909110159c9b505050505050505050505050565b604051632e34059960e01b8152600481018a905260009081906001600160a01b038d1690632e3405999060240160006040518083038186803b15801561064357600080fd5b505afa158015610657573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261067f9190810190610c37565b90508461068c8789610e9a565b6106969190610e86565b9c9b505050505050505050505050565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b1580156106eb57600080fd5b505afa1580156106ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107279190810190610c37565b905060008660200135905060008260e00151828151811061075857634e487b7160e01b600052603260045260246000fd5b602002602001015190506000600289602001356107759190610eeb565b15801561078a57508360600151896020013510155b9050600061079d600260208c0135610eeb565b60011480156107b4575084606001518a6020013511155b905086156108155781806107c55750805b6108155760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b88610470848c35610e9a565b805161082c81610f41565b919050565b60008083601f840112610842578182fd5b50813567ffffffffffffffff811115610859578182fd5b6020830191508360208260051b850101111561087457600080fd5b9250929050565b600082601f83011261088b578081fd5b8151602067ffffffffffffffff8211156108a7576108a7610f2b565b8160051b6108b6828201610e3d565b8381528281019086840183880185018910156108d0578687fd5b8693505b858410156108f25780518352600193909301929184019184016108d4565b50979650505050505050565b805161082c81610f59565b80516003811061082c57600080fd5b600082601f830112610928578081fd5b815167ffffffffffffffff81111561094257610942610f2b565b6020610956601f8301601f19168201610e3d565b8281528582848701011115610969578384fd5b835b8381101561098657858101830151828201840152820161096b565b8381111561099657848385840101525b5095945050505050565b600080604083850312156109b2578182fd5b82356109bd81610f41565b946020939093013593505050565b600080600080600080600080600060e08a8c0312156109e8578485fd5b89356109f381610f41565b985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115610a1d578687fd5b610a298d838e01610831565b909850965060808c0135915080821115610a41578586fd5b50610a4e8c828d01610831565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b6000806000806000806000806000898b03610140811215610a8f578586fd5b8a35610a9a81610f41565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610ac3578687fd5b610acf8d828e01610831565b9098509650506060607f1982011215610ae6578485fd5b5060808a01935060e08a013592506101008a013591506101208a0135610b0b81610f59565b809150509295985092959850929598565b60008060008060008060008060006101008a8c031215610b3a578485fd5b8935610b4581610f41565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610b6e578586fd5b610b7a8c828d01610831565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610bc4578384fd5b8a35610bcf81610f41565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610bf8578485fd5b610c048d828e01610831565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610c48578081fd5b815167ffffffffffffffff80821115610c5f578283fd5b908301906101e08286031215610c73578283fd5b610c7b610e13565b82518152602083015160208201526040830151604082015260608301516060820152610ca960808401610909565b6080820152610cba60a08401610821565b60a0820152610ccb60c08401610821565b60c082015260e083015182811115610ce1578485fd5b610ced8782860161087b565b60e0830152506101008084015183811115610d06578586fd5b610d1288828701610918565b828401525050610120915081830151828201526101409150610d358284016108fe565b91810191909152610160828101519082015261018080830151908201526101a090610d618284016108fe565b918101919091526101c091820151918101919091529392505050565b60008060008060008060008060e0898b031215610d98578182fd5b88359750602089013567ffffffffffffffff811115610db5578283fd5b610dc18b828c01610831565b999c909b509899604081013599606082013599506080820135985060a0820135975060c09091013595509350505050565b60008060408385031215610e04578182fd5b50508035926020909101359150565b6040516101e0810167ffffffffffffffff81118282101715610e3757610e37610f2b565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e6657610e66610f2b565b604052919050565b60008219821115610e8157610e81610eff565b500190565b600082610e9557610e95610f15565b500490565b6000816000190483118215151615610eb457610eb4610eff565b500290565b600082821015610ecb57610ecb610eff565b500390565b6000600019821415610ee457610ee4610eff565b5060010190565b600082610efa57610efa610f15565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f5657600080fd5b50565b8015158114610f5657600080fdfea164736f6c6343000804000a";

type OverUnderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OverUnderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OverUnder__factory extends ContractFactory {
  constructor(...args: OverUnderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OverUnder> {
    return super.deploy(overrides || {}) as Promise<OverUnder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OverUnder {
    return super.attach(address) as OverUnder;
  }
  override connect(signer: Signer): OverUnder__factory {
    return super.connect(signer) as OverUnder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OverUnderInterface {
    return new utils.Interface(_abi) as OverUnderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OverUnder {
    return new Contract(address, _abi, signerOrProvider) as OverUnder;
  }
}
