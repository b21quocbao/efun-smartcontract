/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HandicapGroupPredict,
  HandicapGroupPredictInterface,
} from "../../../contracts/custom/HandicapGroupPredict";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculatePotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_odds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRemainLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_remainLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_validate",
        type: "bool",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predictOptions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateRewardSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictionAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
    ],
    name: "calculateSponsor",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_predictOptionStats",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_predictValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidityPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "validatePrediction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f2e806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063836883161161005b57806383688316146100e95780638d1d6ea6146100fc57806394558f0a1461010f578063dcbfcc971461012257600080fd5b80634f4d2e1e1461008257806358dcf240146100a8578063812acab1146100bb575b600080fd5b6100956100903660046109f3565b610135565b6040519081526020015b60405180910390f35b6100956100b6366004610a98565b610291565b6100d96100c9366004610c52565b60019a9950505050505050505050565b604051901515815260200161009f565b6100956100f7366004610bc9565b61039c565b61009561010a366004610c52565b6103ac565b61009561011d366004610c52565b610403565b610095610130366004610b26565b610457565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561017a57600080fd5b505afa15801561018e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101b69190810190610ce4565b905060008160600151600014806101d1575081606001516001145b80156102045750888860008181106101f957634e487b7160e01b600052603260045260246000fd5b905060200201356000145b9050600082606001516004148061021f575082606001516003145b801561025257508989600481811061024757634e487b7160e01b600052603260045260246000fd5b905060200201356000145b606084015190915060021482806102665750815b8061026e5750805b1561027b57859450610280565b600094505b505050509998505050505050505050565b604051632e34059960e01b81526004810188905260009081906001600160a01b038b1690632e3405999060240160006040518083038186803b1580156102d657600080fd5b505afa1580156102ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103129190810190610ce4565b905060008560200135905060008260e00151828151811061034357634e487b7160e01b600052603260045260246000fd5b6020026020010151905088888381811061036d57634e487b7160e01b600052603260045260246000fd5b60200291909101359050610382883587610eb0565b61038c9190610e90565b9c9b505050505050505050505050565b60005b9998505050505050505050565b6000858888858181106103cf57634e487b7160e01b600052603260045260246000fd5b905060200201356103e09190610e78565b6103ea8784610eb0565b6103f49190610e90565b9b9a5050505050505050505050565b60008588888581811061042657634e487b7160e01b600052603260045260246000fd5b905060200201356104379190610e78565b8680610443858d610e78565b61044d9190610e78565b6103ea9190610eb0565b604051632e34059960e01b81526004810189905260009081906001600160a01b038c1690632e3405999060240160006040518083038186803b15801561049c57600080fd5b505afa1580156104b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104d89190810190610ce4565b905060008660200135905060008260e00151828151811061050957634e487b7160e01b600052603260045260246000fd5b6020026020010151905082606001516004148061052a575082606001516003145b1561056c578989600481811061055057634e487b7160e01b600052603260045260246000fd5b905060200201356000141561056c5750508535915061039f9050565b60608301511580610581575082606001516001145b156105c357898960008181106105a757634e487b7160e01b600052603260045260246000fd5b90506020020135600014156105c35750508535915061039f9050565b841561064a57811580156105dc57508260600151600414155b806105f557508160041480156105f55750606083015115155b6106455760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b61069e565b89898381811061066a57634e487b7160e01b600052603260045260246000fd5b602002919091013590508835610680888e610e78565b61068a9190610eb0565b6106949190610e90565b935050505061039f565b811580156106ae57506060830151155b806106c857508160041480156106c8575082606001516004145b1561071a578989838181106106ed57634e487b7160e01b600052603260045260246000fd5b602002919091013590508835610703888e610e78565b61070d9190610eb0565b6107179190610e90565b93505b8115801561072c575082606001516001145b806107465750816004148015610746575082606001516003145b156107d75789898381811061076b57634e487b7160e01b600052603260045260246000fd5b9050602002013588600001358760028e8e8e8881811061079b57634e487b7160e01b600052603260045260246000fd5b905060200201356107ac9190610e78565b6107b69190610e90565b6107c09190610e78565b6107ca9190610eb0565b6107d49190610e90565b93505b811580156107e9575082606001516002145b806108035750816004148015610803575082606001516002145b1561080d57873593505b8115801561081f575082606001516003145b806108395750816004148015610839575082606001516001145b1561084d5761084a60028935610e90565b93505b5050509998505050505050505050565b805161086881610efb565b919050565b60008083601f84011261087e578182fd5b50813567ffffffffffffffff811115610895578182fd5b6020830191508360208260051b85010111156108b057600080fd5b9250929050565b600082601f8301126108c7578081fd5b8151602067ffffffffffffffff8211156108e3576108e3610ee5565b8160051b6108f2828201610e47565b83815282810190868401838801850189101561090c578687fd5b8693505b8584101561092e578051835260019390930192918401918401610910565b50979650505050505050565b805161086881610f13565b80516002811061086857600080fd5b600082601f830112610964578081fd5b815167ffffffffffffffff81111561097e5761097e610ee5565b6020610992601f8301601f19168201610e47565b82815285828487010111156109a5578384fd5b835b838110156109c25785810183015182820184015282016109a7565b838111156109d257848385840101525b5095945050505050565b6000606082840312156109ed578081fd5b50919050565b600080600080600080600080600060e08a8c031215610a10578485fd5b8935610a1b81610efb565b985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115610a45578687fd5b610a518d838e0161086d565b909850965060808c0135915080821115610a69578586fd5b50610a768c828d0161086d565b9a9d999c50979a96999598959660a08101359660c09091013595509350505050565b600080600080600080600080610120898b031215610ab4578384fd5b8835610abf81610efb565b97506020890135965060408901359550606089013567ffffffffffffffff811115610ae8578485fd5b610af48b828c0161086d565b9096509450610b0890508a60808b016109dc565b925060e0890135915061010089013590509295985092959890939650565b60008060008060008060008060006101408a8c031215610b44578485fd5b8935610b4f81610efb565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610b78578586fd5b610b848c828d0161086d565b9097509550610b9890508b60808c016109dc565b935060e08a013592506101008a013591506101208a0135610bb881610f13565b809150509295985092959850929598565b60008060008060008060008060006101008a8c031215610be7578283fd5b8935610bf281610efb565b985060208a0135975060408a0135965060608a013567ffffffffffffffff811115610c1b578384fd5b610c278c828d0161086d565b9a9d999c50979a97999860808901359860a0810135985060c0810135975060e0013595509350505050565b6000806000806000806000806000806101208b8d031215610c71578384fd5b8a35610c7c81610efb565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115610ca5578485fd5b610cb18d828e0161086d565b9b9e9a9d50989b989a9960808a01359960a0810135995060c0810135985060e08101359750610100013595509350505050565b600060208284031215610cf5578081fd5b815167ffffffffffffffff80821115610d0c578283fd5b908301906101c08286031215610d20578283fd5b610d28610e1d565b82518152602083015160208201526040830151604082015260608301516060820152610d5660808401610945565b6080820152610d6760a0840161085d565b60a0820152610d7860c0840161085d565b60c082015260e083015182811115610d8e578485fd5b610d9a878286016108b7565b60e0830152506101008084015183811115610db3578586fd5b610dbf88828701610954565b828401525050610120915081830151828201526101409150610de282840161093a565b91810191909152610160828101519082015261018080830151908201526101a090610e0e82840161093a565b91810191909152949350505050565b6040516101c0810167ffffffffffffffff81118282101715610e4157610e41610ee5565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e7057610e70610ee5565b604052919050565b60008219821115610e8b57610e8b610ecf565b500190565b600082610eab57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610eca57610eca610ecf565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f1057600080fd5b50565b8015158114610f1057600080fdfea164736f6c6343000804000a";

type HandicapGroupPredictConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HandicapGroupPredictConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HandicapGroupPredict__factory extends ContractFactory {
  constructor(...args: HandicapGroupPredictConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HandicapGroupPredict> {
    return super.deploy(overrides || {}) as Promise<HandicapGroupPredict>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HandicapGroupPredict {
    return super.attach(address) as HandicapGroupPredict;
  }
  override connect(signer: Signer): HandicapGroupPredict__factory {
    return super.connect(signer) as HandicapGroupPredict__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HandicapGroupPredictInterface {
    return new utils.Interface(_abi) as HandicapGroupPredictInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HandicapGroupPredict {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HandicapGroupPredict;
  }
}
