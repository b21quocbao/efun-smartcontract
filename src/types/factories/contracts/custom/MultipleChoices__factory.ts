/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultipleChoices,
  MultipleChoicesInterface,
} from "../../../contracts/custom/MultipleChoices";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_eventDataAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictStats",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_predictOptionStats",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "predictionAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numPredict",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "predictOptions",
            type: "string",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct EDataTypes.Prediction",
        name: "_predictions",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_odd",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sponsorReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610714806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063da5a234114610030575b600080fd5b61004361003e36600461039f565b61005c565b6040805192835260208301919091520160405180910390f35b60008060008873ffffffffffffffffffffffffffffffffffffffff16632e340599896040518263ffffffff1660e01b815260040161009c91815260200190565b60006040518083038186803b1580156100b457600080fd5b505afa1580156100c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526100f09190810190610418565b6080810151909150610143816101096040890189610586565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506101ce92505050565b6101935760405162461bcd60e51b815260206004820152600960248201527f6e6f2d7265776172640000000000000000000000000000000000000000000000604482015260640160405180910390fd5b61019d8589610671565b93508686600001358361012001516101b59190610671565b6101bf9190610651565b92505050965096945050505050565b6000816040516020016101e1919061056a565b6040516020818303038152906040528051906020012083604051602001610208919061056a565b6040516020818303038152906040528051906020012014905092915050565b8051610232816106e2565b919050565b600082601f830112610247578081fd5b8151602061025c6102578361062d565b6105fc565b80838252828201915082860187848660051b890101111561027b578586fd5b855b858110156102bc57815167ffffffffffffffff81111561029b578788fd5b6102a98a87838c0101610335565b855250928401929084019060010161027d565b5090979650505050505050565b600082601f8301126102d9578081fd5b815160206102e96102578361062d565b80838252828201915082860187848660051b8901011115610308578586fd5b855b858110156102bc5781518452928401929084019060010161030a565b80516002811061023257600080fd5b600082601f830112610345578081fd5b815167ffffffffffffffff81111561035f5761035f6106cc565b610372601f8201601f19166020016105fc565b818152846020838601011115610386578283fd5b61039782602083016020870161069c565b949350505050565b60008060008060008060c087890312156103b7578182fd5b86356103c2816106e2565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff8111156103f2578283fd5b87016080818a031215610403578283fd5b8092505060a087013590509295509295509295565b600060208284031215610429578081fd5b815167ffffffffffffffff80821115610440578283fd5b908301906101a08286031215610454578283fd5b61045c6105d2565b8251815260208301516020820152604083015160408201526060830151606082015260808301518281111561048f578485fd5b61049b87828601610335565b6080830152506104ad60a08401610326565b60a08201526104be60c08401610227565b60c082015260e0830151828111156104d4578485fd5b6104e087828601610335565b60e0830152506101006104f4818501610227565b908201526101208381015190820152610140610511818501610227565b908201526101608381015183811115610528578586fd5b61053488828701610237565b828401525050610180808401518381111561054d578586fd5b610559888287016102c9565b918301919091525095945050505050565b6000825161057c81846020870161069c565b9190910192915050565b6000808335601e1984360301811261059c578283fd5b83018035915067ffffffffffffffff8211156105b6578283fd5b6020019150368190038213156105cb57600080fd5b9250929050565b6040516101a0810167ffffffffffffffff811182821017156105f6576105f66106cc565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610625576106256106cc565b604052919050565b600067ffffffffffffffff821115610647576106476106cc565b5060051b60200190565b60008261066c57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561069757634e487b7160e01b81526011600452602481fd5b500290565b60005b838110156106b757818101518382015260200161069f565b838111156106c6576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461070457600080fd5b5056fea164736f6c6343000804000a";

type MultipleChoicesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultipleChoicesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultipleChoices__factory extends ContractFactory {
  constructor(...args: MultipleChoicesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultipleChoices> {
    return super.deploy(overrides || {}) as Promise<MultipleChoices>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MultipleChoices {
    return super.attach(address) as MultipleChoices;
  }
  override connect(signer: Signer): MultipleChoices__factory {
    return super.connect(signer) as MultipleChoices__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultipleChoicesInterface {
    return new utils.Interface(_abi) as MultipleChoicesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultipleChoices {
    return new Contract(address, _abi, signerOrProvider) as MultipleChoices;
  }
}
