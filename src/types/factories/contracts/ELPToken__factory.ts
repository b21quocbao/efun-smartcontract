/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ELPToken, ELPTokenInterface } from "../../contracts/ELPToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nav",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isBuy",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TokenAction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_class",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_elpAmt",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "classes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentNav",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "efunToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "elpAmtOfClass",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "elpAmtOfNft",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721Token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_poolAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_efunToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_feeCollector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_elpAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_oneHundredPrecent",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_erc721Token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSellAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSellAmountPerAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oneHundredPrecent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "poolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sellFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "sellNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_elpAmt",
        type: "uint256",
      },
    ],
    name: "sellToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_elpAmtOfClass",
        type: "uint256[]",
      },
    ],
    name: "setElpAmtOfClass",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc721Token",
        type: "address",
      },
    ],
    name: "setErc721Token",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sellFee",
        type: "uint256",
      },
    ],
    name: "setSellFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalSellAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506125b2806100206000396000f3fe608060405234801561001057600080fd5b50600436106102c85760003560e01c806361bc221a1161017b578063a42dce80116100d8578063c415b95c1161008c578063dd62ed3e11610071578063dd62ed3e146105b4578063e9f468a7146105ed578063f2fde38b146105f657600080fd5b8063c415b95c14610599578063c5c25216146105ac57600080fd5b8063a9059cbb116100bd578063a9059cbb14610560578063addf001e14610573578063b6fba3af1461058657600080fd5b8063a42dce801461053a578063a457c2d71461054d57600080fd5b8063817dbe9f1161012f5780638da5cb5b116101145780638da5cb5b1461050e57806395d89b411461051f578063992da9631461052757600080fd5b8063817dbe9f146104db5780638b4cee08146104fb57600080fd5b80636e04ff0d116101605780636e04ff0d1461048957806370a08231146104aa578063715018a6146104d357600080fd5b806361bc221a1461047757806366d602ae1461048057600080fd5b80632b14ca56116102295780633f3b3b27116101dd5780634585e33b116101c25780634585e33b1461043e57806351ed8288146104515780635f2d6bcd1461046457600080fd5b80633f3b3b27146104225780634081eead1461042b57600080fd5b8063313ce5671161020e578063313ce567146103ed57806338c1a0e3146103fc578063395093511461040f57600080fd5b80632b14ca56146103d15780632d296bf1146103da57600080fd5b806318160ddd1161028057806323b872dd1161026557806323b872dd14610398578063280dac67146103ab5780632b025e2a146103be57600080fd5b806318160ddd1461037b5780632397e4d71461038357600080fd5b80630cd927a1116102b15780630cd927a11461030e578063120b088b146103475780631755ff211461035057600080fd5b806306fdde03146102cd578063095ea7b3146102eb575b600080fd5b6102d5610609565b6040516102e29190612430565b60405180910390f35b6102fe6102f936600461214d565b61069b565b60405190151581526020016102e2565b61033961031c3660046123a9565b60ac60209081526000928352604080842090915290825290205481565b6040519081526020016102e2565b61033960a85481565b60a654610363906001600160a01b031681565b6040516001600160a01b0390911681526020016102e2565b603554610339565b610396610391366004612379565b6106b3565b005b6102fe6103a636600461210d565b6106c1565b6103966103b9366004612178565b6106e7565b6103966103cc3660046122ad565b61075d565b61033960ad5481565b6103966103e8366004612379565b6108d3565b604051601281526020016102e2565b60af54610363906001600160a01b031681565b6102fe61041d36600461214d565b6108de565b61033960ab5481565b6103966104393660046120b9565b61091d565b61039661044c366004612240565b610999565b61033961045f366004612379565b6109f5565b60ae54610363906001600160a01b031681565b61033960aa5481565b61033960a75481565b61049c610497366004612240565b610abf565b6040516102e2929190612415565b6103396104b83660046120b9565b6001600160a01b031660009081526033602052604090205490565b610396610ae0565b6103396104e9366004612379565b60b06020526000908152604090205481565b610396610509366004612379565b610b46565b6065546001600160a01b0316610363565b6102d5610ba5565b610396610535366004612379565b610bb4565b6103966105483660046120b9565b610c61565b6102fe61055b36600461214d565b610cdd565b6102fe61056e36600461214d565b610d92565b610339610581366004612379565b610da0565b60a554610363906001600160a01b031681565b60a954610363906001600160a01b031681565b610339610dc1565b6103396105c23660046120d5565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61033960b25481565b6103966106043660046120b9565b610e61565b6060603680546106189061250e565b80601f01602080910402602001604051908101604052809291908181526020018280546106449061250e565b80156106915780601f1061066657610100808354040283529160200191610691565b820191906000526020600020905b81548152906001019060200180831161067457829003601f168201915b5050505050905090565b6000336106a9818585610f40565b5060019392505050565b6106be816000611065565b50565b6000336106cf85828561127e565b6106da85858561130a565b60019150505b9392505050565b6065546001600160a01b031633146107465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b80516107599060b1906020840190611f27565b5050565b60006107696001611507565b90508015610781576000805461ff0019166101001790555b610789611622565b6107938a8a611695565b61079b61170a565b60a680546001600160a01b03808b166001600160a01b03199283161790925560a580548a841690831617905560a980549288169290911691909117905560b283905560646107ea8460026124ac565b6107f4919061248c565b60ad5560ae80546001600160a01b0319166001600160a01b0384161790556040805160a08101825268056bc75e2d631000008152681b1ae4d6e2ef5000006020820152683635c9adc5dea000009181019190915269010f0cf064dd59200000606082015269021e19e0c9bab240000060808201526108769060b1906005611f72565b506108818685611814565b80156108c7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050505050565b6106be8160006118f3565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906106a99082908690610918908790612474565b610f40565b6065546001600160a01b031633146109775760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161073d565b60ae80546001600160a01b0319166001600160a01b0392909216919091179055565b6201517660ab54426109ab91906124cb565b106107595760146109bb60355490565b6109c5919061248c565b60a78190556109d69060059061248c565b60a85560aa80546000906109e990612549565b909155504260ab555050565b60008060b18381548110610a1957634e487b7160e01b600052603260045260246000fd5b600091825260208220015460ae546040516335313c2160e11b81523360048201529193506001600160a01b031690636a62784290602401602060405180830381600087803b158015610a6a57600080fd5b505af1158015610a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa29190612391565b600081815260b06020526040902085905590506106e082826118f3565b600060606201517660ab5442610ad591906124cb565b101591509250929050565b6065546001600160a01b03163314610b3a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161073d565b610b446000611998565b565b6065546001600160a01b03163314610ba05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161073d565b60ad55565b6060603780546106189061250e565b600081815260b0602052604081205460b180549091908110610be657634e487b7160e01b600052603260045260246000fd5b60009182526020909120015460ae54604051633f34d4cf60e21b8152600481018590523360248201529192506001600160a01b03169063fcd3533c90604401600060405180830381600087803b158015610c3f57600080fd5b505af1158015610c53573d6000803e3d6000fd5b505050506107598183611065565b6065546001600160a01b03163314610cbb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161073d565b60a980546001600160a01b0319166001600160a01b0392909216919091179055565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919083811015610d7a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161073d565b610d878286868403610f40565b506001949350505050565b6000336106a981858561130a565b60b18181548110610db057600080fd5b600091825260209091200154905081565b6000610dcc60355490565b60a660009054906101000a90046001600160a01b03166001600160a01b0316635cfc1a516040518163ffffffff1660e01b815260040160206040518083038186803b158015610e1a57600080fd5b505afa158015610e2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e529190612391565b610e5c919061248c565b905090565b6065546001600160a01b03163314610ebb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161073d565b6001600160a01b038116610f375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161073d565b6106be81611998565b6001600160a01b038316610fa25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161073d565b6001600160a01b0382166110035760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161073d565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60a7548211156110b75760405162461bcd60e51b815260206004820152601860248201527f6578636565642d746f74616c2d73656c6c2d616d6f756e740000000000000000604482015260640161073d565b60a85460aa54600090815260ac602090815260408083203384529091529020546110e2908490612474565b11156111305760405162461bcd60e51b815260206004820152601660248201527f6578636565642d616d6f756e742d7065722d7573657200000000000000000000604482015260640161073d565b8160a7600082825461114291906124cb565b909155505060aa54600090815260ac6020908152604080832033845290915281208054849290611173908490612474565b9091555060009050611183610dc1565b9050600061119184836124ac565b60a65460b25460ad549293506111e2926001600160a01b03909216913391906111ba90826124cb565b6111c490866124ac565b6111ce919061248c565b60a5546001600160a01b03169291906119ea565b60a65460a95460b25460ad5461120b936001600160a01b03908116931691906111c490866124ac565b60ad546040805133815260208101859052808201879052606081019290925260808201859052600060a08301524260c0830152517f2ae12737011a42b4d06bc58c0265f09379ffb8a8236a6dc338e79660ba20fc6e9181900360e00190a182611278576112783385611a59565b50505050565b6001600160a01b03838116600090815260346020908152604080832093861683529290522054600019811461127857818110156112fd5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161073d565b6112788484848403610f40565b6001600160a01b0383166113865760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161073d565b6001600160a01b0382166113e85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161073d565b6001600160a01b038316600090815260336020526040902054818110156114775760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161073d565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906114ae908490612474565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516114fa91815260200190565b60405180910390a3611278565b60008054610100900460ff1615611595578160ff16600114801561152a5750303b155b61158d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161073d565b506000919050565b60005460ff8084169116106116035760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161073d565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661168d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161073d565b610b44611ba4565b600054610100900460ff166117005760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161073d565b6107598282611c18565b600054610100900460ff166117755760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161073d565b670de0b6b3a7640000609755600160a38190556000609855609980546001600160a01b0319908116909155609a919091556002609b557f90430203e2d9ce04f00738d355173358b054545ecb52218de9c6fb01cbd9aeaf609c557f89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6609d55609e805490911673c89bd4e1632d3a43cb03aaad5262cbe4038bc571179055565b6001600160a01b03821661186a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161073d565b806035600082825461187c9190612474565b90915550506001600160a01b038216600090815260336020526040812080548392906118a9908490612474565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60006118fd610dc1565b9050600061190b84836124ac565b60a65460a55491925061192d916001600160a01b0390811691339116846119ea565b60408051338152602081018490529081018590526000606082015260808101849052600160a08201524260c08201527f2ae12737011a42b4d06bc58c0265f09379ffb8a8236a6dc338e79660ba20fc6e9060e00160405180910390a182611278576112783385611814565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052611278908590611caa565b6001600160a01b038216611ab95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161073d565b6001600160a01b03821660009081526033602052604090205481811015611b2d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161073d565b6001600160a01b0383166000908152603360205260408120838303905560358054849290611b5c9084906124cb565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611058565b505050565b600054610100900460ff16611c0f5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161073d565b610b4433611998565b600054610100900460ff16611c835760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161073d565b8151611c96906036906020850190611fbb565b508051611b9f906037906020840190611fbb565b6000611cff826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d8f9092919063ffffffff16565b805190915015611b9f5780806020019051810190611d1d9190612220565b611b9f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161073d565b6060611d9e8484600085611da6565b949350505050565b606082471015611e1e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161073d565b6001600160a01b0385163b611e755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161073d565b600080866001600160a01b03168587604051611e9191906123f9565b60006040518083038185875af1925050503d8060008114611ece576040519150601f19603f3d011682016040523d82523d6000602084013e611ed3565b606091505b5091509150611ee3828286611eee565b979650505050505050565b60608315611efd5750816106e0565b825115611f0d5782518084602001fd5b8160405162461bcd60e51b815260040161073d9190612430565b828054828255906000526020600020908101928215611f62579160200282015b82811115611f62578251825591602001919060010190611f47565b50611f6e92915061202e565b5090565b828054828255906000526020600020908101928215611f62579160200282015b82811115611f62578251829069ffffffffffffffffffff16905591602001919060010190611f92565b828054611fc79061250e565b90600052602060002090601f016020900481019282611fe95760008555611f62565b82601f1061200257805160ff1916838001178555611f62565b82800160010185558215611f625791820182811115611f62578251825591602001919060010190611f47565b5b80821115611f6e576000815560010161202f565b803561161d81612590565b600082601f83011261205e578081fd5b813567ffffffffffffffff8111156120785761207861257a565b61208b601f8201601f1916602001612443565b81815284602083860101111561209f578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156120ca578081fd5b81356106e081612590565b600080604083850312156120e7578081fd5b82356120f281612590565b9150602083013561210281612590565b809150509250929050565b600080600060608486031215612121578081fd5b833561212c81612590565b9250602084013561213c81612590565b929592945050506040919091013590565b6000806040838503121561215f578182fd5b823561216a81612590565b946020939093013593505050565b6000602080838503121561218a578182fd5b823567ffffffffffffffff808211156121a1578384fd5b818501915085601f8301126121b4578384fd5b8135818111156121c6576121c661257a565b8060051b91506121d7848301612443565b8181528481019084860184860187018a10156121f1578788fd5b8795505b838610156122135780358352600195909501949186019186016121f5565b5098975050505050505050565b600060208284031215612231578081fd5b815180151581146106e0578182fd5b60008060208385031215612252578182fd5b823567ffffffffffffffff80821115612269578384fd5b818501915085601f83011261227c578384fd5b81358181111561228a578485fd5b86602082850101111561229b578485fd5b60209290920196919550909350505050565b60008060008060008060008060006101208a8c0312156122cb578485fd5b893567ffffffffffffffff808211156122e2578687fd5b6122ee8d838e0161204e565b9a5060208c0135915080821115612303578687fd5b506123108c828d0161204e565b98505060408a013561232181612590565b965060608a013561233181612590565b955061233f60808b01612043565b945061234d60a08b01612043565b935060c08a0135925060e08a0135915061236a6101008b01612043565b90509295985092959850929598565b60006020828403121561238a578081fd5b5035919050565b6000602082840312156123a2578081fd5b5051919050565b600080604083850312156123bb578182fd5b82359150602083013561210281612590565b600081518084526123e58160208601602086016124e2565b601f01601f19169290920160200192915050565b6000825161240b8184602087016124e2565b9190910192915050565b8215158152604060208201526000611d9e60408301846123cd565b6020815260006106e060208301846123cd565b604051601f8201601f1916810167ffffffffffffffff8111828210171561246c5761246c61257a565b604052919050565b6000821982111561248757612487612564565b500190565b6000826124a757634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156124c6576124c6612564565b500290565b6000828210156124dd576124dd612564565b500390565b60005b838110156124fd5781810151838201526020016124e5565b838111156112785750506000910152565b600181811c9082168061252257607f821691505b6020821081141561254357634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561255d5761255d612564565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146106be57600080fdfea164736f6c6343000804000a";

type ELPTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ELPTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ELPToken__factory extends ContractFactory {
  constructor(...args: ELPTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ELPToken> {
    return super.deploy(overrides || {}) as Promise<ELPToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ELPToken {
    return super.attach(address) as ELPToken;
  }
  override connect(signer: Signer): ELPToken__factory {
    return super.connect(signer) as ELPToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ELPTokenInterface {
    return new utils.Interface(_abi) as ELPTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ELPToken {
    return new Contract(address, _abi, signerOrProvider) as ELPToken;
  }
}
