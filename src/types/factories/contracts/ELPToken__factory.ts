/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ELPToken, ELPTokenInterface } from "../../contracts/ELPToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_elpAmt",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentNav",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "efunToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_poolAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_efunToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_feeCollector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_elpAmt",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSellAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSellAmountPerAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "poolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_elpAmt",
        type: "uint256",
      },
    ],
    name: "sellToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalSellAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d2a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806368f8fc1011610104578063a42dce80116100a2578063c415b95c11610071578063c415b95c146103df578063c5c25216146103f2578063dd62ed3e146103fa578063f2fde38b1461043357600080fd5b8063a42dce8014610393578063a457c2d7146103a6578063a9059cbb146103b9578063b6fba3af146103cc57600080fd5b8063715018a6116100de578063715018a61461035f5780638da5cb5b1461036757806395d89b411461037857806397fc1a8a1461038057600080fd5b806368f8fc10146103025780636e04ff0d1461031557806370a082311461033657600080fd5b806323b872dd116101715780633f3b3b271161014b5780633f3b3b27146102d45780634585e33b146102dd57806361bc221a146102f057806366d602ae146102f957600080fd5b806323b872dd1461029f578063313ce567146102b257806339509351146102c157600080fd5b8063120b088b116101ad578063120b088b1461024e5780631755ff211461025757806318160ddd146102825780632397e4d71461028a57600080fd5b806306fdde03146101d4578063095ea7b3146101f25780630cd927a114610215575b600080fd5b6101dc610446565b6040516101e99190611bd9565b60405180910390f35b6102056102003660046119b3565b6104d8565b60405190151581526020016101e9565b610240610223366004611b52565b60ac60209081526000928352604080842090915290825290205481565b6040519081526020016101e9565b61024060a85481565b60a65461026a906001600160a01b031681565b6040516001600160a01b0390911681526020016101e9565b603554610240565b61029d610298366004611b22565b6104f0565b005b6102056102ad366004611973565b61068f565b604051601281526020016101e9565b6102056102cf3660046119b3565b6106b5565b61024060ab5481565b61029d6102eb3660046119fe565b6106f4565b61024060aa5481565b61024060a75481565b61029d6103103660046119b3565b610751565b6103286103233660046119fe565b610797565b6040516101e9929190611bbe565b61024061034436600461191f565b6001600160a01b031660009081526033602052604090205490565b61029d6107b7565b6065546001600160a01b031661026a565b6101dc61081d565b61029d61038e366004611a6b565b61082c565b61029d6103a136600461191f565b6108f9565b6102056103b43660046119b3565b610975565b6102056103c73660046119b3565b610a2a565b60a55461026a906001600160a01b031681565b60a95461026a906001600160a01b031681565b610240610a38565b61024061040836600461193b565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61029d61044136600461191f565b610ad8565b60606036805461045590611c86565b80601f016020809104026020016040519081016040528092919081815260200182805461048190611c86565b80156104ce5780601f106104a3576101008083540402835291602001916104ce565b820191906000526020600020905b8154815290600101906020018083116104b157829003601f168201915b5050505050905090565b6000336104e6818585610bba565b5060019392505050565b60a7548111156105475760405162461bcd60e51b815260206004820152601860248201527f6578636565642d746f74616c2d73656c6c2d616d6f756e74000000000000000060448201526064015b60405180910390fd5b60a85460aa54600090815260ac60209081526040808320338452909152902054610572908390611bec565b11156105c05760405162461bcd60e51b815260206004820152601660248201527f6578636565642d616d6f756e742d7065722d7573657200000000000000000000604482015260640161053e565b8060a760008282546105d29190611c43565b909155505060aa54600090815260ac6020908152604080832033845290915281208054839290610603908490611bec565b909155506000905081610614610a38565b61061e9190611c24565b60a65490915061065d906001600160a01b031633606461063f856062611c24565b6106499190611c04565b60a5546001600160a01b0316929190610cde565b60a65460a954610681916001600160a01b039081169116606461063f856002611c24565b61068b3383610d53565b5050565b60003361069d858285610ea1565b6106a8858585610f2d565b60019150505b9392505050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906104e690829086906106ef908790611bec565b610bba565b6201518060ab54426107069190611c43565b111561068b57601461071760355490565b6107219190611c04565b60a781905561073290600590611c04565b60a85560aa805460009061074590611cc1565b909155504260ab555050565b60008161075c610a38565b6107669190611c24565b60a65460a554919250610788916001600160a01b039081169133911684610cde565b610792838361112a565b505050565b600060606201518060ab54426107ad9190611c43565b1191509250929050565b6065546001600160a01b031633146108115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161053e565b61081b6000611209565b565b60606037805461045590611c86565b6000610838600161125b565b90508015610850576000805461ff0019166101001790555b61085a8888611371565b60a680546001600160a01b038089166001600160a01b03199283161790925560a5805488841690831617905560a980549286169290911691909117905561089f6113e6565b6108a9848361112a565b80156108ef576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6065546001600160a01b031633146109535760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161053e565b60a980546001600160a01b0319166001600160a01b0392909216919091179055565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919083811015610a125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161053e565b610a1f8286868403610bba565b506001949350505050565b6000336104e6818585610f2d565b6000610a4360355490565b60a660009054906101000a90046001600160a01b03166001600160a01b0316635cfc1a516040518163ffffffff1660e01b815260040160206040518083038186803b158015610a9157600080fd5b505afa158015610aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac99190611b3a565b610ad39190611c04565b905090565b6065546001600160a01b03163314610b325760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161053e565b6001600160a01b038116610bae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161053e565b610bb781611209565b50565b6001600160a01b038316610c1c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161053e565b6001600160a01b038216610c7d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161053e565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610d4d9085906114f0565b50505050565b6001600160a01b038216610db35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161053e565b6001600160a01b03821660009081526033602052604090205481811015610e275760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161053e565b6001600160a01b0383166000908152603360205260408120838303905560358054849290610e56908490611c43565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114610d4d5781811015610f205760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161053e565b610d4d8484848403610bba565b6001600160a01b038316610fa95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161053e565b6001600160a01b03821661100b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161053e565b6001600160a01b0383166000908152603360205260409020548181101561109a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161053e565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906110d1908490611bec565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161111d91815260200190565b60405180910390a3610d4d565b6001600160a01b0382166111805760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161053e565b80603560008282546111929190611bec565b90915550506001600160a01b038216600090815260336020526040812080548392906111bf908490611bec565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff16156112e9578160ff16600114801561127e5750303b155b6112e15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161053e565b506000919050565b60005460ff8084169116106113575760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161053e565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166113dc5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161053e565b61068b82826115d5565b600054610100900460ff166114515760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161053e565b670de0b6b3a7640000609755600160a38190556000609855609980546001600160a01b0319908116909155609a919091556002609b557f90430203e2d9ce04f00738d355173358b054545ecb52218de9c6fb01cbd9aeaf609c557f89cbf5af14e0328a3cd3a734f92c3832d729d431da79b7873a62cbeebd37beb6609d55609e805490911673c89bd4e1632d3a43cb03aaad5262cbe4038bc571179055565b6000611545826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116679092919063ffffffff16565b805190915015610792578080602001905181019061156391906119de565b6107925760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161053e565b600054610100900460ff166116405760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161053e565b81516116539060369060208501906117ff565b5080516107929060379060208401906117ff565b6060611676848460008561167e565b949350505050565b6060824710156116f65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161053e565b6001600160a01b0385163b61174d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161053e565b600080866001600160a01b031685876040516117699190611ba2565b60006040518083038185875af1925050503d80600081146117a6576040519150601f19603f3d011682016040523d82523d6000602084013e6117ab565b606091505b50915091506117bb8282866117c6565b979650505050505050565b606083156117d55750816106ae565b8251156117e55782518084602001fd5b8160405162461bcd60e51b815260040161053e9190611bd9565b82805461180b90611c86565b90600052602060002090601f01602090048101928261182d5760008555611873565b82601f1061184657805160ff1916838001178555611873565b82800160010185558215611873579182015b82811115611873578251825591602001919060010190611858565b5061187f929150611883565b5090565b5b8082111561187f5760008155600101611884565b600082601f8301126118a8578081fd5b813567ffffffffffffffff808211156118c3576118c3611cf2565b604051601f8301601f19908116603f011681019082821181831017156118eb576118eb611cf2565b81604052838152866020858801011115611903578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611930578081fd5b81356106ae81611d08565b6000806040838503121561194d578081fd5b823561195881611d08565b9150602083013561196881611d08565b809150509250929050565b600080600060608486031215611987578081fd5b833561199281611d08565b925060208401356119a281611d08565b929592945050506040919091013590565b600080604083850312156119c5578182fd5b82356119d081611d08565b946020939093013593505050565b6000602082840312156119ef578081fd5b815180151581146106ae578182fd5b60008060208385031215611a10578182fd5b823567ffffffffffffffff80821115611a27578384fd5b818501915085601f830112611a3a578384fd5b813581811115611a48578485fd5b866020828501011115611a59578485fd5b60209290920196919550909350505050565b600080600080600080600060e0888a031215611a85578283fd5b873567ffffffffffffffff80821115611a9c578485fd5b611aa88b838c01611898565b985060208a0135915080821115611abd578485fd5b50611aca8a828b01611898565b9650506040880135611adb81611d08565b94506060880135611aeb81611d08565b93506080880135611afb81611d08565b925060a0880135611b0b81611d08565b8092505060c0880135905092959891949750929550565b600060208284031215611b33578081fd5b5035919050565b600060208284031215611b4b578081fd5b5051919050565b60008060408385031215611b64578182fd5b82359150602083013561196881611d08565b60008151808452611b8e816020860160208601611c5a565b601f01601f19169290920160200192915050565b60008251611bb4818460208701611c5a565b9190910192915050565b82151581526040602082015260006116766040830184611b76565b6020815260006106ae6020830184611b76565b60008219821115611bff57611bff611cdc565b500190565b600082611c1f57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611c3e57611c3e611cdc565b500290565b600082821015611c5557611c55611cdc565b500390565b60005b83811015611c75578181015183820152602001611c5d565b83811115610d4d5750506000910152565b600181811c90821680611c9a57607f821691505b60208210811415611cbb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611cd557611cd5611cdc565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610bb757600080fdfea164736f6c6343000804000a";

type ELPTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ELPTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ELPToken__factory extends ContractFactory {
  constructor(...args: ELPTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ELPToken> {
    return super.deploy(overrides || {}) as Promise<ELPToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ELPToken {
    return super.attach(address) as ELPToken;
  }
  override connect(signer: Signer): ELPToken__factory {
    return super.connect(signer) as ELPToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ELPTokenInterface {
    return new utils.Interface(_abi) as ELPTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ELPToken {
    return new Contract(address, _abi, signerOrProvider) as ELPToken;
  }
}
